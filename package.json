{
  "name": "cs-commands-intellisense",
  "displayName": "CS Commands Intellisense",
  "description": "IntelliSense, Hover, Diagnostics, Linting, Formatting, Visualizer & Highlighting für CS2 Configs (cfg) – datengetrieben via JSON.",
  "version": "1.1.0",
  "publisher": "Lenam0n",
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:cs2cfg",
    "workspaceContains:**/*.cfg",
    "onCommand:csCommands.reloadDatabase",
    "onCommand:csCommands.generateAutoexec",
    "onCommand:csCommands.generateCrosshairCfg",
    "onCommand:csCommands.importCrosshairShareCode",
    "onCommand:csCommands.buildLaunchOptions",
    "onCommand:csCommands.insertBindSeries",
    "onCommand:csCommands.insertCustomBindSeries",
    "onCommand:csCommands.visualize",
    "onCommand:csCommands.visualize.keyHeatmap",
    "onCommand:csCommands.visualize.radarPreview",
    "onCommand:csCommands.visualize.hudPreview",
    "onCommand:csCommands.visualize.crosshairPreview",
    "onCommand:csCommands.language.switch"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "cs2cfg",
        "aliases": [
          "CS2 CFG",
          "cs2cfg"
        ],
        "extensions": [
          ".cfg",
          ".cfg.txt",
          ".autoexec",
          ".vcfg"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "cs2cfg",
        "scopeName": "source.cs2cfg",
        "path": "./data/cs2cfg.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "cs2cfg",
        "path": "./data/cs2cfg.code-snippets.json"
      }
    ],
    "commands": [
      {
        "command": "csCommands.reloadDatabase",
        "title": "CS Commands: Daten neu laden"
      },
      {
        "command": "csCommands.generateAutoexec",
        "title": "CS Commands: Autoexec generieren"
      },
      {
        "command": "csCommands.generateCrosshairCfg",
        "title": "CS Commands: Crosshair.cfg generieren"
      },
      {
        "command": "csCommands.importCrosshairShareCode",
        "title": "CS Commands: Crosshair aus Share-Code importieren"
      },
      {
        "command": "csCommands.buildLaunchOptions",
        "title": "CS Commands: CS2 Launch Options erstellen"
      },
      {
        "command": "csCommands.insertBindSeries",
        "title": "CS Commands: Insert Bind Series (Multi-Cursor Snippet)"
      },
      {
        "command": "csCommands.insertCustomBindSeries",
        "title": "CS Commands: Insert Custom Bind Series (Multi-Cursor Snippet)"
      },
      {
        "command": "csCommands.visualize",
        "title": "CS Commands: Visualize…"
      },
      {
        "command": "csCommands.visualize.keyHeatmap",
        "title": "CS Commands: Visualize Key Heatmap"
      },
      {
        "command": "csCommands.visualize.radarPreview",
        "title": "CS Commands: Visualize Radar Preview"
      },
      {
        "command": "csCommands.visualize.hudPreview",
        "title": "CS Commands: Visualize HUD Preview"
      },
      {
        "command": "csCommands.visualize.crosshairPreview",
        "title": "CS Commands: Visualize Crosshair Preview"
      },
      {
        "command": "csCommands.language.switch",
        "title": "CS Commands: Switch Language"
      }
    ],
    "configuration": {
      "title": "CS Commands",
      "properties": {
        "csCommands.language": {
          "type": "string",
          "enum": [
            "auto",
            "en",
            "de"
          ],
          "default": "auto",
          "markdownDescription": "Sprache der Extension. `auto` nutzt die VS Code UI-Sprache. Weitere Übersetzungen durch JSON-Dateien in `i18n/`."
        },
        "csCommands.languages": {
          "type": "array",
          "description": "Sprach-IDs, in denen IntelliSense/Features aktiv sind.",
          "items": {
            "type": "string"
          },
          "default": [
            "cs2cfg"
          ]
        },
        "csCommands.features.completion": {
          "type": "boolean",
          "default": true,
          "description": "Enable IntelliSense completions."
        },
        "csCommands.features.hover": {
          "type": "boolean",
          "default": true,
          "description": "Enable hover tooltips."
        },
        "csCommands.features.diagnostics": {
          "type": "string",
          "enum": [
            "off",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "Unbekannte Commands als Warnung/Fehler markieren oder ausschalten."
        },
        "csCommands.features.lint": {
          "type": "boolean",
          "default": true,
          "description": "Enable linting rules & quick fixes."
        },
        "csCommands.features.formatting": {
          "type": "boolean",
          "default": true,
          "description": "Enable document formatter."
        },
        "csCommands.features.decorations": {
          "type": "boolean",
          "default": true,
          "description": "Enable colored overlay highlighting (decorations)."
        },
        "csCommands.features.visualizer": {
          "type": "boolean",
          "default": true,
          "description": "Enable Visualizer Webviews."
        },
        "csCommands.features.snippets": {
          "type": "boolean",
          "default": true,
          "description": "Enable snippets & multi-cursor helpers."
        },
        "csCommands.highlight.enable": {
          "type": "boolean",
          "default": true,
          "description": "Master switch for decoration overlay."
        },
        "csCommands.highlight.colors.cmd": {
          "type": "string",
          "default": "#7aa2f7",
          "description": "Color for console commands (type==='cmd')."
        },
        "csCommands.highlight.colors.cvar": {
          "type": "string",
          "default": "#9ece6a",
          "description": "Color for CVars."
        },
        "csCommands.highlight.colors.aliasDef": {
          "type": "string",
          "default": "#e0af68",
          "description": "Color for alias definition names."
        },
        "csCommands.highlight.colors.aliasUse": {
          "type": "string",
          "default": "#e0af68",
          "description": "Color for alias usage."
        },
        "csCommands.highlight.colors.bindKey": {
          "type": "string",
          "default": "#bb9af7",
          "description": "Color for bind keys."
        },
        "csCommands.highlight.colors.bindValue": {
          "type": "string",
          "default": "#7dcfff",
          "description": "Color for bind values."
        },
        "csCommands.highlight.colors.plusAction": {
          "type": "string",
          "default": "#f7768e",
          "description": "Color for + / - actions."
        },
        "csCommands.highlight.colors.forbidden": {
          "type": "string",
          "default": "#ff5370",
          "description": "Color for forbidden lines (exec/script)."
        },
        "csCommands.highlight.style": {
          "type": "object",
          "default": {},
          "markdownDescription": "Optional per-token style, z. B.: `{ \"aliasDef\": { \"underline\": true, \"opacity\": 0.9 } }`"
        },
        "csCommands.format.alignBinds": {
          "type": "boolean",
          "default": true,
          "description": "Align bind groups in columns."
        },
        "csCommands.format.commentColumn": {
          "type": [
            "string",
            "number"
          ],
          "default": "auto",
          "markdownDescription": "`auto` or fixed column for comments."
        },
        "csCommands.format.maxBlankLines": {
          "type": "number",
          "default": 1,
          "description": "Maximum consecutive blank lines."
        },
        "csCommands.format.formatAliasSpacing": {
          "type": "boolean",
          "default": true,
          "description": "Normalize ';' spacing in alias expansions."
        },
        "csCommands.paths.commandsJson": {
          "type": "string",
          "default": "",
          "markdownDescription": "Pfad (relativ zur Workspace-Root) zu deiner **CommandList** JSON. Beispiel: `data/commands.json`."
        },
        "csCommands.paths.crosshairCodeMap": {
          "type": "string",
          "default": "",
          "markdownDescription": "Optionaler Pfad zu einer JSON-Datei mit Share-Code → Crosshair-CVars Mapping."
        },
        "csCommands.paths.templatesDir": {
          "type": "string",
          "default": "assets/templates",
          "markdownDescription": "Override templates directory (relative to extension root)."
        },
        "csCommands.paths.launchCatalog": {
          "type": "string",
          "default": "data/cs2.launchOptions.json",
          "markdownDescription": "Override path to the Launch Options catalog JSON."
        },
        "csCommands.dataPath": {
          "type": "string",
          "default": "",
          "markdownDescription": "DEPRECATED. Nutze `csCommands.paths.commandsJson`."
        },
        "csCommands.visualize.theme": {
          "type": "string",
          "enum": [
            "auto",
            "light",
            "dark"
          ],
          "default": "auto",
          "description": "Visualizer theme."
        },
        "csCommands.visualize.heatmapIncludeMouse": {
          "type": "boolean",
          "default": false,
          "description": "Include mouse grid in key heatmap (if implemented)."
        },
        "csCommands.visualize.heatmapFilter": {
          "type": "string",
          "default": "",
          "description": "Default filter text for heatmap."
        },
        "csCommands.crosshair.codeMapPath": {
          "type": "string",
          "default": "",
          "markdownDescription": "Optionaler Pfad (relativ zur Workspace-Root) zu einer JSON-Datei mit bekannten Crosshair-Share-Codes → CVars."
        },
        "csCommands.lint.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the CS CFG linter."
        },
        "csCommands.lint.rules": {
          "type": "object",
          "default": {
            "exec-script-forbidden": "warning",
            "duplicate-bind-key": "warning",
            "alias-cycle": "error",
            "alias-unused": "info",
            "alias-spacing": "hint"
          },
          "markdownDescription": "Per-rule severity. Use \"off\" to disable a rule."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -w -p ./",
    "test": "jest",
    "lint": "eslint . --ext .ts"
  },
  "devDependencies": {
    "@types/jest": "^30.0.0",
    "@types/node": "^24.3.0",
    "@types/vscode": "^1.103.0",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.0",
    "jest": "^30.0.5",
    "ts-jest": "^29.4.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.9.2"
  }
}
