{
  "schema_version": 1,
  "items": [
    {
      "group": "_",
      "command": "_record",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Record a demo incrementally."
    },

    {
      "command": "adsp_debug",
      "type": "convar",
      "default": 0,
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "ai_debug_dyninteractions",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Debug the NPC dynamic interaction system."
    },
    {
      "command": "ai_debug_los",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "NPC Line-Of-Sight debug mode. 1: highlight solid blockers with white boxes. 2: also show non-solid entities that would block if solid."
    },
    {
      "command": "ai_debug_off_nav",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "ai_debug_shoot_positions",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "ai_disabled",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "ai_show_current_nav",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "alias",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Alias a command."
    },
    {
      "command": "ammo_338mag_max",
      "type": "convar",
      "default": 30,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_357sig_max",
      "type": "convar",
      "default": 52,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_357sig_min_max",
      "type": "convar",
      "default": 12,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_357sig_p250_max",
      "type": "convar",
      "default": 26,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_357sig_small_max",
      "type": "convar",
      "default": 24,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_45acp_max",
      "type": "convar",
      "default": 100,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_50AE_max",
      "type": "convar",
      "default": 35,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_556mm_box_max",
      "type": "convar",
      "default": 200,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_556mm_max",
      "type": "convar",
      "default": 90,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_556mm_small_max",
      "type": "convar",
      "default": 40,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_57mm_max",
      "type": "convar",
      "default": 100,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_762mm_max",
      "type": "convar",
      "default": 90,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_9mm_max",
      "type": "convar",
      "default": 120,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_buckshot_max",
      "type": "convar",
      "default": 32,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_grenade_limit_breachcharge",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_grenade_limit_bumpmine",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_grenade_limit_default",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_grenade_limit_flashbang",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_grenade_limit_snowballs",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_grenade_limit_total",
      "type": "convar",
      "default": 4,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_grenade_limit_tripwirefire",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_item_limit_adrenaline",
      "type": "convar",
      "default": 5,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "ammo_item_limit_healthshot",
      "type": "convar",
      "default": 4,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "anim_resource_validate_on_load",
      "type": "convar",
      "default": true,
      "flags": ["release"],
      "description": "Validates the animation group channel list against the animations on load for every animation"
    },
    {
      "command": "animated_material_attributes",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "animevents_dump",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "List all the currently registered anim events."
    },
    {
      "command": "animgraph_debug",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Debug animation graph"
    },
    {
      "command": "animgraph_debug_entindex",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "The entity to specifically debug"
    },
    {
      "command": "animgraph_footlock_ik_enable",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable IK."
    },
    {
      "command": "animgraph_record_all",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Automatically start recording AnimGraphs when they get created, and save them to disk when they are destroyed"
    },
    {
      "command": "animgraph_slope_draw_raycasts",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "animgraph_slope_enable",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "animgraph_trace_static_only",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "autobuy",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "clientcmd_can_execute"],
      "description": "Attempt to purchase items with the order listed in cl_autobuy"
    },
    {
      "command": "axis",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Draw an axis Arguments: x y z pitch yaw roll <lifetime = 10.0> <r g b a>"
    },
    {
      "command": "battery_saver",
      "type": "convar",
      "default": false,
      "flags": ["a"],
      "description": "OBSOLETE (replaced by mobile_fps_*). Battery saver mode. 0=off, 1=on"
    },
    {
      "command": "benchframe",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Takes a snapshot of a particular frame in a time demo."
    },
    {
      "command": "bind",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Bind a key."
    },
    {
      "command": "binddefaults",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Bind all keys to their default values."
    },
    {
      "command": "bindss",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Bind a key for a particular splitscreen player."
    },
    {
      "command": "bot_add",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Adds a bot matching the given criteria. Usage: bot_add <ct|t> <type> <difficulty> <name>"
    },
    {
      "command": "bot_add_ct",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Adds a Counter-Terrorist bot. Usage: bot_add_ct <type> <difficulty> <name>"
    },
    {
      "command": "bot_add_t",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Adds a Terrorist bot. Usage: bot_add_t <type> <difficulty> <name>"
    },
    {
      "command": "bot_all_weapons",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Allows the bots to use all weapons"
    },
    {
      "command": "bot_allow_grenades",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "If nonzero, bots may use grenades."
    },
    {
      "command": "bot_allow_machine_guns",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "If nonzero, bots may use the machine gun."
    },
    {
      "command": "bot_allow_pistols",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "If nonzero, bots may use pistols."
    },
    {
      "command": "bot_allow_rifles",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "If nonzero, bots may use rifles."
    },
    {
      "command": "bot_allow_rogues",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "If nonzero, bots may occasionally go 'rogue' (ignore radio/scenario)."
    },
    {
      "command": "bot_allow_shotguns",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "If nonzero, bots may use shotguns."
    },
    {
      "command": "bot_allow_snipers",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "If nonzero, bots may use sniper rifles."
    },
    {
      "command": "bot_allow_sub_machine_guns",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "If nonzero, bots may use SMGs."
    },
    {
      "command": "bot_autodifficulty_threshold_high",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Upper bound above Average Human Contribution Score to increase difficulty."
    },
    {
      "command": "bot_autodifficulty_threshold_low",
      "type": "convar",
      "default": -2,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Lower bound below Average Human Contribution Score to decrease difficulty."
    },
    {
      "command": "bot_chatter",
      "type": "convar",
      "default": "normal",
      "flags": ["sv", "rep", "release"],
      "description": "Control how bots talk. Values: 'off', 'radio', 'minimal', 'normal'."
    },
    {
      "command": "bot_controllable",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "Whether bots can be controlled by players."
    },
    {
      "command": "bot_coop_force_throw_grenade_chance",
      "type": "convar",
      "default": 0.3,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "bot_coop_idle_max_vision_distance",
      "type": "convar",
      "default": 1400,
      "flags": ["sv", "rep", "release"],
      "description": "Max distance bots can see targets (coop) when idle/dormant/hiding/asleep."
    },
    {
      "command": "bot_crouch",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "bot_debug",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "rep", "cheat"],
      "description": "For internal testing purposes."
    },
    {
      "command": "bot_debug_target",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "rep", "cheat"],
      "description": "For internal testing purposes."
    },
    {
      "command": "bot_defer_to_human_goals",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "If nonzero and a human is on team, bots won't do scenario tasks."
    },
    {
      "command": "bot_defer_to_human_items",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "If nonzero and a human is on team, bots won't get scenario items."
    },
    {
      "command": "bot_difficulty",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "rep", "release"],
      "description": "Skill of bots joining: 0=easy, 1=normal, 2=hard, 3=expert."
    },
    {
      "command": "bot_dont_shoot",
      "type": "convar",
      "default": false,
      "flags": ["sv", "rep", "cheat", "release"],
      "description": "If nonzero, bots will not fire weapons (for debugging)."
    },
    {
      "command": "bot_freeze",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "bot_goto_mark",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Send a bot to the marked nav area (test nav meshes)."
    },
    {
      "command": "bot_goto_selected",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Send a bot to the selected nav area (test nav meshes)."
    },
    {
      "command": "bot_ignore_enemies",
      "type": "convar",
      "default": false,
      "flags": ["sv", "rep", "cheat"],
      "description": "If nonzero, bots will ignore enemies (for debugging)."
    },
    {
      "command": "bot_ignore_players",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Bots will not see non-bot players."
    },
    {
      "command": "bot_join_after_player",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "If nonzero, bots wait until a player joins before entering."
    },
    {
      "command": "bot_join_team",
      "type": "convar",
      "default": "any",
      "flags": ["sv", "rep", "release"],
      "description": "Team bots will join. Allowed: 'any','T','CT'."
    },
    {
      "command": "bot_kick",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Kick a specific bot, or all matching. Usage: bot_kick <ct|t> <type> <difficulty> <name>"
    },
    {
      "command": "bot_kill",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Kill specific/all matching bots. Usage: bot_kill <ct|t> <type> <difficulty> <name>"
    },
    {
      "command": "bot_knives_only",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Restrict bots to knives only."
    },
    {
      "command": "bot_loadout",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Bots are given these items at round start."
    },
    {
      "command": "bot_max_visible_smoke_length",
      "type": "convar",
      "default": 200,
      "flags": ["sv", "rep", "release"],
      "description": "Bots will see players through smoke up to this length."
    },
    {
      "command": "bot_max_vision_distance_override",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "rep", "release"],
      "description": "Max distance bots can see targets."
    },
    {
      "command": "bot_mimic",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Bot uses usercmd of player by index."
    },
    {
      "command": "bot_mimic_spec_buttons",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "+attack, +jump etc used for spectator control instead of passing to bot."
    },
    {
      "command": "bot_mimic_yaw_offset",
      "type": "convar",
      "default": 180,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "bot_pistols_only",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Restrict bots to pistols only."
    },
    {
      "command": "bot_place",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Place a bot at the point the local player is looking."
    },
    {
      "command": "bot_quota",
      "type": "convar",
      "default": 10,
      "flags": ["sv", "rep", "release"],
      "description": "Total number of bots in the game."
    },
    {
      "command": "bot_quota_mode",
      "type": "convar",
      "default": "fill",
      "flags": ["sv", "rep", "release"],
      "description": "Quota mode: 'normal', 'fill', 'match'."
    },
    {
      "command": "bot_randombuy",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Bots ignore preferred weapons and buy random."
    },
    {
      "command": "bot_show_battlefront",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Show areas where rushing players initially meet."
    },
    {
      "command": "bot_show_nav",
      "type": "convar",
      "default": false,
      "flags": ["sv", "rep", "cheat"],
      "description": "For internal testing purposes."
    },
    {
      "command": "bot_show_occupy_time",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Show when each nav area can first be reached by each team."
    },
    {
      "command": "bot_snipers_only",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Restrict bots to sniper rifles only."
    },
    {
      "command": "bot_stop",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "rep", "cheat"],
      "description": "Stop bots. Args: all | not_bomber | t | ct"
    },
    {
      "command": "bot_traceview",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "rep", "cheat"],
      "description": "For internal testing purposes."
    },
    {
      "command": "bot_zombie",
      "type": "convar",
      "default": false,
      "flags": ["sv", "rep", "cheat"],
      "description": "If nonzero, bots stay idle and do not attack."
    },
    {
      "command": "box",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Draw a bbox. Args: minx miny miny maxx maxy maxz <lifetime> <r g b a>"
    },
    {
      "command": "buddha",
      "type": "convar",
      "default": false,
      "flags": ["sv", "nf", "cheat"],
      "description": "Player takes damage but won't die."
    },
    {
      "command": "buddha_ignore_bots",
      "type": "convar",
      "default": false,
      "flags": ["sv", "nf", "cheat"],
      "description": "Bots always buddha 0"
    },
    {
      "command": "buddha_reset_hp",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "nf", "cheat"],
      "description": "HP to set when damaged below zero in Buddha Mode"
    },
    {
      "command": "bug_submitter_override",
      "type": "convar",
      "default": 0,
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "buymenu",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "server_can_execute"],
      "description": "Show or hide main buy menu"
    },
    {
      "command": "buyrandom",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Buy random primary and secondary (DM oriented)."
    },
    {
      "command": "c_maxdistance",
      "type": "convar",
      "default": 200,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "c_maxpitch",
      "type": "convar",
      "default": 90,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "c_maxyaw",
      "type": "convar",
      "default": 135,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "c_mindistance",
      "type": "convar",
      "default": 30,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "c_minpitch",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "c_minyaw",
      "type": "convar",
      "default": -135,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "c_orthoheight",
      "type": "convar",
      "default": 100,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "c_orthowidth",
      "type": "convar",
      "default": 100,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "c_thirdpersonshoulder",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "c_thirdpersonshoulderaimdist",
      "type": "convar",
      "default": 120,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "c_thirdpersonshoulderdist",
      "type": "convar",
      "default": 40,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "c_thirdpersonshoulderheight",
      "type": "convar",
      "default": 5,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "c_thirdpersonshoulderoffset",
      "type": "convar",
      "default": 20,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "callvote",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Start a vote on an issue."
    },
    {
      "command": "cam_collision",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a"],
      "description": "Keep third-person camera from passing through walls."
    },
    {
      "command": "cam_command",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Tells camera to change modes"
    },
    {
      "command": "cam_idealdelta",
      "type": "convar",
      "default": 4,
      "flags": ["cl", "a"],
      "description": "Speed when matching offset to ideal angles (thirdperson)."
    },
    {
      "command": "cam_idealdist",
      "type": "convar",
      "default": 150,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "cam_ideallag",
      "type": "convar",
      "default": 4,
      "flags": ["cl", "a"],
      "description": "Lag used when matching offset to ideal angles (thirdperson)."
    },
    {
      "command": "cam_idealpitch",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "cam_idealyaw",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "cam_showangles",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "In thirdperson, print viewangles/idealangles/cameraoffsets."
    },
    {
      "command": "cam_snapto",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "camortho",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Switch to orthographic camera."
    },
    {
      "command": "cancelselect",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "cash_player_bomb_defused",
      "type": "convar",
      "default": 300,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_player_bomb_planted",
      "type": "convar",
      "default": 300,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_player_damage_hostage",
      "type": "convar",
      "default": -30,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_player_get_killed",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },

    {
      "command": "cash_player_interact_with_hostage",
      "type": "convar",
      "default": 300,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_player_killed_enemy_default",
      "type": "convar",
      "default": 300,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_player_killed_enemy_factor",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_player_killed_hostage",
      "type": "convar",
      "default": -1000,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_player_killed_teammate",
      "type": "convar",
      "default": -300,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_player_rescued_hostage",
      "type": "convar",
      "default": 1000,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_player_respawn_amount",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_bonus_shorthanded",
      "type": "convar",
      "default": 1000,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_elimination_bomb_map",
      "type": "convar",
      "default": 3250,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_elimination_hostage_map_ct",
      "type": "convar",
      "default": 3000,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_elimination_hostage_map_t",
      "type": "convar",
      "default": 3000,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_hostage_alive",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_hostage_interaction",
      "type": "convar",
      "default": 600,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_loser_bonus",
      "type": "convar",
      "default": 1400,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_loser_bonus_consecutive_rounds",
      "type": "convar",
      "default": 500,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_planted_bomb_but_defused",
      "type": "convar",
      "default": 800,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_rescued_hostage",
      "type": "convar",
      "default": 600,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_survive_guardian_wave",
      "type": "convar",
      "default": 1000,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_terrorist_win_bomb",
      "type": "convar",
      "default": 3500,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_win_by_defusing_bomb",
      "type": "convar",
      "default": 3500,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_win_by_hostage_rescue",
      "type": "convar",
      "default": 2900,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_win_by_time_running_out_bomb",
      "type": "convar",
      "default": 3250,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_win_by_time_running_out_hostage",
      "type": "convar",
      "default": 3250,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "cash_team_winner_bonus_consecutive_rounds",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },

    {
      "command": "cast_aabb",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Tests box collision detection"
    },
    {
      "command": "cast_bullet",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Tests bullet cast"
    },
    {
      "command": "cast_capsule",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Tests capsule collision detection"
    },
    {
      "command": "cast_convex",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Tests convex hull collision detection"
    },
    {
      "command": "cast_cylinder",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Tests cylinder collision detection"
    },
    {
      "command": "cast_intervals",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Tests interval ray cast"
    },
    {
      "command": "cast_obb",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Tests cylinder collision detection"
    },
    {
      "command": "cast_physics",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Tests physics shape collision detection"
    },
    {
      "command": "cast_ray",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Tests ray cast"
    },
    {
      "command": "cast_sphere",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Tests sphere cast"
    },

    {
      "command": "cc_delay_time",
      "type": "convar",
      "default": 0.25,
      "flags": ["cl", "a"],
      "description": "Close caption delay before showing caption."
    },
    {
      "command": "cc_lang",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": "Current close caption language (emtpy = use game UI language)"
    },
    {
      "command": "cc_linger_time",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a"],
      "description": "Close caption linger time."
    },
    {
      "command": "cc_spectator_only",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "cc_subtitles",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": "If set, don't show sound effect captions, just voice overs (i.e., won't help hearing impaired players)."
    },
    {
      "command": "cc_vr_caption_speed",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a"],
      "description": "0 = slow, 1 = medium (default), 2 = fast"
    },
    {
      "command": "cc_vr_font_size",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a"],
      "description": "0 = small, 1 = med (default), 2 = large"
    },
    {
      "command": "cc_vr_width",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a"],
      "description": "0 = narrow, 1 = med (default), 2 = wide"
    },
    {
      "command": "changelevel",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "changelevel <mapname> :Multiplayer change level."
    },
    {
      "command": "cl_allow_animated_avatars",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "release"],
      "description": "Whether or not to allow animated avatars"
    },
    {
      "command": "cl_auto_cursor_scale",
      "type": "convar",
      "default": true,
      "flags": ["a"],
      "description": "Automatic cursor size scaling."
    },
    {
      "command": "cl_autobuy",
      "type": "convar",
      "default": "vesthelm vest m4a1 ak47 famas galilar mp7 nova defuser",
      "flags": ["cl", "release"],
      "description": "The order in which autobuy will attempt to purchase items"
    },
    {
      "command": "cl_autohelp",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "user"],
      "description": "Auto-help"
    },
    {
      "command": "cl_avatar_convert_png",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat", "release"],
      "description": "Converts all rgb avatars in the avatars directory to png"
    },
    {
      "command": "cl_avatar_convert_rgb",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat", "release"],
      "description": "Converts all png avatars in the avatars directory to rgb"
    },
    {
      "command": "cl_axis",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Draw an axis Arguments: x y z pitch yaw roll <lifetime = 10.0> <r g b a>"
    },
    {
      "command": "cl_borrow_music_from_player_slot",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "cl_box",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Draw a bbox Arguments: minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>"
    },
    {
      "command": "cl_buywheel_donate_key",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a", "per_user", "release"],
      "description": "Set the key to use for donation in the buy menu. 0: Left Control; 1: Left Alt; 2: Left Shift."
    },
    {
      "command": "cl_buywheel_nonumberpurchasing",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "per_user", "release"],
      "description": "Set non-zero to prevent buy wheel from purchasing via number keys"
    },
    {
      "command": "cl_change_callback_limit",
      "type": "convar",
      "default": 0.2,
      "flags": ["cl", "release"],
      "description": "change callback msec warning limit"
    },
    {
      "command": "cl_chatfilters",
      "type": "convar",
      "default": 63,
      "flags": ["cl", "a"],
      "description": "Stores the chat filter settings"
    },
    {
      "command": "cl_checkdeclareclasses",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Check game code serializers"
    },
    {
      "command": "cl_clock_correction",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable/disable clock correction on the client."
    },
    {
      "command": "cl_clock_correction_adjustment_max_amount",
      "type": "convar",
      "default": 200,
      "flags": ["cheat"],
      "description": "Max ms/sec allowed to correct the client clock when offset is large."
    },
    {
      "command": "cl_clock_correction_adjustment_max_offset",
      "type": "convar",
      "default": 90,
      "flags": ["cheat"],
      "description": "As offset grows from min to this value (ms), apply max adjustment."
    },
    {
      "command": "cl_clock_correction_adjustment_min_offset",
      "type": "convar",
      "default": 10,
      "flags": ["cheat"],
      "description": "If offset is less than this (ms), no clock correction is applied."
    },
    {
      "command": "cl_clock_correction_force_server_tick",
      "type": "convar",
      "default": 999,
      "flags": ["cheat"],
      "description": "Force clock correction to match server tick + this offset (-999 disables)."
    },
    {
      "command": "cl_clockdrift_max_ticks",
      "type": "convar",
      "default": 3,
      "flags": ["cheat"],
      "description": "Max ticks the clock may drift before client snaps to server."
    },
    {
      "command": "cl_clutch_mode",
      "type": "convar",
      "default": false,
      "flags": ["cl", "release"],
      "description": "Silence voice and other distracting sounds until the end of round or next death."
    },
    {
      "command": "cl_color",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "user"],
      "description": "Preferred teammate color"
    },
    {
      "command": "cl_connectionretrytime_p2p",
      "type": "convar",
      "default": 20,
      "flags": ["release"],
      "description": "Number of seconds over which to spread retry attempts for P2P."
    },
    {
      "command": "cl_cq_min_queue",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "user"],
      "description": "Allows client to disable (=-1), defer to server (=0), or request a certain min-command queue size for games that support the command queue (IsUsingCommandQueue()) for CUserCmds."
    },
    {
      "command": "cl_crosshair_drawoutline",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "per_user"],
      "description": "Draws a black outline around the crosshair for better visibility"
    },
    {
      "command": "cl_crosshair_dynamic_maxdist_splitratio",
      "type": "convar",
      "default": 0.35,
      "flags": ["cl", "a", "per_user"],
      "description": "If using cl_crosshairstyle 2, ratio to determine inner/outer pip lengths."
    },
    {
      "command": "cl_crosshair_dynamic_splitalpha_innermod",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "per_user"],
      "description": "Alpha modification for INNER crosshair pips once split. [0 - 1]"
    },
    {
      "command": "cl_crosshair_dynamic_splitalpha_outermod",
      "type": "convar",
      "default": 0.5,
      "flags": ["cl", "a", "per_user"],
      "description": "Alpha modification for OUTER crosshair pips once split. [0.3 - 1]"
    },
    {
      "command": "cl_crosshair_dynamic_splitdist",
      "type": "convar",
      "default": 6,
      "flags": ["cl", "a", "per_user"],
      "description": "For style 2: distance at which pips split (default 7)."
    },
    {
      "command": "cl_crosshair_friendly_warning",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "release"],
      "description": "0: off, 1: on"
    },
    {
      "command": "cl_crosshair_outlinethickness",
      "type": "convar",
      "default": 1.35827,
      "flags": ["cl", "a", "per_user"],
      "description": "Crosshair outline thickness (0-3)"
    },
    {
      "command": "cl_crosshair_recoil",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "cl_crosshair_sniper_show_normal_inaccuracy",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "per_user"],
      "description": "Include standing inaccuracy when determining sniper crosshair blur"
    },
    {
      "command": "cl_crosshair_sniper_width",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "per_user"],
      "description": "If >1 sniper scope cross lines gain extra width (1 = 1px hairline)"
    },
    {
      "command": "cl_crosshair_t",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "per_user"],
      "description": "T style crosshair"
    },
    {
      "command": "cl_crosshairalpha",
      "type": "convar",
      "default": 255,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "cl_crosshaircolor",
      "type": "convar",
      "default": 5,
      "flags": ["cl", "a", "per_user"],
      "description": "Set crosshair color as defined in game_options.consoles.txt"
    },
    {
      "command": "cl_crosshaircolor_b",
      "type": "convar",
      "default": 255,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "cl_crosshaircolor_g",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "cl_crosshaircolor_r",
      "type": "convar",
      "default": 255,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "cl_crosshairdot",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "cl_crosshairgap",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "cl_crosshairgap_useweaponvalue",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "per_user"],
      "description": "Gap updates dynamically based on current weapon"
    },
    {
      "command": "cl_crosshairsize",
      "type": "convar",
      "default": 4.41819,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "cl_crosshairstyle",
      "type": "convar",
      "default": 2,
      "flags": ["cl", "a", "per_user"],
      "description": "0=DEFAULT(DISABLED), 1=DEFAULT STATIC(DISABLED), 2=DEFAULT (fixed inner), 3=ACCURATE DYNAMIC(DISABLED), 4=DEFAULT STATIC, 5=LEGACY"
    },
    {
      "command": "cl_crosshairthickness",
      "type": "convar",
      "default": 0.898255,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "cl_crosshairusealpha",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "cl_cursor_scale",
      "type": "convar",
      "default": 1,
      "flags": ["a"],
      "description": "Cursor size scaling factor."
    },
    {
      "command": "cl_dangerzone_approaching_sound_radius",
      "type": "convar",
      "default": 700,
      "flags": ["cl", "cheat", "release"],
      "description": ""
    },
    {
      "command": "cl_dangerzone_moving_sound_volume",
      "type": "convar",
      "default": 0.5,
      "flags": ["cl", "cheat", "release"],
      "description": ""
    },
    {
      "command": "cl_dangerzone_sound_volume",
      "type": "convar",
      "default": 0.2,
      "flags": ["cl", "cheat", "release"],
      "description": ""
    },
    {
      "command": "cl_deathcam_audio_mix_phase1_fade_amount",
      "type": "convar",
      "default": 0.15,
      "flags": ["cl", "release"],
      "description": "Sets the amount of ducking to do on death cam fade out. 1 = full DeathFadeLayer."
    },
    {
      "command": "cl_deathcam_audio_mix_phase1_fade_time",
      "type": "convar",
      "default": 2,
      "flags": ["cl", "release"],
      "description": "Time to fade out over (seconds)."
    },
    {
      "command": "cl_deathcam_audio_mix_phase2_fade_amount",
      "type": "convar",
      "default": 0.5,
      "flags": ["cl", "release"],
      "description": "Amount of ducking on phase 2 fade."
    },
    {
      "command": "cl_deathcam_audio_mix_phase2_fade_time",
      "type": "convar",
      "default": 0.4,
      "flags": ["cl", "release"],
      "description": "Time to fade out over (seconds)."
    },
    {
      "command": "cl_deathcampanel_position_dynamic",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a"],
      "description": "Turn on/off deathcam's kill panel dynamic Y movement"
    },
    {
      "command": "cl_debounce_zoom",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "user", "per_user"],
      "description": "Whether to disable holding secondary fire to cycle zoom levels"
    },
    {
      "command": "cl_debug_overlays_broadcast",
      "type": "convar",
      "default": false,
      "flags": ["release"],
      "description": "Render debug overlays from server."
    },
    {
      "command": "cl_debugoverlay_cycle_domain",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Toggles visibility of the debug overlay system."
    },
    {
      "command": "cl_debugoverlay_cycle_state",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Toggles visibility of the debug overlay system."
    },
    {
      "command": "cl_debugoverlay_hide_imgui",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Hides the overlay."
    },
    {
      "command": "cl_debugoverlay_toggle",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Toggles visibility of the debug overlay system."
    },
    {
      "command": "cl_disable_deathcam_audio_mix_fade_out",
      "type": "convar",
      "default": false,
      "flags": ["cl", "release"],
      "description": "Disable audio being silenced while the death cam fades out."
    },
    {
      "command": "cl_disable_ragdolls",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_disable_round_end_report",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "cl_display_game_events",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_dm_buyrandomweapons",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "release"],
      "description": "Auto receive a random weapon on spawn in deathmatch (1) or last weapon (0)"
    },
    {
      "command": "cl_draw_only_deathnotices",
      "type": "convar",
      "default": false,
      "flags": ["cl", "release"],
      "description": "Draw only crosshair and death notices (for moviemaking)"
    },
    {
      "command": "cl_drawcross",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Draws a cross at the given location. Args: x y z"
    },
    {
      "command": "cl_drawhud",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable the rendering of the HUD"
    },
    {
      "command": "cl_drawhud_force_deathnotices",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "release"],
      "description": "0=default; 1=draw deathnotices even if HUD disabled; -1=force no deathnotices"
    },
    {
      "command": "cl_drawhud_force_radar",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "release"],
      "description": "0=default; 1=draw radar even if HUD disabled; -1=force no radar"
    },
    {
      "command": "cl_drawhud_force_teamid_overhead",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "release"],
      "description": "0=default; 1=draw team id even if HUD disabled; -1=force no team id"
    },
    {
      "command": "cl_drawhud_specvote",
      "type": "convar",
      "default": true,
      "flags": ["cl", "release"],
      "description": "1: default; 0: disables vote UI for spectators"
    },
    {
      "command": "cl_drawline",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Draws line between two 3D points. Green=no collision, Red=collides. Args: x1 y1 z1 x2 y2 z2"
    },
    {
      "command": "cl_dumpentity",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Dumps info about an entity"
    },
    {
      "command": "cl_ent_absbox",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the total bounding box for the given entity(ies) in green."
    },
    {
      "command": "cl_ent_actornames",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the entity name for all entities that have ShouldDisplayInActorNames true"
    },
    {
      "command": "cl_ent_animgraph_debug",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays debug draws about the given entity(ies) animgraph"
    },
    {
      "command": "cl_ent_animgraph_record",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Toggles recording of animgraph replay for given entity(ies)"
    },
    {
      "command": "cl_ent_attachments",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the attachment points on an entity"
    },
    {
      "command": "cl_ent_bbox",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the movement bounding box for the given entity(ies) in orange"
    },
    {
      "command": "cl_ent_call",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "ent_call <funcname> <option:entname> on current look target or filtername"
    },
    {
      "command": "cl_ent_clear_debug_overlays",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Clears all debug overlays"
    },
    {
      "command": "cl_ent_find",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Find and list all entities with classnames/targetnames containing substring"
    },
    {
      "command": "cl_ent_find_index",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Display data for entity matching specified index"
    },
    {
      "command": "cl_ent_grab",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Grabs the object in front of the player. Options: -loose -multiple -toggle"
    },
    {
      "command": "cl_ent_hierarchy",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Prints the entity hierarchy tree rooted at the specified ent(s)"
    },
    {
      "command": "cl_ent_hitbox",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the hitboxes for the given entity(ies)"
    },
    {
      "command": "cl_ent_joints",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the joint names + axes of an entity"
    },
    {
      "command": "cl_ent_messages",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Toggles input/output message display for the selected entity(ies)"
    },
    {
      "command": "cl_ent_name",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the entity name"
    },
    {
      "command": "cl_ent_picker",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Toggles 'picker' mode with debug info for looked-at entity"
    },
    {
      "command": "cl_ent_pivot",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the pivot (y=up=green, z=forward=blue, x=left=red)"
    },
    {
      "command": "cl_ent_pivot_size",
      "type": "convar",
      "default": 20,
      "flags": ["cl", "a", "cheat"],
      "description": ""
    },
    {
      "command": "cl_ent_remove",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Removes the given entity(ies)"
    },
    {
      "command": "cl_ent_remove_all",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Removes all entities of the specified type"
    },
    {
      "command": "cl_ent_scale",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Scales entities. Args: <scale> <entity_name/class/index>"
    },
    {
      "command": "cl_ent_scenehierarchy",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Prints the entity scenenode hierarchy tree"
    },
    {
      "command": "cl_ent_script_dump",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Dumps names/values of this entity's script scope"
    },
    {
      "command": "cl_ent_select",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Select/deselect entities for later manipulation"
    },
    {
      "command": "cl_ent_setang",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Set entity angles"
    },
    {
      "command": "cl_ent_setname",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Sets targetname of given entity(ies)"
    },
    {
      "command": "cl_ent_setpos",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Move entity to position"
    },
    {
      "command": "cl_ent_show_contexts",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Show entity contexts in ent_text display"
    },
    {
      "command": "cl_ent_show_damage",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Sets damage display mode; shows damage dealt over target's head"
    },
    {
      "command": "cl_ent_showonlyattachment",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_ent_showonlyhitbox",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_ent_skeleton",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the skeleton for the given entity(ies)"
    },
    {
      "command": "cl_ent_text",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat", "vconsole_fuzzy"],
      "description": "Displays text debug info about given entity(ies) on top of the entity"
    },
    {
      "command": "cl_ent_text256",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays text debug info for entities within 256 units"
    },
    {
      "command": "cl_ent_text_clear",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Hide text debugging information about entity(ies)"
    },
    {
      "command": "cl_ent_text_filter",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Set which ent_text filters you want"
    },
    {
      "command": "cl_ent_text_flags_active",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "a", "cheat"],
      "description": ""
    },
    {
      "command": "cl_ent_text_no_name_really_i_mean_it",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_ent_text_radius",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays text debug info about entities near the player. Args: <Radius> <entity filter>"
    },
    {
      "command": "cl_ent_text_sticky_add",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Add names to display text debugging info for"
    },
    {
      "command": "cl_ent_text_sticky_clear",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Clear list of names for text debugging info"
    },
    {
      "command": "cl_ent_text_sticky_dump",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Spew list of names used for text debugging info"
    },
    {
      "command": "cl_ent_text_sticky_remove",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Remove names from text debugging info list"
    },
    {
      "command": "cl_ent_ungrab",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Un-grabs all objects"
    },
    {
      "command": "cl_ent_vcollide_wireframe",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the interpolated vcollide wireframe on entity"
    },
    {
      "command": "cl_ent_viewoffset",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the eye position for the given entity(ies) in red"
    },
    {
      "command": "cl_error_report_time",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "release"],
      "description": "Minimum seconds before printing prediction error summary. 0 to disable."
    },
    {
      "command": "cl_extrapolate",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable/disable extrapolation if interpolation history runs out."
    },
    {
      "command": "cl_extrapolate_amount",
      "type": "convar",
      "default": 0.25,
      "flags": ["cl", "cheat"],
      "description": "Seconds to extrapolate entities for."
    },
    {
      "command": "cl_eye_occlusion_debug",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_fixedcrosshairgap",
      "type": "convar",
      "default": 3,
      "flags": ["cl", "a", "per_user"],
      "description": "For crosshair style 1: gap size between pips."
    },
    {
      "command": "cl_flushentitypacket",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": "Force the engine to flush an entity packet (debug)."
    },
    {
      "command": "cl_fullupdate",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Force uncompressed update."
    },
    {
      "command": "cl_glow_brightness",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "cheat"],
      "description": "Brightness of player halos."
    },
    {
      "command": "cl_glow_item_far_b",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "cl_glow_item_far_g",
      "type": "convar",
      "default": 0.4,
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "cl_glow_item_far_r",
      "type": "convar",
      "default": 0.3,
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "cl_hide_avatar_images",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": "Hide others' avatar images. 0=Off, 1=Block All, 2=Block all but friends."
    },
    {
      "command": "cl_http_log_enable",
      "type": "convar",
      "default": false,
      "flags": ["cl", "norecord", "release", "clientcmd_can_execute"],
      "description": "Allow sending HTTP log from client main menu."
    },
    {
      "command": "cl_hud_color",
      "type": "convar",
      "default": 11,
      "flags": ["cl", "a", "release"],
      "description": "0=team, 1=white, 2=bright white, 3=light blue, 4=blue, 5=purple, 6=red, 7=orange, 8=yellow, 9=green, 10=aqua, 11=pink."
    },
    {
      "command": "cl_hud_radar_scale",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "cl_ignorepackets",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Force client to ignore packets (debug)."
    },
    {
      "command": "cl_imgui_set_selection",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Sets ImGui selection."
    },
    {
      "command": "cl_imgui_set_status_text",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Sets ImGui header status text."
    },
    {
      "command": "cl_import_csgo_config",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "cl_interp_hermite",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Set to zero to disable hermite interpolation."
    },
    {
      "command": "cl_interpolate_report",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": "Show interpolation profile timing."
    },
    {
      "command": "cl_inventory_debug_tooltip",
      "type": "convar",
      "default": false,
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "cl_inventory_radial_immediate_select",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "per_user"],
      "description": "Radials: select item immediately on highlight."
    },
    {
      "command": "cl_inventory_radial_tap_to_cycle",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "per_user"],
      "description": "Radials: tap to cycle; select on exit otherwise."
    },
    {
      "command": "cl_inventory_saved_filter2",
      "type": "convar",
      "default": "all",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "cl_inventory_saved_sort2",
      "type": "convar",
      "default": "inv_sort_age",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "cl_invites_only_friends",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "release"],
      "description": "Ignore invites from non-friends (or recent teammates) when on."
    },
    {
      "command": "cl_invites_only_mainmenu",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "release"],
      "description": "Ignore all invites while playing a match."
    },
    {
      "command": "cl_itemimages_dynamically_generated",
      "type": "convar",
      "default": 2,
      "flags": ["cl", "a", "release"],
      "description": "2=RTs+cache+disk fallback; 1=no RTs, cache+disk; 0=disk only."
    },
    {
      "command": "cl_jiggle_bone_debug",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Show physics-based jiggle bone debug info."
    },
    {
      "command": "cl_jiggle_bone_debug_pitch_constraints",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Debug jiggle bone pitch constraints."
    },
    {
      "command": "cl_jiggle_bone_debug_yaw_constraints",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Debug jiggle bone yaw constraints."
    },
    {
      "command": "cl_jiggle_bone_invert",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "cl_join_advertise",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a"],
      "description": "Advertise joinable game in progress to Steam friends (2=all servers, 1=official, 0=none)."
    },
    {
      "command": "cl_lagcompensation",
      "type": "convar",
      "default": true,
      "flags": ["cl", "user"],
      "description": "Perform server-side lag compensation of weapon firing events."
    },
    {
      "command": "cl_latch_report",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": "Output stats about latching."
    },
    {
      "command": "cl_leveloverview",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_lightquery_debug",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_loadout_saved_sort",
      "type": "convar",
      "default": "inv_sort_age",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "cl_lock_camera",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_mouselook",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "user", "per_user", "disconnected"],
      "description": "1=mouse look, 0=keyboard look. Can't be set while connected."
    },
    {
      "command": "cl_mute_all_but_friends_and_party",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": "Allow comms from friends/party only. 1=non-competitive, 2=all modes."
    },
    {
      "command": "cl_mute_enemy_team",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": "Block all communication from enemy team."
    },
    {
      "command": "cl_new_user_phase",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "a", "release"],
      "description": "0=Not Started, 1=Needs Training, 2=Training Complete, -1=Disabled."
    },
    {
      "command": "cl_obs_interp_enable",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a"],
      "description": "Enable interpolation between observer targets."
    },
    {
      "command": "cl_obs_interp_pos_rate",
      "type": "convar",
      "default": 0.27,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "cl_observed_bot_crosshair",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a", "release"],
      "description": "Crosshair when observing a bot: 0=player crosshair; 1=player crosshair only when takeover possible, else default; 2=always default."
    },
    {
      "command": "cl_paintkit_override",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat", "release"],
      "description": ""
    },
    {
      "command": "cl_particle_retire_cost",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "cl_particle_simulate",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable/disable particle simulation."
    },
    {
      "command": "cl_pclass",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Dump entity by prediction classname."
    },
    {
      "command": "cl_pdump",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": "Dump info about this entity to screen."
    },
    {
      "command": "cl_phys_debug_callback_entities",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Print all entities that get touch callbacks."
    },
    {
      "command": "cl_phys_enabled",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable all physics simulation."
    },
    {
      "command": "cl_phys_sleep_enable",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable sleeping for dynamic physics bodies."
    },
    {
      "command": "cl_phys_stop_at_collision",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_ping_fade_deadzone",
      "type": "convar",
      "default": 60,
      "flags": ["cl", "a", "release"],
      "description": "Distance from crosshair over which ping is completely invisible."
    },
    {
      "command": "cl_ping_fade_distance",
      "type": "convar",
      "default": 300,
      "flags": ["cl", "a", "release"],
      "description": "Distance from crosshair over which the ping fades."
    },
    {
      "command": "cl_pitchdown",
      "type": "convar",
      "default": 89,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_pitchup",
      "type": "convar",
      "default": 89,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_player_ping_mute",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a", "release"],
      "description": "1 = pinging makes a sound; 0 = pings are silent."
    },
    {
      "command": "cl_player_proximity_debug",
      "type": "convar",
      "default": false,
      "flags": ["cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "cl_player_ragdolls_collide",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat", "release"],
      "description": ""
    },
    {
      "command": "cl_playerspray_auto_apply",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "release"],
      "description": "Automatically apply graffiti when graffiti menu closes."
    },
    {
      "command": "cl_playerspraydisable",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": "Disable player sprays."
    },
    {
      "command": "cl_predict",
      "type": "convar",
      "default": true,
      "flags": ["cl", "user", "cheat"],
      "description": "Perform client side prediction."
    },
    {
      "command": "cl_predictweapons",
      "type": "convar",
      "default": true,
      "flags": ["cl", "user"],
      "description": "Perform client side prediction of weapon effects."
    },
    {
      "command": "cl_promoted_settings_acknowledged",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a"],
      "description": "Internal acknowledgement of promoted settings."
    },
    {
      "command": "cl_prop_debug",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Toggle prop debug mode (color-coded bounding boxes)."
    },
    {
      "command": "cl_querycache_stats",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Display status of the query cache (client only)."
    },
    {
      "command": "cl_quickinventory_filename",
      "type": "convar",
      "default": "radial_quickinventory.txt",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "cl_quickinventory_lastinv",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "release"],
      "description": "Return to previous item on quick inventory close."
    },
    {
      "command": "cl_quickinventory_line_update_speed",
      "type": "convar",
      "default": 65,
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "cl_radar_always_centered",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "release"],
      "description": "If 0, radar is maximally used; otherwise player stays centered."
    },
    {
      "command": "cl_radar_icon_scale_min",
      "type": "convar",
      "default": 0.6,
      "flags": ["cl", "a", "release"],
      "description": "Valid values: 0.4 to 1.25."
    },
    {
      "command": "cl_radar_rotate",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "release"],
      "description": "Rotate the radar."
    },
    {
      "command": "cl_radar_scale",
      "type": "convar",
      "default": 0.7,
      "flags": ["cl", "a", "release"],
      "description": "Valid values: 0.25 to 1.0."
    },
    {
      "command": "cl_radar_square_with_scoreboard",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "release"],
      "description": "Toggle radar to square when scoreboard is visible."
    },
    {
      "command": "cl_radial_radio_tab",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "cl_radial_radio_tab_0_text_1",
      "type": "convar",
      "default": "#Chatwheel_requestspend",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 0, slot 1 label."
    },
    {
      "command": "cl_radial_radio_tab_0_text_2",
      "type": "convar",
      "default": "#Chatwheel_requestweapon",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 0, slot 2 label."
    },
    {
      "command": "cl_radial_radio_tab_0_text_3",
      "type": "convar",
      "default": "#Chatwheel_bplan",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 0, slot 3 label."
    },
    {
      "command": "cl_radial_radio_tab_0_text_4",
      "type": "convar",
      "default": "#Chatwheel_followingyou",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 0, slot 4 label."
    },
    {
      "command": "cl_radial_radio_tab_0_text_5",
      "type": "convar",
      "default": "#Chatwheel_midplan",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 0, slot 5 label."
    },
    {
      "command": "cl_radial_radio_tab_0_text_6",
      "type": "convar",
      "default": "#Chatwheel_followme",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 0, slot 6 label."
    },
    {
      "command": "cl_radial_radio_tab_0_text_7",
      "type": "convar",
      "default": "#Chatwheel_aplan",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 0, slot 7 label."
    },
    {
      "command": "cl_radial_radio_tab_0_text_8",
      "type": "convar",
      "default": "#Chatwheel_requestecoround",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 0, slot 8 label."
    },
    {
      "command": "cl_radial_radio_tab_1_text_1",
      "type": "convar",
      "default": "#Chatwheel_enemyspotted",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 1, slot 1 label."
    },
    {
      "command": "cl_radial_radio_tab_1_text_2",
      "type": "convar",
      "default": "#Chatwheel_needbackup",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 1, slot 2 label."
    },
    {
      "command": "cl_radial_radio_tab_1_text_3",
      "type": "convar",
      "default": "#Chatwheel_bplan",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 1, slot 3 label."
    },
    {
      "command": "cl_radial_radio_tab_1_text_4",
      "type": "convar",
      "default": "#Chatwheel_bombcarrierspotted",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 1, slot 4 label."
    },
    {
      "command": "cl_radial_radio_tab_1_text_5",
      "type": "convar",
      "default": "#Chatwheel_multipleenemieshere",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 1, slot 5 label."
    },
    {
      "command": "cl_radial_radio_tab_1_text_6",
      "type": "convar",
      "default": "#Chatwheel_sniperspotted",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 1, slot 6 label."
    },
    {
      "command": "cl_radial_radio_tab_1_text_7",
      "type": "convar",
      "default": "#Chatwheel_aplan",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 1, slot 7 label."
    },
    {
      "command": "cl_radial_radio_tab_1_text_8",
      "type": "convar",
      "default": "#Chatwheel_inposition",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 1, slot 8 label."
    },
    {
      "command": "cl_radial_radio_tab_2_text_1",
      "type": "convar",
      "default": "#Chatwheel_affirmative",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 2, slot 1 label."
    },
    {
      "command": "cl_radial_radio_tab_2_text_2",
      "type": "convar",
      "default": "#Chatwheel_negative",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 2, slot 2 label."
    },
    {
      "command": "cl_radial_radio_tab_2_text_3",
      "type": "convar",
      "default": "#Chatwheel_compliment",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 2, slot 3 label."
    },
    {
      "command": "cl_radial_radio_tab_2_text_4",
      "type": "convar",
      "default": "#Chatwheel_thanks",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 2, slot 4 label."
    },
    {
      "command": "cl_radial_radio_tab_2_text_5",
      "type": "convar",
      "default": "#Chatwheel_cheer",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 2, slot 5 label."
    },
    {
      "command": "cl_radial_radio_tab_2_text_6",
      "type": "convar",
      "default": "#Chatwheel_peptalk",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 2, slot 6 label."
    },
    {
      "command": "cl_radial_radio_tab_2_text_7",
      "type": "convar",
      "default": "#Chatwheel_sorry",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 2, slot 7 label."
    },
    {
      "command": "cl_radial_radio_tab_2_text_8",
      "type": "convar",
      "default": "#Chatwheel_sectorclear",
      "flags": ["cl", "a", "release"],
      "description": "Radial radio tab 2, slot 8 label."
    },
    {
      "command": "cl_radial_radio_tap_to_ping",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "release"],
      "description": "Tap radial button to leave a ping if nothing selected within tap duration."
    },
    {
      "command": "cl_radial_radio_version_reset",
      "type": "convar",
      "default": 12,
      "flags": ["cl", "a", "release"],
      "description": "Internal version reset marker for radial radio."
    },
    {
      "command": "cl_radialmenu_deadzone_size",
      "type": "convar",
      "default": 0.4,
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "cl_radialmenu_deadzone_size_joystick",
      "type": "convar",
      "default": 0.17,
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "cl_ragdoll_limit",
      "type": "convar",
      "default": 20,
      "flags": ["cl", "a"],
      "description": "Maximum number of ragdolls to show (-1 disables limit)."
    },
    {
      "command": "cl_ragdoll_lru_debug",
      "type": "convar",
      "default": false,
      "flags": ["cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "cl_ragdoll_workaround_threshold",
      "type": "convar",
      "default": 4,
      "flags": ["cl", "release"],
      "description": "Cosmetic fix for ragdoll creation when last position unknown."
    },
    {
      "command": "cl_rebuy",
      "type": "convar",
      "default": "Armor PrimaryWeapon Flashbang SmokeGrenade Defuser HEGrenade Flashbang SecondaryWeapon Molotov IncGrenade Decoy Taser",
      "flags": ["cl", "release"],
      "description": "Order in which rebuy repurchases items."
    },
    {
      "command": "cl_redemption_reset_timestamp",
      "type": "convar",
      "default": 1695896463,
      "flags": ["cl", "a", "release"],
      "description": "Timestamp for redemption system reset."
    },
    {
      "command": "cl_removedecals",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Remove the decals from the entity under the crosshair."
    },
    {
      "command": "cl_resend",
      "type": "convar",
      "default": 0.5,
      "flags": ["release"],
      "description": "Delay (s) before the client will resend the 'connect' attempt."
    },
    {
      "command": "cl_rr_reloadresponsesystems",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Reload all response system scripts."
    },
    {
      "command": "cl_sanitize_muted_players",
      "type": "convar",
      "default": true,
      "flags": ["cl", "release"],
      "description": "Hide names and avatars of muted players."
    },
    {
      "command": "cl_sanitize_player_names",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": "Replace names of other players with something non-offensive."
    },
    {
      "command": "cl_save_animgraph_recording",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Saves all active animgraph recordings to disk."
    },
    {
      "command": "cl_scoreboard_mouse_enable_binding",
      "type": "convar",
      "default": "+attack2",
      "flags": ["cl", "a"],
      "description": "Binding to enable mouse selection in the scoreboard."
    },
    {
      "command": "cl_scoreboard_survivors_always_on",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "cl_script_add_debug_filter",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Add a filter to the game debug overlay."
    },
    {
      "command": "cl_script_add_watch",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Add a watch to the game debug overlay."
    },
    {
      "command": "cl_script_add_watch_pattern",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Add a watch to the game debug overlay by pattern."
    },
    {
      "command": "cl_script_attach_debugger",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Connect the VScript VM to the script debugger."
    },
    {
      "command": "cl_script_clear_watches",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Clear all watches from the game debug overlay."
    },
    {
      "command": "cl_script_debug",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Toggle in-game script debug features."
    },
    {
      "command": "cl_script_dump_all",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Dump the state of the VM to the console."
    },
    {
      "command": "cl_script_find",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Find a key in the VM."
    },
    {
      "command": "cl_script_help",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Output help for script functions."
    },
    {
      "command": "cl_script_reload",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Reload scripts."
    },
    {
      "command": "cl_script_reload_code",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Execute a VScript file, replacing existing functions."
    },
    {
      "command": "cl_script_reload_entity_code",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Execute all of this entity's VScripts, replacing existing functions."
    },
    {
      "command": "cl_script_remove_debug_filter",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Remove a filter from the game debug overlay."
    },
    {
      "command": "cl_script_remove_watch",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Remove a watch from the game debug overlay."
    },
    {
      "command": "cl_script_remove_watch_pattern",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Remove a watch from the game debug overlay by pattern."
    },
    {
      "command": "cl_script_resurrect_unreachable",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Use the garbage collector to track down reference cycles."
    },
    {
      "command": "cl_script_trace_disable",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Turn off a particular trace output by file or function name."
    },
    {
      "command": "cl_script_trace_disable_all",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Turn off all trace output."
    },
    {
      "command": "cl_script_trace_disable_key",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Turn off a particular trace output by table/instance."
    },
    {
      "command": "cl_script_trace_enable",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Turn on a particular trace output by file or function name."
    },
    {
      "command": "cl_script_trace_enable_all",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Turn on all trace output."
    },
    {
      "command": "cl_script_trace_enable_key",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Turn on a particular trace output by table/instance."
    },
    {
      "command": "cl_server_graphic1_enable",
      "type": "convar",
      "default": true,
      "flags": ["cl", "release"],
      "description": "When enabled, a 360x60 (<16kb) image will be shown to on-server spectators."
    },
    {
      "command": "cl_server_graphic2_enable",
      "type": "convar",
      "default": true,
      "flags": ["cl", "release"],
      "description": "When enabled, a 220x45 (<16kb) image will be shown to on-server spectators."
    },
    {
      "command": "cl_show_clan_in_death_notice",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "release"],
      "description": "Show clan name next to player names in death notices."
    },
    {
      "command": "cl_show_equipped_character_for_player_avatars",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": "Show equipped character for player avatars."
    },
    {
      "command": "cl_show_observer_crosshair",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "release"],
      "description": "Show crosshair of observed player. 0=off, 1=friends & party, 2=everyone."
    },
    {
      "command": "cl_showents",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Dump entity list to console."
    },
    {
      "command": "cl_showerror",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "release"],
      "description": "Show prediction errors (2=detailed field deltas, 3=filter serverside known errors, use -entindex for specific)."
    },
    {
      "command": "cl_showfps",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "release"],
      "description": "Draw FPS meter (1=fps, 2=smooth fps, 3=server ms, 4=show & log)."
    },
    {
      "command": "cl_showloadout",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "per_user"],
      "description": "Toggle display of current loadout."
    },
    {
      "command": "cl_showmem",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "release"],
      "description": "Draw approximate memory use at top of screen."
    },
    {
      "command": "cl_showpos",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat", "release"],
      "description": "Draw current position at top of screen."
    },
    {
      "command": "cl_silencer_mode",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a", "user", "per_user"],
      "description": "0=cannot detach; 1=press secondary fire to detach."
    },
    {
      "command": "cl_sim_grenade_trajectory",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Draw trajectory of a grenade thrown from this position. Optional duration parameter."
    },
    {
      "command": "cl_skel_constraints_enable",
      "type": "convar",
      "default": true,
      "flags": ["rep", "cheat"],
      "description": ""
    },
    {
      "command": "cl_skeleton_instance_smear_boneflags",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Smear boneflags across the model (consumes computation)."
    },
    {
      "command": "cl_smoke_player_particle_effect",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_snd_new_visualize",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Display soundevent names at their 3D positions."
    },
    {
      "command": "cl_sniper_auto_rezoom",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "user", "per_user"],
      "description": "Auto-rezoom snipers after a shot."
    },
    {
      "command": "cl_sniper_delay_unscope",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "release"],
      "description": "Delay unscope after sniper shot."
    },
    {
      "command": "cl_sos_test_get_opvar",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_sos_test_set_opvar",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "cl_soundscape_flush",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat", "server_can_execute"],
      "description": "Flush client-side soundscapes."
    },
    {
      "command": "cl_spec_show_bindings",
      "type": "convar",
      "default": true,
      "flags": ["cl", "release", "clientcmd_can_execute"],
      "description": "Toggle visibility of spectator bindings."
    },
    {
      "command": "cl_spec_stats",
      "type": "convar",
      "default": true,
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "cl_spec_swapplayersides",
      "type": "convar",
      "default": false,
      "flags": ["cl", "release"],
      "description": "Swap player and team names to the opposite side in spectator panel."
    },
    {
      "command": "cl_spec_use_tournament_content_standards",
      "type": "convar",
      "default": false,
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "cl_spewserializers",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Spew serializers."
    },
    {
      "command": "cl_teamid_overhead_colors_show",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "release"],
      "description": "Show team overhead ID in teammate color."
    },
    {
      "command": "cl_teamid_overhead_maxdist",
      "type": "convar",
      "default": 6000,
      "flags": ["cl", "cheat", "per_user"],
      "description": "Max distance for overhead team ID icons."
    },
    {
      "command": "cl_teamid_overhead_maxdist_spec",
      "type": "convar",
      "default": 4000,
      "flags": ["cl", "cheat", "per_user"],
      "description": "Max distance for overhead team ID icons when spectator."
    },
    {
      "command": "cl_teamid_overhead_mode",
      "type": "convar",
      "default": 2,
      "flags": ["cl", "a", "release"],
      "description": "Always show team ID over teammates. 1=pips; 2=pips, name & equipment."
    },
    {
      "command": "cl_teammate_colors_show",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "release"],
      "description": "Competitive: 1=separate teammate colors; 2=colors+letters."
    },
    {
      "command": "cl_test_list_entities",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Test-list entities."
    },
    {
      "command": "cl_timeout",
      "type": "convar",
      "default": 30,
      "flags": ["a"],
      "description": "Seconds without packets before client disconnects itself."
    },
    {
      "command": "cl_track_aim_head_log_closest",
      "type": "convar",
      "default": false,
      "flags": ["cl", "release"],
      "description": "Log when closest distance to head was reached and its value."
    },
    {
      "command": "cl_track_aim_head_threshold",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "release"],
      "description": "Notify render device when rendering a frame with enemy head within threshold distance."
    },
    {
      "command": "cl_track_render_eye_angles",
      "type": "convar",
      "default": false,
      "flags": ["cl", "release"],
      "description": "Spew render eye angles."
    },
    {
      "command": "cl_use_opens_buy_menu",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "user", "per_user"],
      "description": "Pressing +use opens the buy menu if in a buy zone."
    },
    {
      "command": "cl_usercmd_maxcount",
      "type": "convar",
      "default": 4,
      "flags": ["release"],
      "description": "Max number of CUserCmds to send in one packet."
    },
    {
      "command": "cl_versus_intro",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "release"],
      "description": "Enable versus intro."
    },
    {
      "command": "cl_wallbang_heavy_threshold",
      "type": "convar",
      "default": 22,
      "flags": ["cl", "cheat", "release"],
      "description": "Threshold to switch from Light to Heavy wallbang tracer."
    },
    {
      "command": "cl_weapon_clip_thinwalls",
      "type": "convar",
      "default": true,
      "flags": ["cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "cl_weapon_clip_thinwalls_debug",
      "type": "convar",
      "default": false,
      "flags": ["cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "cl_weapon_clip_thinwalls_lock",
      "type": "convar",
      "default": false,
      "flags": ["cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "cl_weapon_debug_show_accuracy",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat", "release"],
      "description": "Draw a circle representing effective range with every shot."
    },
    {
      "command": "cl_weapon_debug_show_accuracy_duration",
      "type": "convar",
      "default": 10,
      "flags": ["cl", "cheat", "release"],
      "description": ""
    },
    {
      "command": "cl_wpn_sway_scale",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "cheat"],
      "description": "Weapon sway scale."
    },
    {
      "command": "clear",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Clear console output."
    },
    {
      "command": "clear_bombs",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "clearall",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Clear console output from all views."
    },
    {
      "command": "cli_ent_attachments",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the interpolated attachment points on an entity."
    },
    {
      "command": "cli_ent_hitbox",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the skeleton for the given entity(ies)."
    },
    {
      "command": "cli_ent_pivot",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the interpolated pivot for the given entity(ies)."
    },
    {
      "command": "cli_ent_skeleton",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the skeleton for the given entity(ies)."
    },
    {
      "command": "cli_ent_vcollide_wireframe",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Displays the interpolated vcollide wireframe on an entity."
    },
    {
      "command": "clientport",
      "type": "convar",
      "default": 0,
      "flags": ["release"],
      "description": "If non-zero, client binds port to specific address."
    },
    {
      "command": "closecaption",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "user"],
      "description": "Enable close captioning."
    },
    {
      "command": "clutch_mode_toggle",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Toggle clutch mode convar."
    },
    {
      "command": "collect_entity_model_name",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Collect model names of the entities you're pointing at."
    },
    {
      "command": "commentary",
      "type": "convar",
      "default": false,
      "flags": ["sv", "a"],
      "description": "Desired commentary mode state."
    },
    {
      "command": "commentary_finishnode",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": ""
    },
    {
      "command": "con_enable",
      "type": "convar",
      "default": false,
      "flags": ["a"],
      "description": "Allows the console to be activated."
    },
    {
      "command": "condump",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Dump the text currently in the console to condumpXX.log."
    },
    {
      "command": "connect",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Connect to a remote server."
    },
    {
      "command": "connect_hltv",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Connect to a remote HLTV server."
    },
    {
      "command": "consoletool",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Open a VConsole subtool."
    },
    {
      "command": "contributionscore_assist",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "release"],
      "description": "Amount of contribution score added for an assist."
    },
    {
      "command": "contributionscore_bomb_defuse_major",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "release"],
      "description": "Contribution score for defusing a bomb with enemies alive."
    },
    {
      "command": "contributionscore_bomb_defuse_minor",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "release"],
      "description": "Contribution score for defusing a bomb after eliminating enemy team."
    },
    {
      "command": "contributionscore_bomb_exploded",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "release"],
      "description": "Contribution score for planter/team on bomb explosion win."
    },
    {
      "command": "contributionscore_bomb_planted",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "release"],
      "description": "Contribution score for planting a bomb."
    },
    {
      "command": "contributionscore_cash_bundle",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Contribution score for picking up a cash bundle."
    },
    {
      "command": "contributionscore_crate_break",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Contribution score for breaking an item crate."
    },
    {
      "command": "contributionscore_hostage_kill",
      "type": "convar",
      "default": -2,
      "flags": ["sv", "release"],
      "description": "Contribution score for killing a hostage (negative)."
    },
    {
      "command": "contributionscore_hostage_rescue_major",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "release"],
      "description": "Contribution score added to rescuer per hostage rescued."
    },
    {
      "command": "contributionscore_hostage_rescue_minor",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "release"],
      "description": "Contribution score added to all alive CTs per hostage rescued."
    },
    {
      "command": "contributionscore_kill",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "release"],
      "description": "Contribution score added for a kill."
    },
    {
      "command": "contributionscore_kill_factor",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Percent of victim's contribution score awarded to killer as bonus."
    },
    {
      "command": "contributionscore_objective_kill",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "release"],
      "description": "Contribution score added for an objective-related kill."
    },
    {
      "command": "contributionscore_suicide",
      "type": "convar",
      "default": -2,
      "flags": ["sv", "release"],
      "description": "Contribution score for a suicide (negative)."
    },
    {
      "command": "contributionscore_team_kill",
      "type": "convar",
      "default": -2,
      "flags": ["sv", "release"],
      "description": "Contribution score for a team kill (negative)."
    },
    {
      "command": "cq_netgraph",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "user"],
      "description": "Display command queue statistics on the HUD."
    },
    {
      "command": "crash",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Crash the client. Optional type: 0 read NULL, 1 write NULL, 2 assert, 3 loop, 4 stack overrun, 5 multi asserts."
    },
    {
      "command": "crash_error",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Crash by Plat_FatalError on main thread (Debug)."
    },
    {
      "command": "crash_error_job",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Crash by Plat_FatalError on job thread (Debug)."
    },
    {
      "command": "crash_error_thread",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Crash by Plat_FatalError on non-main thread (Debug)."
    },
    {
      "command": "crash_job",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Crash the engine in a job thread (Debug)."
    },
    {
      "command": "crash_thread",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Crash in a new non-main thread (Debug)."
    },
    {
      "command": "create_flashlight",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "CreatePredictionError",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Create a prediction error."
    },
    {
      "command": "crosshair",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "cs_enable_player_physics_box",
      "type": "convar",
      "default": false,
      "flags": ["sv", "release"],
      "description": ""
    },
    {
      "command": "cs_hostage_near_rescue_music_distance",
      "type": "convar",
      "default": 2000,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "cs_logtouchexpansion",
      "type": "convar",
      "default": -2,
      "flags": ["sv", "cheat"],
      "description": "cs_logtouchexpansion <ent index or -1 for all>. Log player touch expansion component."
    },
    {
      "command": "cs_minimap_create_output_size",
      "type": "convar",
      "default": 512,
      "flags": ["cl", "cheat"],
      "description": "Size of minimap texture generated with cs_minimap_create."
    },
    {
      "command": "cs_quit_prompt",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Quit the game."
    },
    {
      "command": "csgo_download_match",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "norecord", "clientcmd_can_execute"],
      "description": "Download a match via serial code and start playback."
    },
    {
      "command": "csgo_fatdemo_enable",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "csgo_fatdemo_output",
      "type": "convar",
      "default": "test.fatdem",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "csgo_map_preview_scale",
      "type": "convar",
      "default": 2.09,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "csgo_use_fullsort_for_opaque",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Fullsort the opaque pass when there wasn't a depth prepass."
    },
    {
      "command": "csgo_video_settings_restore_previous",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Restore previous video settings."
    },
    {
      "command": "csm_bias_override_0",
      "type": "convar",
      "default": 1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_bias_override_1",
      "type": "convar",
      "default": 1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_bias_override_2",
      "type": "convar",
      "default": 1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_bias_override_3",
      "type": "convar",
      "default": 1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_cascade0_override_dist",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_cascade1_override_dist",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_cascade2_override_dist",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_cascade3_override_dist",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_cascade_viewdir_shadow_bias_scale",
      "type": "convar",
      "default": 2,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_res_override_0",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_res_override_1",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_res_override_2",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_res_override_3",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_slope_scale_db_override",
      "type": "convar",
      "default": 3,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_split_log_scalar",
      "type": "convar",
      "default": 0.85,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_viewdir_shadow_bias",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_viewmodel_farz",
      "type": "convar",
      "default": 30,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_viewmodel_max_shadow_dist",
      "type": "convar",
      "default": 21,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "csm_viewmodel_max_visible_dist",
      "type": "convar",
      "default": 1000,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "custom_bot_difficulty",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Bot difficulty for offline play."
    },
    {
      "command": "cv_bot_ai_bt_debug_target",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "rep", "cheat"],
      "description": "Draw the behavior tree of the given bot."
    },
    {
      "command": "cv_bot_ai_bt_hiding_spot_show",
      "type": "convar",
      "default": false,
      "flags": ["sv", "rep", "cheat"],
      "description": "Draw hiding spots."
    },
    {
      "command": "cv_bot_ai_bt_moveto_show_next_hiding_spot",
      "type": "convar",
      "default": false,
      "flags": ["sv", "rep", "cheat"],
      "description": "Draw the hiding spot the bot will check next."
    },
    {
      "command": "cvarlist",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Show the list of convars/concommands."
    },
    {
      "command": "cyclevar",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Cycle through specified convar values."
    },
    {
      "command": "debug_entity_outline_highlight",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "debug_purchase_defidx",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release", "clientcmd_can_execute"],
      "description": "Purchase an item by defindex"
    },
    {
      "command": "debug_takedamage_summaries",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "debug_visibility_monitor",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "debugoverlay_cycle_domain",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggles visibility of the debug overlay system."
    },
    {
      "command": "debugoverlay_cycle_state",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggles visibility of the debug overlay system."
    },
    {
      "command": "debugoverlay_draw_current",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Do not draw entries that have aged out by the time of rendering (useful if sim runs more often than rendering)."
    },
    {
      "command": "debugoverlay_force_respect_ttl",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Force respect TTL even when clearing scopes."
    },
    {
      "command": "debugoverlay_hide_imgui",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Hides the overlay."
    },
    {
      "command": "debugoverlay_ignore_source",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Draw everything normal and ignore the source for rendering."
    },
    {
      "command": "debugoverlay_show_text_outline",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Toggle display of box around text."
    },
    {
      "command": "debugoverlay_toggle",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggles visibility of the debug overlay system."
    },
    {
      "command": "default_fov",
      "type": "convar",
      "default": 90,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "demo_flush",
      "type": "convar",
      "default": false,
      "flags": ["a"],
      "description": "Flush writing the demo file every network update."
    },
    {
      "command": "demo_goto",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Skips to location in demo."
    },
    {
      "command": "demo_gotomark",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Skips the current demo playback to the marked tick."
    },
    {
      "command": "demo_gototick",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Skips to a tick in demo."
    },
    {
      "command": "demo_info",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Print information about currently playing demo."
    },
    {
      "command": "demo_marktick",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Marks the current demo playback tick for later use."
    },
    {
      "command": "demo_pause",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Pauses demo playback."
    },
    {
      "command": "demo_quitafterplayback",
      "type": "convar",
      "default": false,
      "flags": ["release"],
      "description": "Quits game after demo playback."
    },
    {
      "command": "demo_recordcommands",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Record commands typed at console into .dem files."
    },
    {
      "command": "demo_resume",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Resumes demo playback."
    },
    {
      "command": "demo_timescale",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Sets demo replay speed."
    },
    {
      "command": "demo_togglepause",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Toggles demo playback."
    },
    {
      "command": "demolist",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Print demo sequence list."
    },
    {
      "command": "demoui",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Show/hide demo playback UI."
    },
    {
      "command": "dev_add_onground_on_spawn",
      "type": "convar",
      "default": false,
      "flags": ["sv", "release"],
      "description": "Whether to tweak ground flag on spawn. Kept for debugging until assert removal."
    },
    {
      "command": "developer",
      "type": "convar",
      "default": 0,
      "flags": ["release"],
      "description": "Set developer message level."
    },
    {
      "command": "differences",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Show all convars not at default values (can restrict to specific flags)."
    },
    {
      "command": "disable_dynamic_prop_loading",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "If non-zero when a map loads, dynamic props won't be loaded."
    },
    {
      "command": "disconnect",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Disconnect from server."
    },
    {
      "command": "display_game_events",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "dlight_debug",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Creates a dlight in front of the player."
    },
    {
      "command": "dm_togglerandomweapons",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "server_can_execute", "clientcmd_can_execute"],
      "description": "Turns random weapons in deathmatch on/off."
    },
    {
      "command": "dota_enable_spatial_audio",
      "type": "convar",
      "default": false,
      "flags": ["release"],
      "description": "Flag to enable spatial audio in Dota 2."
    },
    {
      "command": "dota_spatial_audio_mix",
      "type": "convar",
      "default": 1,
      "flags": ["release"],
      "description": "Blend spatial and non-spatial audio in Dota 2."
    },
    {
      "command": "drawcross",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Draws a cross at the given location. Args: x y z"
    },
    {
      "command": "drawline",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Draws a line between two 3D points. Args: x1 y1 z1 x2 y2 z2"
    },
    {
      "command": "dsp_dist_max",
      "type": "convar",
      "default": 1440,
      "flags": ["cheat", "demo"],
      "description": ""
    },
    {
      "command": "dsp_dist_min",
      "type": "convar",
      "default": 0,
      "flags": ["cheat", "demo"],
      "description": ""
    },
    {
      "command": "dsp_off",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "dsp_volume",
      "type": "convar",
      "default": 0.8,
      "flags": ["a", "demo"],
      "description": ""
    },
    {
      "command": "dump_entity_report",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "List all client-side entities in the scene."
    },
    {
      "command": "dump_panorama_css_properties",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Print all valid Panorama CSS properties and docs."
    },
    {
      "command": "dump_panorama_events",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Print Panorama event types and their documentation."
    },
    {
      "command": "dumpparticlelist",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Print information on existing particle systems."
    },
    {
      "command": "echo",
      "type": "command",
      "default": "cmd",
      "flags": ["server_can_execute"],
      "description": "Echo text to console."
    },
    {
      "command": "echoln",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Echo the command arguments on the console."
    },
    {
      "command": "enable_boneflex",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "endmatch_votenextmap",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "clientcmd_can_execute"],
      "description": "Votes for the next map at the end of the match."
    },
    {
      "command": "endround",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "End the current round."
    },
    {
      "command": "engine_low_latency_sleep_after_client_tick",
      "type": "convar",
      "default": false,
      "flags": ["release"],
      "description": "When r_low_latency is enabled, move low latency sleep on tick frames to happen after client simulation."
    },
    {
      "command": "engine_no_focus_sleep",
      "type": "convar",
      "default": 20,
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "english",
      "type": "convar",
      "default": true,
      "flags": ["cl", "user"],
      "description": "If set to 1, run the English language assets."
    },
    {
      "command": "ent_absbox",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display total bounding box for entity(ies) in green. Args: {entity_name}|{class_name}|{entity_index}|{no arg = pick look target}"
    },
    {
      "command": "ent_actornames",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display entity name for all entities with ShouldDisplayInActorNames."
    },
    {
      "command": "ent_actornames_font",
      "type": "convar",
      "default": "Consolas",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Font name for ent_actornames."
    },
    {
      "command": "ent_actornames_fontsize",
      "type": "convar",
      "default": 24,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Font size for ent_actornames."
    },
    {
      "command": "ent_animgraph_debug",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display animgraph debug for given entity(ies)."
    },
    {
      "command": "ent_animgraph_record",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggle recording of animgraph replay for given entity(ies)."
    },
    {
      "command": "ent_animgraph_setvar",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Set animgraph var on entities. Args: <varname>=<value> <entity selector>"
    },
    {
      "command": "ent_attachments",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display attachment points on an entity."
    },
    {
      "command": "ent_autoaim",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display entity autoaim radius."
    },
    {
      "command": "ent_bbox",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display movement bounding box in orange for entity(ies)."
    },
    {
      "command": "ent_call",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "ent_call <funcname> <option:entname> on current look target or filter; checks ent, root, mode, map scope."
    },
    {
      "command": "ent_clear_debug_overlays",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Clear all debug overlays."
    },
    {
      "command": "ent_create",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat", "vconsole_fuzzy"],
      "description": "Create an entity of designer/subclass name where the player is looking."
    },
    {
      "command": "ent_find",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Find and list entities with class/target names containing substring. Format: find_ent <substring>"
    },
    {
      "command": "ent_find_index",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display data for entity by index. Format: find_ent_index <index>"
    },
    {
      "command": "ent_fire",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat", "vconsole_fuzzy"],
      "description": "Usage: ent_fire <target> [action] [value] [delay]"
    },
    {
      "command": "ent_fire_output",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat", "vconsole_fuzzy"],
      "description": "Usage: ent_fire_output <target> [output name] [value] [delay]"
    },
    {
      "command": "ent_grab",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Grab the object in front of the player. Options: -loose -multiple -toggle"
    },
    {
      "command": "ent_hierarchy",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Print entity hierarchy tree rooted at specified ent(s)."
    },
    {
      "command": "ent_hitbox",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display hitboxes for entity(ies)."
    },
    {
      "command": "ent_info",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Usage: ent_info <class name>"
    },
    {
      "command": "ent_joints",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display joint names + axes for an entity."
    },
    {
      "command": "ent_kill",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Kill the given entity(ies)."
    },
    {
      "command": "ent_messages",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggle input/output message display for selected entities."
    },
    {
      "command": "ent_messages_draw",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Visualize all entity input/output activity."
    },
    {
      "command": "ent_name",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display entity name."
    },
    {
      "command": "ent_orient",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Orient specified entity to match player's angles. Use 'allangles' to orient all axes."
    },
    {
      "command": "ent_picker",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggle picker mode. Option: 'full' for all debug info."
    },
    {
      "command": "ent_pivot",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display pivot for entity(ies). (y=up=green, z=forward=blue, x=left=red)"
    },
    {
      "command": "ent_pivot_size",
      "type": "convar",
      "default": 20,
      "flags": ["sv", "a", "cheat"],
      "description": ""
    },
    {
      "command": "ent_rbox",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Display total bounding box in green, with overlays for specific entities."
    },
    {
      "command": "ent_remove",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Remove the given entity(ies)."
    },
    {
      "command": "ent_remove_all",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Remove all entities of the specified type. Args: {entity_name}|{class_name}"
    },
    {
      "command": "ent_rotate",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Rotate an entity by a specified number of degrees."
    },
    {
      "command": "ent_scale",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Scale entities. Args: <scale> <entity selector>"
    },
    {
      "command": "ent_scenehierarchy",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Print scenenode hierarchy tree rooted at the specified ent(s)."
    },
    {
      "command": "ent_script_dump",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Dump names and values of entity's script scope."
    },
    {
      "command": "ent_select",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Select/deselect entities for later manipulation."
    },
    {
      "command": "ent_setang",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Set entity angles."
    },
    {
      "command": "ent_setname",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Set targetname of entity(ies). Args: <new name> <entity selector>"
    },
    {
      "command": "ent_setpos",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Move entity to position."
    },
    {
      "command": "ent_show_contexts",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Show entity contexts in ent_text display."
    },
    {
      "command": "ent_show_damage",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Set damage display mode; show damage dealt over target's head."
    },
    {
      "command": "ent_show_response_criteria",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Print an entity's current response criteria set. Args: {entity selector}"
    },
    {
      "command": "ent_showonlyattachment",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "ent_skeleton",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display skeleton for entity(ies)."
    },
    {
      "command": "ent_skeleton_duration",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Duration of ent_skeleton display."
    },
    {
      "command": "ent_teleport",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Teleport specified entity to where the player is looking. Format: ent_teleport <entity name>"
    },
    {
      "command": "ent_text",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat", "vconsole_fuzzy"],
      "description": "Display text debug info about entity(ies) on top of the entity."
    },
    {
      "command": "ent_text256",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display text debug info for entity(ies) within 256 units of the player."
    },
    {
      "command": "ent_text_clear",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Hide text debug information about entity(ies) (Overlay Text)."
    },
    {
      "command": "ent_text_filter",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Set which ent_text filters you want."
    },
    {
      "command": "ent_text_flags_active",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "a", "cheat"],
      "description": ""
    },
    {
      "command": "ent_text_no_name_really_i_mean_it",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "ent_text_radius",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display text debug info about entity(ies) near the player. Args: <Radius> <entity selector>"
    },
    {
      "command": "ent_text_sticky_add",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Add names to the sticky ent_text display list."
    },
    {
      "command": "ent_text_sticky_clear",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Clear the sticky ent_text display list."
    },
    {
      "command": "ent_text_sticky_dump",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Spew the sticky ent_text list."
    },
    {
      "command": "ent_text_sticky_remove",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Remove names from sticky ent_text list."
    },
    {
      "command": "ent_ungrab",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Un-grab all objects."
    },
    {
      "command": "ent_vcollide_wireframe",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display interpolated vcollide wireframe on entity."
    },
    {
      "command": "ent_viewoffset",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Display eye position for entity(ies) in red."
    },
    {
      "command": "entity_log_load_unserialize",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Output unserialization of entities on map load. 0=off, 1=client/server, 2=server, 3=client."
    },
    {
      "command": "escape",
      "type": "command",
      "default": "cmd",
      "flags": ["release", "clientcmd_can_execute"],
      "description": "Escape key pressed."
    },
    {
      "command": "exec",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Execute a cfg file."
    },
    {
      "command": "exec_async",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat", "norecord"],
      "description": "Execute a cfg file over time."
    },
    {
      "command": "execifexists",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Execute a cfg file if it exists."
    },
    {
      "command": "execute_command_every_frame",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "explode",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Kills the player with explosive damage."
    },
    {
      "command": "explodevector",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Kills a player applying an explosive force. Usage: explodevector <player> <x> <y> <z>"
    },
    {
      "command": "fadein",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds."
    },
    {
      "command": "fadeout",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds."
    },
    {
      "command": "ff_damage_bullet_penetration",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If friendly fire is off, this will scale the penetration power and damage a bullet does when penetrating another friendly player"
    },
    {
      "command": "ff_damage_decoy_explosion",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Enables or disables team damage from decoy detonation"
    },
    {
      "command": "ff_damage_reduction_bullets",
      "type": "convar",
      "default": 0.33,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How much to reduce damage done to teammates when shot. Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)"
    },
    {
      "command": "ff_damage_reduction_grenade",
      "type": "convar",
      "default": 0.85,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How much to reduce damage done to teammates by a thrown grenade. Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)"
    },
    {
      "command": "ff_damage_reduction_grenade_self",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How much to damage a player does to himself with his own grenade. Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)"
    },
    {
      "command": "ff_damage_reduction_other",
      "type": "convar",
      "default": 0.4,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How much to reduce damage done to teammates by things other than bullets and grenades. Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)"
    },
    {
      "command": "find",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Find concommands with the specified string in their name/help text."
    },
    {
      "command": "findflags",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Find concommands by flags."
    },
    {
      "command": "firetarget",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "firstperson",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release", "execute_per_tick"],
      "description": "Switch to firstperson camera."
    },
    {
      "command": "fish_debug",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Show debug info for fish"
    },
    {
      "command": "fish_dormant",
      "type": "convar",
      "default": false,
      "flags": ["sv", "rep", "cheat"],
      "description": "Turns off interactive fish behavior. Fish become immobile and unresponsive."
    },
    {
      "command": "fog_color",
      "type": "convar",
      "default": "-1.000000 -1.000000 -1.000000",
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "fog_colorskybox",
      "type": "convar",
      "default": "-1.000000 -1.000000 -1.000000",
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "fog_enable",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable fog"
    },
    {
      "command": "fog_enableskybox",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "fog_end",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "fog_endskybox",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "fog_hdrcolorscale",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "fog_hdrcolorscaleskybox",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "fog_maxdensity",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "fog_maxdensityskybox",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "fog_override",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Overrides the map's fog settings (-1 populates fog_ vars with map's values)"
    },
    {
      "command": "fog_override_color",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Sets the fog color override"
    },
    {
      "command": "fog_override_enable",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Use fog_override convars instead of world fog data"
    },
    {
      "command": "fog_override_end",
      "type": "convar",
      "default": 3500,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "fog_override_exponent",
      "type": "convar",
      "default": 2,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "fog_override_max_density",
      "type": "convar",
      "default": 0.4,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "fog_override_start",
      "type": "convar",
      "default": 1000,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "fog_start",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "fog_startskybox",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "fov_cs_debug",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Sets the view fov if cheats are on."
    },
    {
      "command": "fov_desired",
      "type": "convar",
      "default": 75,
      "flags": ["cl", "a", "user"],
      "description": "Sets the base field-of-view."
    },
    {
      "command": "fps_max",
      "type": "convar",
      "default": 400,
      "flags": ["a", "release"],
      "description": "Frame rate limiter. 0=no limit. Does not apply to dedicated server."
    },
    {
      "command": "fps_max_tools",
      "type": "convar",
      "default": 120,
      "flags": ["a"],
      "description": "Additional frame rate limit while in tools mode and a window other than the game window has focus. Note that fps_max still applies, this only allows the maximum frame rate for tools mode to be lower. 0=no tools specific limit."
    },
    {
      "command": "fps_max_ui",
      "type": "convar",
      "default": 120,
      "flags": ["a"],
      "description": "Frame rate limiter while the game UI is displayed. 0=no limit. Does not apply to dedicated server."
    },
    {
      "command": "fs_report_sync_opens",
      "type": "convar",
      "default": 0,
      "flags": ["release"],
      "description": "0:Off, 1:Always, 2:Not during load"
    },
    {
      "command": "fs_spew_readfieldlist",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "index <threshold bytes>: spew changes to ent index, optionally only spewing if update is > than threshold bytes"
    },
    {
      "command": "func_break_max_pieces",
      "type": "convar",
      "default": 15,
      "flags": ["sv", "a", "rep"],
      "description": ""
    },
    {
      "command": "g_debug_angularsensor",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "g_debug_constraint_sounds",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Enable debug printing about constraint sounds."
    },
    {
      "command": "g_debug_ragdoll_visualize",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "game_alias",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Set the configuration of game type and mode based on game alias like 'deathmatch'."
    },
    {
      "command": "game_mode",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "The current game mode (based on game type). See GameModes.txt."
    },
    {
      "command": "game_type",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "The current game type. See GameModes.txt."
    },
    {
      "command": "gameinstructor_dump_open_lessons",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Gives a list of all currently open lessons."
    },
    {
      "command": "gameinstructor_dump_run_lesson_counts",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Gives a list of lessons that have been completed or shown."
    },
    {
      "command": "gameinstructor_enable",
      "type": "convar",
      "default": false,
      "flags": ["cl", "release"],
      "description": "Display in-game lessons that teach new players."
    },
    {
      "command": "gameinstructor_find_errors",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Set to 1 and the game instructor will run EVERY scripted command to uncover errors."
    },
    {
      "command": "gameinstructor_verbose",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "1 = standard debugging, 2 = show update actions (with gameinstructor_verbose_lesson)."
    },
    {
      "command": "gameinstructor_verbose_lesson",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Display more verbose information for lessons that have this name."
    },
    {
      "command": "gameui_hide",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Hides the game UI."
    },
    {
      "command": "getpos",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Dump position and angles to the console."
    },
    {
      "command": "getpos_exact",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Dump origin and angles to the console."
    },
    {
      "command": "give",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "vconsole_fuzzy"],
      "description": "Give item to player. Arguments: <item_name>"
    },
    {
      "command": "givecurrentammo",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Give a supply of ammo for current weapon."
    },
    {
      "command": "gl_clear_gray",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Clear the back buffer to gray every frame."
    },
    {
      "command": "gl_clear_randomcolor",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Clear the back buffer to random colors every frame. Helps spot open seams in geometry."
    },
    {
      "command": "global_set",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "global_set <globalname> <state>: Sets env_global state (0=OFF, 1=ON, 2=DEAD)."
    },
    {
      "command": "glow_outline_width",
      "type": "convar",
      "default": 6,
      "flags": ["cl", "cheat"],
      "description": "Width of glow outline effect in screen space."
    },
    {
      "command": "glow_use_tolerance",
      "type": "convar",
      "default": 0.85,
      "flags": ["cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "god",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggle by default, or 0=disable / 1=enable. Player becomes invulnerable."
    },
    {
      "command": "gotv_theater_container",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "release"],
      "description": "Enables GOTV theater mode for the specified container; 'live' plays top live matches."
    },
    {
      "command": "grep",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "grep line for pattern, print out matching lines only"
    },
    {
      "command": "healthshot_allow_use_at_full",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "healthshot_health",
      "type": "convar",
      "default": 50,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "healthshot_healthboost_damage_multiplier",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "rep", "release"],
      "description": ""
    },
    {
      "command": "healthshot_healthboost_speed_multiplier",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "healthshot_healthboost_time",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "help",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Find help about a convar/concommand."
    },
    {
      "command": "hideconsole",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Hide the console."
    },
    {
      "command": "hidehud",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Bitmask: 1=weapon selection, 2=flashlight, 4=all, 8=health, 16=player dead, 32=needssuit, 64=misc, 128=chat, 256=crosshair, 512=vehicle crosshair, 1024=in vehicle"
    },
    {
      "command": "host_framerate",
      "type": "convar",
      "default": 0,
      "flags": ["release"],
      "description": "Set to lock per-frame time elapse."
    },
    {
      "command": "host_timescale",
      "type": "convar",
      "default": 1,
      "flags": ["rep", "cheat"],
      "description": "Prescale the clock by this amount."
    },
    {
      "command": "host_timescale_dec",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Decrement the timescale by one step."
    },
    {
      "command": "host_timescale_inc",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Increment the timescale by one step."
    },
    {
      "command": "host_writeconfig",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Saves out the user config values."
    },
    {
      "command": "hostage_debug",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Show hostage AI debug information."
    },
    {
      "command": "hostage_is_silent",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "When set, the hostage won't play any code driven response rules lines."
    },
    {
      "command": "hostfile",
      "type": "convar",
      "default": "host.txt",
      "flags": ["sv", "release"],
      "description": "The HOST file to load."
    },
    {
      "command": "hostip",
      "type": "convar",
      "default": 0,
      "flags": ["release"],
      "description": "Host game server IP."
    },
    {
      "command": "hostname",
      "type": "convar",
      "default": "",
      "flags": ["release"],
      "description": "Hostname for server."
    },
    {
      "command": "hostname_in_client_status",
      "type": "convar",
      "default": false,
      "flags": ["release"],
      "description": "Show server hostname in client status."
    },
    {
      "command": "hostport",
      "type": "convar",
      "default": 27015,
      "flags": ["release"],
      "description": "Host game server port."
    },
    {
      "command": "hud_fastswitch",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "hud_scaling",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a"],
      "description": "Scales HUD elements."
    },
    {
      "command": "hud_showtargetid",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "per_user"],
      "description": "Enables display of target names."
    },
    {
      "command": "hurtme",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Hurts the player. Arguments: <health to lose>"
    },
    {
      "command": "ik_debug_chain_to_filter_by",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "ik_enable",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable IK."
    },
    {
      "command": "ik_hinge_debug_bone_index",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "imgui_set_selection",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Sets ImGui selection"
    },
    {
      "command": "imgui_set_status_text",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Sets ImGui header status text"
    },
    {
      "command": "impulse",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Triggers impulse command"
    },
    {
      "command": "incrementvar",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Increment specified convar value."
    },
    {
      "command": "inferno_child_spawn_interval_multiplier",
      "type": "convar",
      "default": 0.1,
      "flags": ["sv", "cheat"],
      "description": "Amount spawn interval increases for each child"
    },
    {
      "command": "inferno_child_spawn_max_depth",
      "type": "convar",
      "default": 4,
      "flags": ["sv", "rep", "release"],
      "description": ""
    },
    {
      "command": "inferno_damage",
      "type": "convar",
      "default": 40,
      "flags": ["sv", "cheat"],
      "description": "Damage per second"
    },
    {
      "command": "inferno_debug",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "inferno_dlight_spacing",
      "type": "convar",
      "default": 7200,
      "flags": ["cl", "cheat"],
      "description": "Inferno dlights are at least this far apart"
    },
    {
      "command": "inferno_flame_lifetime",
      "type": "convar",
      "default": 7,
      "flags": ["sv", "rep", "release"],
      "description": "Average lifetime of each flame in seconds"
    },
    {
      "command": "inferno_flame_spacing",
      "type": "convar",
      "default": 42,
      "flags": ["sv", "cheat"],
      "description": "Minimum distance between separate flame spawns"
    },
    {
      "command": "inferno_forward_reduction_factor",
      "type": "convar",
      "default": 0.9,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "inferno_friendly_fire_duration",
      "type": "convar",
      "default": 6,
      "flags": ["sv", "cheat"],
      "description": "For this long, FF is credited back to the thrower."
    },
    {
      "command": "inferno_initial_spawn_interval",
      "type": "convar",
      "default": 0.02,
      "flags": ["sv", "cheat"],
      "description": "Time between spawning flames for first fire"
    },
    {
      "command": "inferno_max_child_spawn_interval",
      "type": "convar",
      "default": 0.5,
      "flags": ["sv", "cheat"],
      "description": "Largest time interval for child flame spawning"
    },
    {
      "command": "inferno_max_flames",
      "type": "convar",
      "default": 16,
      "flags": ["sv", "rep", "release"],
      "description": "Maximum number of flames that can be created"
    },
    {
      "command": "inferno_max_range",
      "type": "convar",
      "default": 150,
      "flags": ["sv", "rep", "release"],
      "description": "Maximum distance flames can spread from their initial ignition point"
    },
    {
      "command": "inferno_per_flame_spawn_duration",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "cheat"],
      "description": "Duration each new flame will attempt to spawn new flames"
    },
    {
      "command": "inferno_scorch_decals",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "inferno_smoke_volume_density",
      "type": "convar",
      "default": 0.1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "inferno_spawn_angle",
      "type": "convar",
      "default": 45,
      "flags": ["sv", "cheat"],
      "description": "Angular change from parent"
    },
    {
      "command": "inferno_surface_offset",
      "type": "convar",
      "default": 20,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "inferno_velocity_decay_factor",
      "type": "convar",
      "default": 0.2,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "inferno_velocity_factor",
      "type": "convar",
      "default": 0.003,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "inferno_velocity_normal_factor",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "input_button_code_is_scan_code",
      "type": "convar",
      "default": true,
      "flags": ["a"],
      "description": "Bind keys based on keyboard position instead of key name"
    },
    {
      "command": "input_filter_relative_analog_inputs",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "input_forceuser",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": "Force user input to this split screen player."
    },
    {
      "command": "install_dlc_workshoptools_cvar",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "release"],
      "description": "DLC Install Status"
    },
    {
      "command": "invnext",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "invnextselect",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "invprev",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "invprevselect",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "ip",
      "type": "convar",
      "default": 0,
      "flags": ["release"],
      "description": "Overrides IP for multihomed hosts"
    },
    {
      "command": "iv_debugbone",
      "type": "convar",
      "default": 0,
      "flags": ["release"],
      "description": "Debug bone name for interpolation spew of CAnimationState."
    },
    {
      "command": "joy_advanced",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "joy_advaxisr",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "joy_advaxisu",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "joy_advaxisv",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "joy_advaxisx",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "joy_advaxisy",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "joy_advaxisz",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "joy_axisbutton_threshold",
      "type": "convar",
      "default": 0.3,
      "flags": ["a"],
      "description": "Analog axis range before a button press is registered."
    },
    {
      "command": "joy_axisr_deadzone",
      "type": "convar",
      "default": 0.15,
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_axisr_relative",
      "type": "convar",
      "default": false,
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_axisu_deadzone",
      "type": "convar",
      "default": 0.15,
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_axisu_relative",
      "type": "convar",
      "default": false,
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_axisv_deadzone",
      "type": "convar",
      "default": 0.15,
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_axisv_relative",
      "type": "convar",
      "default": false,
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_axisx_deadzone",
      "type": "convar",
      "default": 0.15,
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_axisx_relative",
      "type": "convar",
      "default": false,
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_axisy_deadzone",
      "type": "convar",
      "default": 0.15,
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_axisy_relative",
      "type": "convar",
      "default": false,
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_axisz_deadzone",
      "type": "convar",
      "default": 0.15,
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_axisz_relative",
      "type": "convar",
      "default": false,
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_circle_correct_mode",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_circle_correct_mode_vehicle",
      "type": "convar",
      "default": 2,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_display_input",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "joy_forward_sensitivity",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_movement_stick",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "per_user"],
      "description": "Which stick controls movement (0 is left stick)"
    },
    {
      "command": "joy_name",
      "type": "convar",
      "default": "joystick",
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "joy_pitch_sensitivity",
      "type": "convar",
      "default": 3,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_pitchsensitivity",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_response_look",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_response_move",
      "type": "convar",
      "default": 9,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_side_sensitivity",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_sidesensitivity",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "joy_wingmanwarrior_centerhack",
      "type": "convar",
      "default": false,
      "flags": ["a"],
      "description": "Wingman warrior centering hack."
    },
    {
      "command": "joy_wingmanwarrior_turnhack",
      "type": "convar",
      "default": false,
      "flags": ["a"],
      "description": "Wingman warrior hack related to turn axes."
    },
    {
      "command": "joy_yaw_sensitivity",
      "type": "convar",
      "default": 3,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "joy_yawsensitivity",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "joystick",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": "True if the joystick is enabled, false otherwise."
    },
    {
      "command": "key_findbinding",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Find key bound to specified command string."
    },
    {
      "command": "key_listboundkeys",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "List bound keys with bindings."
    },
    {
      "command": "kick",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Kick a player by name."
    },
    {
      "command": "kickid",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Kick a player by userid or uniqueid, with a message."
    },
    {
      "command": "kickid_hltv",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Kick a player by userid or uniqueid, with a message."
    },
    {
      "command": "kill",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Kills the player with generic damage"
    },
    {
      "command": "killvector",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>"
    },
    {
      "command": "labelled_debug_helper_arc_segments",
      "type": "convar",
      "default": 20,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "labelled_debug_helper_enabled",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "labelled_debug_helper_scale",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "labelled_debug_helper_show_position",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "labelled_debug_helper_show_text",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "labelled_debug_helper_skeleton_show_bone_names",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "lastinv",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "launch_warmup_map",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "norecord", "clientcmd_can_execute"],
      "description": "Launches warmup map"
    },
    {
      "command": "lb_barnlight_shadowmap_scale",
      "type": "convar",
      "default": 1,
      "flags": ["release"],
      "description": "Scale for computed barnlight shadowmap size"
    },
    {
      "command": "lb_shadow_map_culling",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "lb_show_light_fog_clipmap_cb_cost",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Show cost of lights in fog clipmap constant buffer. yellow = 1 cost, red = 6 cost"
    },
    {
      "command": "lightquery_debug_direct_lighting",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "lightquery_debug_indirect_lighting",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "listdemo",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "List demo file contents."
    },
    {
      "command": "listissues",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "List all the issues that can be voted on."
    },
    {
      "command": "lobby_default_privacy_bits2",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a", "release"],
      "description": "Lobby default permissions (0: private, 1: public)"
    },
    {
      "command": "lockMoveControllerRet",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "log",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "off >."
    },
    {
      "command": "log_color",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Set the color of a logging channel."
    },
    {
      "command": "log_dumpchannels",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Dumps information about all logging channels."
    },
    {
      "command": "log_flags",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Set the flags on a logging channel."
    },
    {
      "command": "log_level",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Set the spew level of a logging channel."
    },
    {
      "command": "log_verbosity",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Set the verbosity of a logging channel."
    },
    {
      "command": "logaddress_add_http",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "nolog", "release"],
      "description": "Set URI of a listener to receive logs via http post. Wrap URI in double quotes."
    },
    {
      "command": "logaddress_add_http_delayed",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "nolog", "release"],
      "description": "Set a delay and URI of a listener to receive logs via http post. Wrap URI in double quotes."
    },
    {
      "command": "logaddress_delall_http",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "nolog", "release"],
      "description": "Remove all http listeners from the dispatch list."
    },
    {
      "command": "logaddress_list_http",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "nolog", "release"],
      "description": "List all URIs currently receiving server logs"
    },
    {
      "command": "logaddress_token_secret",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Set a secret string that will be hashed when using logaddress with explicit token hash."
    },
    {
      "command": "logic_npc_counter_debug",
      "type": "convar",
      "default": false,
      "flags": ["sv", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "+lookatweapon",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "-lookatweapon",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "m_pitch",
      "type": "convar",
      "default": 0.022,
      "flags": ["cl", "a", "per_user"],
      "description": "Mouse pitch factor."
    },
    {
      "command": "m_yaw",
      "type": "convar",
      "default": 0.022,
      "flags": ["cl", "a", "per_user"],
      "description": "Mouse yaw factor."
    },
    {
      "command": "map",
      "type": "command",
      "default": "cmd",
      "flags": ["release", "vconsole_fuzzy", "vconsole_set_focus"],
      "description": "map <mapname> :Load a new map."
    },
    {
      "command": "map_enable_background_maps",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Enables/disables portrait background maps."
    },
    {
      "command": "map_setbombradius",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Sets the bomb radius for the map."
    },
    {
      "command": "map_showbombradius",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Shows bomb radius from the center of each bomb site and planted bomb."
    },
    {
      "command": "mapgroup",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "norecord", "release"],
      "description": "Specify a map group."
    },
    {
      "command": "mapoverview_allow_client_draw",
      "type": "convar",
      "default": false,
      "flags": ["cl", "release"],
      "description": "Allow a client to draw on the map overview."
    },
    {
      "command": "mapoverview_icon_scale",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "release"],
      "description": "Sets the icon scale multiplier for the overview map. Valid values are 0.5 to 3.0."
    },
    {
      "command": "maps",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Displays list of maps."
    },
    {
      "command": "markup_group_ent_bbox",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "markup_group_ent_bbox <markup_group name> -> toggle ent_bbox for all members of the named markup group."
    },
    {
      "command": "markup_group_ent_text",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "markup_group_ent_text <markup_group name> -> toggle ent_text for all members of the named markup group."
    },
    {
      "command": "markup_group_spew",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Spew all current markup groups and their members."
    },
    {
      "command": "mat_colcorrection_forceentitiesclientside",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Forces color correction entities to be updated on the client."
    },
    {
      "command": "mat_disable_normal_mapping",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "mat_fullbright",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_lpv_luxels",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_luxels",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_max_lighting_complexity",
      "type": "convar",
      "default": 8,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_overdraw",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": "Visualize overdraw."
    },
    {
      "command": "mat_overdraw_color",
      "type": "convar",
      "default": "0.075000 0.150000 0.300000",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_shading_complexity",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Visualize shading complexity."
    },
    {
      "command": "mat_shading_complexity_color",
      "type": "convar",
      "default": "1.000000 0.500000 0.250000",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_shading_complexity_max_instruction_count",
      "type": "convar",
      "default": 1024,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_shading_complexity_max_register_count",
      "type": "convar",
      "default": 128,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_show_distance_field",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": "0=Off, 1=Visualize trace from camera, 2=Visualize occlusion."
    },
    {
      "command": "mat_tonemap_bloom_scale",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_tonemap_bloom_start_value",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_tonemap_force_accelerate_exposure_down",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_tonemap_force_average_lum_min",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": "Override. Old default was 3.0."
    },
    {
      "command": "mat_tonemap_force_log_lum_max",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_tonemap_force_log_lum_min",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_tonemap_force_max",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_tonemap_force_min",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_tonemap_force_percent_bright_pixels",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": "Override. Old value was 1.0."
    },
    {
      "command": "mat_tonemap_force_percent_target",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": "Override. Old default was 45."
    },
    {
      "command": "mat_tonemap_force_rate",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_tonemap_force_scale",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_tonemap_force_use_alpha",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_tonemap_uncap_exposure",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "mat_wireframe",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": "0=Off, 1=Surface Wireframe, 2=Transparent Wireframe."
    },
    {
      "command": "menuselect",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "clientcmd_can_execute"],
      "description": "Menu selection."
    },
    {
      "command": "mesh_calculate_curvature_smooth_invert",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "mesh_calculate_curvature_smooth_pass_count",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "mesh_calculate_curvature_smooth_weight",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "minimap_create",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Does work to create a minimap."
    },
    {
      "command": "mm_csgo_community_search_players_min",
      "type": "convar",
      "default": 3,
      "flags": ["a", "release"],
      "description": "When matchmaking, look for servers with at least this many human players."
    },
    {
      "command": "mm_dedicated_force_servers",
      "type": "convar",
      "default": 0,
      "flags": ["release"],
      "description": "Specify preferred server addresses (e.g., privateip1:port,publicip2:port|privateip2:port)."
    },
    {
      "command": "mm_dedicated_search_maxping",
      "type": "convar",
      "default": 150,
      "flags": ["a"],
      "description": "Longest preferred ping to dedicated servers for games (ms)."
    },
    {
      "command": "mm_queue_show_stats",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "clientcmd_can_execute"],
      "description": "Display global server stats."
    },
    {
      "command": "mm_server_search_lan_ports",
      "type": "convar",
      "default": "27015,27016,27017,27018,27019,27020",
      "flags": ["a", "release"],
      "description": "Ports to scan during LAN discovery; also used for LAN servers behind NATs."
    },
    {
      "command": "mm_session_search_qos_timeout",
      "type": "convar",
      "default": 15,
      "flags": ["release"],
      "description": ""
    },
    {
      "command": "mm_session_sys_kick_ban_duration",
      "type": "convar",
      "default": 180,
      "flags": ["release"],
      "description": ""
    },
    {
      "command": "mm_session_sys_pkey",
      "type": "convar",
      "default": 0,
      "flags": ["release"],
      "description": ""
    },
    {
      "command": "mobile_fps_increase_during_charging",
      "type": "convar",
      "default": false,
      "flags": ["a"],
      "description": "If true, increase framerate limit while charging."
    },
    {
      "command": "mobile_fps_increase_during_touch",
      "type": "convar",
      "default": true,
      "flags": ["a"],
      "description": "If true, increase framerate limit during touch."
    },
    {
      "command": "mobile_fps_limit",
      "type": "convar",
      "default": 30,
      "flags": ["a"],
      "description": "Mobile FPS limit - 15, 30, 60."
    },
    {
      "command": "model_default_preview_sequence_name",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "a", "rep"],
      "description": ""
    },
    {
      "command": "molotov_throw_detonate_time",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "motdfile",
      "type": "convar",
      "default": "motd.txt",
      "flags": ["sv", "release"],
      "description": "The MOTD file to load."
    },
    {
      "command": "mouse_inverty",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": "Invert mouse Y-axis."
    },
    {
      "command": "mp_afterroundmoney",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Amount of money awarded to every player after each round."
    },
    {
      "command": "mp_anyone_can_pickup_c4",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If set, everyone can pick up the C4, not just Ts."
    },
    {
      "command": "mp_autokick",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "Kick idle/team-killing/team-damaging players."
    },
    {
      "command": "mp_autoteambalance",
      "type": "convar",
      "default": true,
      "flags": ["sv", "nf", "release"],
      "description": ""
    },
    {
      "command": "mp_backup_restore_list_files",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Lists recent backup round files."
    },
    {
      "command": "mp_backup_restore_load_autopause",
      "type": "convar",
      "default": true,
      "flags": ["sv", "release"],
      "description": "Auto-pause match after restoring round data."
    },
    {
      "command": "mp_backup_restore_load_file",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Load player/teams scores and reset to next round from backup."
    },
    {
      "command": "mp_backup_round_auto",
      "type": "convar",
      "default": true,
      "flags": ["sv", "release"],
      "description": "Keep in-memory backups to handle reconnecting players."
    },
    {
      "command": "mp_backup_round_file",
      "type": "convar",
      "default": "backup",
      "flags": ["sv", "release"],
      "description": "Prefix for saved round info files."
    },
    {
      "command": "mp_backup_round_file_last",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Holds the name of the most recently written backup file."
    },
    {
      "command": "mp_backup_round_file_pattern",
      "type": "convar",
      "default": "%prefix%_round%round%.txt",
      "flags": ["sv", "release"],
      "description": "Filename pattern for round backup files."
    },
    {
      "command": "mp_bot_ai_bt",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Use the specified behavior tree file to drive bot behavior."
    },
    {
      "command": "mp_bot_ai_bt_clear_cache",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Clears the cache for behavior tree files."
    },
    {
      "command": "mp_buy_allow_grenades",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Whether players can purchase grenades."
    },
    {
      "command": "mp_buy_allow_guns",
      "type": "convar",
      "default": 255,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Bitmask for gun types allowed to purchase."
    },
    {
      "command": "mp_buy_anywhere",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Buy anywhere: 0=default, 1=both, 2=T, 3=CT."
    },
    {
      "command": "mp_buy_during_immunity",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Allow buying while immune. 0=default, 1=both, 2=T, 3=CT."
    },
    {
      "command": "mp_buytime",
      "type": "convar",
      "default": 20,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Seconds after round start to buy items."
    },
    {
      "command": "mp_c4_cannot_be_defused",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If set, the planted C4 cannot be defused."
    },
    {
      "command": "mp_c4timer",
      "type": "convar",
      "default": 40,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Seconds from arming the C4 until it explodes."
    },
    {
      "command": "mp_competitive_endofmatch_extra_time",
      "type": "convar",
      "default": 15,
      "flags": ["sv", "release"],
      "description": "Extra time for rankings after a competitive match finishes."
    },
    {
      "command": "mp_consecutive_loss_aversion",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "rep", "release"],
      "description": "How loss streak is affected with a round win (0/1/2)."
    },
    {
      "command": "mp_consecutive_loss_max",
      "type": "convar",
      "default": 4,
      "flags": ["sv", "rep", "release"],
      "description": ""
    },
    {
      "command": "mp_coop_force_join_ct",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Real players auto-join CT on join."
    },
    {
      "command": "mp_coopmission_bot_difficulty_offset",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "rep", "release"],
      "description": "Difficulty offset modifier for bots during coop missions."
    },
    {
      "command": "mp_coopmission_mission_number",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Which mission the map should run after it loads."
    },
    {
      "command": "mp_coopterrorhunt_kill_add_time",
      "type": "convar",
      "default": 10,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Seconds added to the clock when players get a kill."
    },
    {
      "command": "mp_coopterrorhunt_num_enemies",
      "type": "convar",
      "default": 20,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of enemies CTs must hunt and kill."
    },
    {
      "command": "mp_ct_default_grenades",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Default CT grenades. Multiple: space-separated weapon class names."
    },
    {
      "command": "mp_ct_default_melee",
      "type": "convar",
      "default": "weapon_knife",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Default CT melee weapon. For taser add 'weapon_taser' (requires mp_weapons_allow_zeus=1)."
    },
    {
      "command": "mp_ct_default_primary",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Default CT primary (rifle) weapon."
    },
    {
      "command": "mp_ct_default_secondary",
      "type": "convar",
      "default": "weapon_hkp2000",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Default CT secondary (pistol) weapon."
    },
    {
      "command": "mp_damage_headshot_only",
      "type": "convar",
      "default": false,
      "flags": ["sv", "rep", "release"],
      "description": "Determines whether non-headshot hits do any damage."
    },
    {
      "command": "mp_damage_scale_ct_body",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "rep", "release"],
      "description": "Scales the damage a CT player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%)"
    },
    {
      "command": "mp_damage_scale_ct_head",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "rep", "release"],
      "description": "Scales the damage a CT player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%). REMEMBER! headshots do 4x the damage of the body before this scaler is applied."
    },
    {
      "command": "mp_damage_scale_t_body",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "rep", "release"],
      "description": "Scales the damage a T player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%)"
    },
    {
      "command": "mp_damage_scale_t_head",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "rep", "release"],
      "description": "Scales the damage a T player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%). REMEMBER! headshots do 4x the damage of the body before this scaler is applied."
    },
    {
      "command": "mp_damage_vampiric_amount",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "rep", "release"],
      "description": "If Set to non-0, will determine the fraction of damage dealt that will be given to attacker."
    },
    {
      "command": "mp_death_drop_breachcharge",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Drop breachcharge on player death"
    },
    {
      "command": "mp_death_drop_c4",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Whether c4 is droppable"
    },
    {
      "command": "mp_death_drop_defuser",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Drop defuser on player death"
    },
    {
      "command": "mp_death_drop_grenade",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Which grenade to drop on player death: 0=none, 1=best, 2=current or best, 3=all grenades"
    },
    {
      "command": "mp_death_drop_gun",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Which gun to drop on player death: 0=none, 1=best, 2=current or best"
    },
    {
      "command": "mp_death_drop_healthshot",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Drop healthshot on player death"
    },
    {
      "command": "mp_death_drop_taser",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Drop taser on player death"
    },
    {
      "command": "mp_deathcam_skippable",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "Determines whether a player can early-out of the deathcam."
    },
    {
      "command": "mp_default_team_winner_no_objective",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If the map doesn't define an objective (bomb, hostage, etc), the value of this convar will declare the winner when the time runs out in the round."
    },
    {
      "command": "mp_defuser_allocation",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How to allocate defusers to CTs at start or round: 0=none, 1=random, 2=everyone"
    },
    {
      "command": "mp_disable_autokick",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Prevents a userid from being auto-kicked"
    },
    {
      "command": "mp_disconnect_kills_bots",
      "type": "convar",
      "default": false,
      "flags": ["sv", "release"],
      "description": "When a bot disconnects, kill them first. Requires mp_disconnect_kills_players."
    },
    {
      "command": "mp_disconnect_kills_players",
      "type": "convar",
      "default": true,
      "flags": ["sv", "release"],
      "description": "When a player disconnects, kill them first (triggering item drops, stats, etc.)"
    },
    {
      "command": "mp_display_kill_assists",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Whether to display and score player assists"
    },
    {
      "command": "mp_dm_bonus_length_max",
      "type": "convar",
      "default": 30,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Maximum time the bonus time will last (in seconds)"
    },
    {
      "command": "mp_dm_bonus_length_min",
      "type": "convar",
      "default": 30,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Minimum time the bonus time will last (in seconds)"
    },
    {
      "command": "mp_dm_bonus_percent",
      "type": "convar",
      "default": 50,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Percent of points additionally awarded when someone gets a kill with the bonus weapon during the bonus period."
    },
    {
      "command": "mp_dm_bonusweapon_dogtags",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Additional dogtags to drop when making a kill with the bonus weapon"
    },
    {
      "command": "mp_dm_dogtag_score",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Points to award for picking up a dogtag in deathmatch."
    },
    {
      "command": "mp_dm_healthshot_killcount",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Grant healthshots in deathmatch after n kills"
    },
    {
      "command": "mp_dm_kill_base_score",
      "type": "convar",
      "default": 10,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of base points to award for a kill in deathmatch. Cheaper weapons award 1 or 2 additional points."
    },
    {
      "command": "mp_dm_teammode",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "In deathmatch, enables team DM visuals & scoring (0: personal, 1: team mode, 2: use team contribution score)"
    },
    {
      "command": "mp_dm_teammode_bonus_score",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Team deathmatch victory points to award for kill with bonus weapon"
    },
    {
      "command": "mp_dm_teammode_dogtag_score",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Team deathmatch victory points to award for collecting enemy dogtags"
    },
    {
      "command": "mp_dm_teammode_kill_score",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Team deathmatch victory points to award for enemy kill"
    },
    {
      "command": "mp_dm_time_between_bonus_max",
      "type": "convar",
      "default": 40,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Maximum time a bonus time will start after the round start or after the last bonus (in seconds)"
    },
    {
      "command": "mp_dm_time_between_bonus_min",
      "type": "convar",
      "default": 30,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Minimum time a bonus time will start after the round start or after the last bonus (in seconds)"
    },
    {
      "command": "mp_dogtag_despawn_on_killer_death",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "Whether dogtags should despawn when their killer dies"
    },
    {
      "command": "mp_dogtag_despawn_time",
      "type": "convar",
      "default": 120,
      "flags": ["sv", "rep", "release"],
      "description": "How many seconds dogtags should stay around before despawning automatically (0 = infinite)"
    },
    {
      "command": "mp_dogtag_pickup_rule",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "rep", "release"],
      "description": "Who is eligible to pick up a dogtag (0 = killer only, 1 = killer's team, 2 = victim's team, 3 = killer & victim's team, 4 = anyone)"
    },
    {
      "command": "mp_drop_grenade_enable",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Allows players to drop grenades."
    },
    {
      "command": "mp_drop_knife_enable",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Allows players to drop knives."
    },
    {
      "command": "mp_economy_reset_rounds",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Reset all player money every N rounds (0 for never)"
    },
    {
      "command": "mp_endmatch_votenextleveltime",
      "type": "convar",
      "default": 20,
      "flags": ["sv", "release"],
      "description": "If mp_endmatch_votenextmap is set, players have this much time to vote on the next map at match end."
    },
    {
      "command": "mp_endmatch_votenextmap",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Whether or not players vote for the next map at the end of the match when the final scoreboard comes up"
    },
    {
      "command": "mp_endmatch_votenextmap_keepcurrent",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If set, keeps the current map in the list of voting options. If not set, the current map will not appear in the list of voting options."
    },
    {
      "command": "mp_endmatch_votenextmap_wargames_modes",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Modes available for endmatch voting during War Games. Separate names with spaces."
    },
    {
      "command": "mp_endmatch_votenextmap_wargames_nummaps",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "release"],
      "description": "Maximum number of maps to include in endmatch voting during War Games"
    },
    {
      "command": "mp_endmatch_votenextmap_wargames_nummodes",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "release"],
      "description": "Maximum number of other War Games to include in endmatch voting during War Games"
    },
    {
      "command": "mp_endwarmup_player_count",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of players required to be connected to end warmup early. 0 to require maximum players for mode."
    },
    {
      "command": "mp_equipment_reset_rounds",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Reset all player equipment every N rounds (0 for never)"
    },
    {
      "command": "mp_fists_replace_melee",
      "type": "convar",
      "default": true,
      "flags": ["sv", "release"],
      "description": "If enabled then when melee weapon is dropped player will have fists, when melee weapon is picked up then fists are unavailable"
    },
    {
      "command": "mp_footsteps_serverside",
      "type": "convar",
      "default": true,
      "flags": ["sv", "release"],
      "description": "Makes the server always play footstep sounds. Clients never calculate footstep sounds locally, instead relying on the server."
    },
    {
      "command": "mp_force_pick_time",
      "type": "convar",
      "default": 15,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "The amount of time a player has on the team screen to make a selection before being auto-teamed"
    },
    {
      "command": "mp_forcecamera",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Restricts spectator modes for dead players"
    },
    {
      "command": "mp_fraglimit",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "nf", "release"],
      "description": ""
    },
    {
      "command": "mp_free_armor",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines whether kevlar (1+) and/or helmet (2+) are given automatically."
    },
    {
      "command": "mp_freezetime",
      "type": "convar",
      "default": 15,
      "flags": ["sv", "nf", "rep", "release"],
      "description": "how many seconds to keep players frozen when the round starts"
    },
    {
      "command": "mp_friendlyfire",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Allows team members to injure other members of their team"
    },
    {
      "command": "mp_give_player_c4",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Whether this map should spawn a c4 bomb for a player or not."
    },
    {
      "command": "mp_global_damage_per_second",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "rep", "release"],
      "description": "If above 0, deal non-lethal damage to players over time."
    },
    {
      "command": "mp_guardian_ai_bt_difficulty_adjust_wave_interval",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "rep", "release"],
      "description": "Adjust the guardian bots' difficulty every nth guardian wave when using behavior trees."
    },
    {
      "command": "mp_guardian_ai_bt_difficulty_cap_beginning_round",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "rep", "release"],
      "description": "Starting this round a difficulty cap will be applied to the bots."
    },
    {
      "command": "mp_guardian_ai_bt_difficulty_initial_value",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "rep", "release"],
      "description": "Starting difficulty level for the gardian bots."
    },
    {
      "command": "mp_guardian_ai_bt_difficulty_max_next_level_bots",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "rep", "release"],
      "description": "How many bots to increase difficulty per wave - this many easier bots will get harder."
    },
    {
      "command": "mp_guardian_bomb_plant_custom_x_mark_location",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "x,y,z to display an X for the bomb plant in guardian missions with custom bomb plant boundaries."
    },
    {
      "command": "mp_guardian_bot_money_per_wave",
      "type": "convar",
      "default": 800,
      "flags": ["sv", "rep", "release"],
      "description": "The amount of money bots get time each wave the players complete. This # is absolute and not additive, the money is set to (this)x(wave#) for each bot on each wave."
    },
    {
      "command": "mp_guardian_force_collect_hostages_timeout",
      "type": "convar",
      "default": 50,
      "flags": ["sv", "release"],
      "description": "Force bots to collect hostages after this amount of time if no enemy has been seen."
    },
    {
      "command": "mp_guardian_give_random_grenades_to_bots",
      "type": "convar",
      "default": true,
      "flags": ["sv", "release"],
      "description": "If set guardian bots will be given grenades at the beginning of the wave."
    },
    {
      "command": "mp_guardian_loc_string_hud",
      "type": "convar",
      "default": "#guardian_mission_type_kills",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Loc string token to use on hud for this mission, otherwise default to kills with weapon."
    },
    {
      "command": "mp_guardian_loc_weapon",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Override to weapon dialog var applied to UI"
    },
    {
      "command": "mp_guardian_player_dist_max",
      "type": "convar",
      "default": 2000,
      "flags": ["sv", "rep", "release"],
      "description": "The maximum distance a player is allowed to get from the bombsite before they're killed."
    },
    {
      "command": "mp_guardian_player_dist_min",
      "type": "convar",
      "default": 1300,
      "flags": ["sv", "rep", "release"],
      "description": "The distance at which we start to warn a player when they are too far from the guarded bombsite."
    },
    {
      "command": "mp_guardian_special_kills_needed",
      "type": "convar",
      "default": 10,
      "flags": ["sv", "rep", "release"],
      "description": "The number of kills needed with a specific weapon."
    },
    {
      "command": "mp_guardian_special_weapon_needed",
      "type": "convar",
      "default": "awp",
      "flags": ["sv", "rep", "release"],
      "description": "The weapon that needs to be used to increment the kills needed to complete the mission."
    },
    {
      "command": "mp_guardian_target_site",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "release"],
      "description": "If set to the index of a bombsite, will cause random spawns to be only created near that site."
    },
    {
      "command": "mp_halftime",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines whether the match switches sides in a halftime event."
    },
    {
      "command": "mp_halftime_duration",
      "type": "convar",
      "default": 15,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Target number of seconds that halftime lasts; shortened if team intros are active"
    },
    {
      "command": "mp_halftime_pausematch",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Set to 1 to pause match after halftime countdown elapses. Match must be resumed by vote or admin."
    },
    {
      "command": "mp_halftime_pausetimer",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Set to 1 to stay in halftime indefinitely. Set to 0 to resume the timer."
    },
    {
      "command": "mp_heavyassaultsuit_aimpunch",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How much EXTRA aim punch will happen when a player wearing the assault suit gets when shot"
    },
    {
      "command": "mp_heavyassaultsuit_cooldown",
      "type": "convar",
      "default": 5,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines cooldown of purchase."
    },
    {
      "command": "mp_heavyassaultsuit_deploy_timescale",
      "type": "convar",
      "default": 0.8,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How fast a player wearing the heavy assault suit will draw their weapon (1.0 = normal speed, 0.5 = half speed)"
    },
    {
      "command": "mp_heavyassaultsuit_speed",
      "type": "convar",
      "default": 130,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "The max speed of a player when they are wearing the heavy assault suit"
    },
    {
      "command": "mp_heavybot_damage_reduction_scale",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How much damage should scale when the player wearing the heavy assault suit is shot (1.0 = no change, 0.5 = half damage)"
    },
    {
      "command": "mp_hostages_max",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "rep", "release"],
      "description": "Maximum number of hostages to spawn."
    },
    {
      "command": "mp_hostages_rescuetime",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Additional time added to round time if a hostage is reached by a CT."
    },
    {
      "command": "mp_hostages_run_speed_modifier",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "rep", "release"],
      "description": "Default is 1.0, slow down hostages by setting this to < 1.0."
    },
    {
      "command": "mp_hostages_spawn_farthest",
      "type": "convar",
      "default": false,
      "flags": ["sv", "rep", "release"],
      "description": "When enabled will consistently force the farthest hostages to spawn."
    },
    {
      "command": "mp_hostages_spawn_force_positions",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "rep", "release"],
      "description": "Comma separated list of zero based indices to force spawn positions, e.g. '0,2' or '1,6'"
    },
    {
      "command": "mp_hostages_spawn_force_positions_xyz",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "rep", "release"],
      "description": "Comma separated list of xyz locations to force spawn positions, e.g. 'x1 y1 z1,x2 y2 z2'"
    },
    {
      "command": "mp_hostages_spawn_same_every_round",
      "type": "convar",
      "default": true,
      "flags": ["sv", "rep", "release"],
      "description": "0 = spawn hostages randomly every round, 1 = same spawns for entire match."
    },
    {
      "command": "mp_hostages_takedamage",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Whether or not hostages can be hurt."
    },
    {
      "command": "mp_humanteam",
      "type": "convar",
      "default": "any",
      "flags": ["sv", "rep", "release"],
      "description": "Restricts human players to a single team {any, CT, T}"
    },
    {
      "command": "mp_ignore_round_win_conditions",
      "type": "convar",
      "default": false,
      "flags": ["sv", "rep", "release"],
      "description": "Ignore conditions which would end the current round"
    },
    {
      "command": "mp_items_prohibited",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Set this convar to a comma-delimited list of definition indices of weapons that should be prohibited from use."
    },
    {
      "command": "mp_join_grace_time",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of seconds after round start to allow a player to join a game"
    },
    {
      "command": "mp_limitteams",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "nf", "rep", "release"],
      "description": "Max # of players 1 team can have over another (0 disables check)"
    },
    {
      "command": "mp_logdetail",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Logs attacks. Values are: 0=off, 1=enemy, 2=teammate, 3=both)"
    },
    {
      "command": "mp_logdetail_items",
      "type": "convar",
      "default": false,
      "flags": ["sv", "release"],
      "description": "Logs a line any time a player acquires or loses an item."
    },
    {
      "command": "mp_logdistance_2d",
      "type": "convar",
      "default": 250,
      "flags": ["sv", "release"],
      "description": "Enables distance logging every so many units"
    },
    {
      "command": "mp_logdistance_sec",
      "type": "convar",
      "default": 15,
      "flags": ["sv", "release"],
      "description": "Enables distance logging every so many seconds"
    },
    {
      "command": "mp_logloadouts",
      "type": "convar",
      "default": true,
      "flags": ["sv", "release"],
      "description": "Enables distance logging with full loadouts"
    },
    {
      "command": "mp_logmoney",
      "type": "convar",
      "default": false,
      "flags": ["sv", "release"],
      "description": "Enables money logging. Values are: 0=off, 1=on"
    },
    {
      "command": "mp_match_can_clinch",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Can a team clinch and end the match by being so far ahead that the other team has no way of catching up?"
    },
    {
      "command": "mp_match_end_changelevel",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "At the end of the match, perform a changelevel even if next map is the same"
    },
    {
      "command": "mp_match_end_restart",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "At the end of the match, perform a restart instead of loading a new map"
    },
    {
      "command": "mp_match_restart_delay",
      "type": "convar",
      "default": 25,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Time (in seconds) until a match restarts."
    },
    {
      "command": "mp_max_armor",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines the highest level of armor allowed to be purchased. (0) None, (1) Kevlar, (2) Helmet"
    },
    {
      "command": "mp_maxmoney",
      "type": "convar",
      "default": 16000,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Maximum amount of money allowed in a player's account"
    },
    {
      "command": "mp_maxrounds",
      "type": "convar",
      "default": 24,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Max number of rounds to play before server changes maps"
    },
    {
      "command": "mp_min_halftime_duration",
      "type": "convar",
      "default": 8.5,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Minimum number of seconds that halftime lasts even if team intros are active"
    },
    {
      "command": "mp_only_cts_rescue_hostages",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "mp_overtime_enable",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If a match ends in a tie, use overtime rules to determine winner"
    },
    {
      "command": "mp_overtime_halftime_pausetimer",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If set to 1 will set mp_halftime_pausetimer to 1 before every half of overtime. Set mp_halftime_pausetimer to 0 to resume the timer."
    },
    {
      "command": "mp_overtime_limit",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "When overtime is enabled, only so many overtimes can be played"
    },
    {
      "command": "mp_overtime_maxrounds",
      "type": "convar",
      "default": 6,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "When overtime is enabled play additional rounds to determine winner"
    },
    {
      "command": "mp_overtime_startmoney",
      "type": "convar",
      "default": 10000,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Money assigned to all players at start of every overtime half"
    },
    {
      "command": "mp_pause_match",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Pause the match in the next freeze time"
    },
    {
      "command": "mp_plant_c4_anywhere",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "mp_playercashawards",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Players can earn money by performing in-game actions"
    },
    {
      "command": "mp_playerid",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Controls what information player see in the status bar: 0 all names; 1 team names; 2 no names"
    },
    {
      "command": "mp_playerid_delay",
      "type": "convar",
      "default": 0.4,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of seconds to delay showing information in the status bar"
    },
    {
      "command": "mp_playerid_hold",
      "type": "convar",
      "default": 0.1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of seconds to keep showing old information in the status bar"
    },
    {
      "command": "mp_randomspawn",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines whether players are to spawn. 0 = default; 1 = both teams; 2 = Terrorists; 3 = CTs."
    },
    {
      "command": "mp_randomspawn_dist",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If using mp_randomspawn, determines whether to test distance when selecting this spot."
    },
    {
      "command": "mp_randomspawn_los",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If using mp_randomspawn, determines whether to test Line of Sight when spawning."
    },
    {
      "command": "mp_require_gun_use_to_acquire",
      "type": "convar",
      "default": false,
      "flags": ["sv", "release"],
      "description": "Whether guns must be +used to acquire or default is touch-to-pickup"
    },
    {
      "command": "mp_respawn_immunitytime",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How many seconds after respawn immunity lasts. Set to negative value to disable warmup immunity."
    },
    {
      "command": "mp_respawn_on_death_ct",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "When set to 1, counter-terrorists will respawn after dying."
    },
    {
      "command": "mp_respawn_on_death_t",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "When set to 1, terrorists will respawn after dying."
    },
    {
      "command": "mp_respawnwavetime_ct",
      "type": "convar",
      "default": 10,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Time between respawn waves for CTs."
    },
    {
      "command": "mp_respawnwavetime_t",
      "type": "convar",
      "default": 10,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Time between respawn waves for Terrorists."
    },
    {
      "command": "mp_restartgame",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "If non-zero, game will restart in the specified number of seconds"
    },
    {
      "command": "mp_retake_ct_count",
      "type": "convar",
      "default": 4,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of CT's when playing retakes."
    },
    {
      "command": "mp_retake_ct_loadout_bonus_card",
      "type": "convar",
      "default": "#GameUI_Retake_Card_TheAWPortunity,1,1,rifle4",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "CT bonus card for full buy round when playing bomb site retake."
    },
    {
      "command": "mp_retake_ct_loadout_bonus_card_availability",
      "type": "convar",
      "default": "1,2",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "CT bonus card availability pattern for full buy round when playing bomb site retake."
    },
    {
      "command": "mp_retake_ct_loadout_default_pistol_round",
      "type": "convar",
      "default": "3;#GameUI_Retake_Card_4v3,0,0,secondary0|1;#GameUI_Retake_Card_FlashOut,0,0,secondary0,grenade2;#GameUI_Retake_Card_HideAndPeek,0,0,secondary0,grenade4",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "CT Loadouts for default pistol round when playing bomb site retake."
    },
    {
      "command": "mp_retake_ct_loadout_enemy_card",
      "type": "convar",
      "default": "#GameUI_Retake_Card_BehindEnemyLines,1,1,rifle1,grenade2",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "CT enemy card for full buy round when playing bomb site retake."
    },
    {
      "command": "mp_retake_ct_loadout_full_buy_round",
      "type": "convar",
      "default": "2;#GameUI_Retake_Card_LightEmUp,1,1,rifle1,grenade2|2;#GameUI_Retake_Card_Kobe,1,1,rifle1,grenade3|1;#GameUI_Retake_Card_1g,1,1,rifle1,grenade0|1;#GameUI_Retake_Card_DisappearingAct,1,1,rifle1,grenade4|1;#GameUI_Retake_Card_EyesOnTarget,1,1,rifle3",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "CT Loadouts for full buy round when playing bomb site retake."
    },
    {
      "command": "mp_retake_ct_loadout_light_buy_round",
      "type": "convar",
      "default": "2;#GameUI_Retake_Card_UmpInSmoke,1,1,smg2,grenade4|2;#GameUI_Retake_Card_FunNGun,1,1,smg0,grenade3|2;#GameUI_Retake_Card_Sharpshooter,1,1,rifle2,grenade2|2;#GameUI_Retake_Card_BurstBullpup,1,1,rifle0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "CT Loadouts for force buy round when playing bomb site retake."
    },
    {
      "command": "mp_retake_ct_loadout_upgraded_pistol_round",
      "type": "convar",
      "default": "2;#GameUI_Retake_Card_TakeFive,0,0,secondary3|2;#GameUI_Retake_Card_BlindFire,0,0,secondary2,grenade2|2;#GameUI_Retake_Card_OnlyTakesOne,0,0,secondary4|2;#GameUI_Retake_Card_SneakyBeakyLike,0,0,secondary2,grenade4",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "CT Loadouts for upgraded pistol round when playing bomb site retake."
    },
    {
      "command": "mp_retake_max_consecutive_rounds_same_target_site",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Limit the number of consecutive rounds targeting the same site."
    },
    {
      "command": "mp_retake_t_count",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of terrorists when playing retakes."
    },
    {
      "command": "mp_retake_t_loadout_bonus_card",
      "type": "convar",
      "default": "#GameUI_Retake_Card_TheAWPortunity,1,1,rifle4",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "T bonus card for full buy round when playing bomb site retake."
    },
    {
      "command": "mp_retake_t_loadout_bonus_card_availability",
      "type": "convar",
      "default": "1,1,2",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "T bonus card availability pattern for full buy round when playing bomb site retake."
    },
    {
      "command": "mp_retake_t_loadout_default_pistol_round",
      "type": "convar",
      "default": "3;#GameUI_Retake_Card_4BadGuysLeft,0,0,secondary0|1;#GameUI_Retake_Card_LookAway,0,0,secondary0,grenade2;#GameUI_Retake_Card_WhenThereIsSmoke,0,0,secondary0,grenade4",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "T Loadouts for default pistol round when playing bomb site retake."
    },
    {
      "command": "mp_retake_t_loadout_enemy_card",
      "type": "convar",
      "default": "#GameUI_Retake_Card_FindersKeepers,1,1,rifle1,grenade2",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "T enemy card for full buy round when playing bomb site retake."
    },
    {
      "command": "mp_retake_t_loadout_full_buy_round",
      "type": "convar",
      "default": "2;#GameUI_Retake_Card_OlReliable,1,1,rifle1,grenade2|1;#GameUI_Retake_Card_SmokeShow,1,1,rifle1,grenade4|1;#GameUI_Retake_Card_HotShot,1,1,rifle1,grenade0|1;#GameUI_Retake_Card_EyeSpy,1,1,rifle3,grenade3",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "T Loadouts for full buy round when playing bomb site retake."
    },
    {
      "command": "mp_retake_t_loadout_light_buy_round",
      "type": "convar",
      "default": "2;#GameUI_Retake_Card_BackInAFlash,1,1,smg2,grenade2|2;#GameUI_Retake_Card_AllIn,1,1,rifle0|1;#GameUI_Retake_Card_BoomBox,1,1,smg0,grenade3,grenade4|1;#GameUI_Retake_Card_SetThemFree,1,1,rifle2,grenade2",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "T Loadouts for force buy round when playing bomb site retake."
    },
    {
      "command": "mp_retake_t_loadout_upgraded_pistol_round",
      "type": "convar",
      "default": "2;#GameUI_Retake_Card_BlindFire,0,0,secondary2,grenade2|2;#GameUI_Retake_Card_QueOta,0,0,secondary4|1;#GameUI_Retake_Card_SmokeScreen,0,0,secondary2,grenade4|1;#GameUI_Retake_Card_TecTecBoom,0,0,secondary3,grenade3",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "T Loadouts for upgraded pistol round when playing bomb site retake."
    },
    {
      "command": "mp_round_restart_delay",
      "type": "convar",
      "default": 7,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of seconds to delay before restarting a round after a win"
    },
    {
      "command": "mp_roundtime",
      "type": "convar",
      "default": 1.92,
      "flags": ["sv", "nf", "rep", "release"],
      "description": "How many minutes each round takes."
    },
    {
      "command": "mp_roundtime_defuse",
      "type": "convar",
      "default": 1.92,
      "flags": ["sv", "nf", "rep", "release"],
      "description": "How many minutes each round of Bomb Defuse takes. If 0 then use mp_roundtime instead."
    },
    {
      "command": "mp_roundtime_deployment",
      "type": "convar",
      "default": 5,
      "flags": ["sv", "release"],
      "description": "How many minutes deployment for coop mission takes."
    },
    {
      "command": "mp_roundtime_hostage",
      "type": "convar",
      "default": 1.92,
      "flags": ["sv", "nf", "rep", "release"],
      "description": "How many minutes each round of Hostage Rescue takes. If 0 then use mp_roundtime instead."
    },
    {
      "command": "mp_scrambleteams",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Scramble the teams and restart the game"
    },
    {
      "command": "mp_shield_speed_deployed",
      "type": "convar",
      "default": 170,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "The max speed of a player when they have a shield deployed"
    },
    {
      "command": "mp_shield_speed_holstered",
      "type": "convar",
      "default": 200,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "The max speed of a player when they have a shield holstered"
    },
    {
      "command": "mp_shorthanded_cash_bonus_ignore_kicked",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines whether kicked players are included in the assessment for short-handedness"
    },
    {
      "command": "mp_shorthanded_cash_bonus_round_delay",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of previous rounds that a team needs to have been shorthanded before they are eligible for the short-handed bonus"
    },
    {
      "command": "mp_solid_teammates",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How solid are teammates: 0 = transparent; 1 = fully solid; 2 = can stand on top of heads"
    },
    {
      "command": "mp_spawnprotectiontime",
      "type": "convar",
      "default": 5,
      "flags": ["sv", "rep", "release"],
      "description": "Kick players who team-kill within this many seconds of a round restart."
    },
    {
      "command": "mp_spec_swapplayersides",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Toggle set the player names and team names to the opposite side in which they are are on the spectator panel."
    },
    {
      "command": "mp_spectators_max",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How many spectators are allowed in a match."
    },
    {
      "command": "mp_starting_losses",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "rep", "release"],
      "description": "Determines what the initial loss streak is."
    },
    {
      "command": "mp_startmoney",
      "type": "convar",
      "default": 800,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Amount of money each player gets when they reset"
    },
    {
      "command": "mp_suicide_penalty",
      "type": "convar",
      "default": true,
      "flags": ["sv", "release"],
      "description": "Punish players for suicides"
    },
    {
      "command": "mp_swapteams",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Swap the teams and restart the game"
    },
    {
      "command": "mp_t_default_grenades",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "The default grenades that the Ts will spawn with. To give multiple grenades, separate with spaces."
    },
    {
      "command": "mp_t_default_melee",
      "type": "convar",
      "default": "weapon_knife",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "The default melee weapon that the Ts will spawn with"
    },
    {
      "command": "mp_t_default_primary",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "The default primary (rifle) weapon that the Ts will spawn with"
    },
    {
      "command": "mp_t_default_secondary",
      "type": "convar",
      "default": "weapon_glock",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "The default secondary (pistol) weapon that the Ts will spawn with"
    },
    {
      "command": "mp_tagging_scale",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "rep", "release"],
      "description": "Scalar for player tagging modifier when hit. Lower values for greater tagging."
    },
    {
      "command": "mp_taser_recharge_time",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines recharge time for taser. -1 = disabled."
    },
    {
      "command": "mp_td_dmgtokick",
      "type": "convar",
      "default": 300,
      "flags": ["sv", "rep", "release"],
      "description": "The damage threshhold players have to exceed in a match to get kicked."
    },
    {
      "command": "mp_td_dmgtowarn",
      "type": "convar",
      "default": 200,
      "flags": ["sv", "rep", "release"],
      "description": "The damage threshhold players have to exceed in a match to get warned that they are about to be kicked."
    },
    {
      "command": "mp_td_spawndmgthreshold",
      "type": "convar",
      "default": 50,
      "flags": ["sv", "rep", "release"],
      "description": "The damage threshold players have to exceed at the start of the round to be warned/kick."
    },
    {
      "command": "mp_team_intro_time",
      "type": "convar",
      "default": 6.5,
      "flags": ["sv", "nf", "rep", "release"],
      "description": "How many seconds for team intro"
    },
    {
      "command": "mp_team_timeout_max",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of timeouts each team gets per match."
    },
    {
      "command": "mp_team_timeout_ot_add_each",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of timeouts to add for each team when match goes to 2nd and each next overtime."
    },
    {
      "command": "mp_team_timeout_ot_add_once",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Number of timeouts to add for each team when regulation time ends and match goes to overtime."
    },
    {
      "command": "mp_team_timeout_ot_max",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Max number of timeouts each team can have per OT after all OT timeouts got added."
    },
    {
      "command": "mp_team_timeout_time",
      "type": "convar",
      "default": 60,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Duration of each timeout."
    },
    {
      "command": "mp_teamcashawards",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Teams can earn money by performing in-game actions"
    },
    {
      "command": "mp_teamflag_1",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Enter a country's alpha 2 code to show that flag next to team 1's name in the spectator scoreboard."
    },
    {
      "command": "mp_teamflag_2",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Enter a country's alpha 2 code to show that flag next to team 2's name in the spectator scoreboard."
    },
    {
      "command": "mp_teamlogo_1",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Enter a team's shorthand image name to display their logo. Images can be found under tournament team resources."
    },
    {
      "command": "mp_teamlogo_2",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Enter a team's shorthand image name to display their logo. Images can be found under tournament team resources."
    },
    {
      "command": "mp_teammatchstat_1",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "A non-empty string sets first team's match stat."
    },
    {
      "command": "mp_teammatchstat_2",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "A non-empty string sets second team's match stat."
    },
    {
      "command": "mp_teammatchstat_cycletime",
      "type": "convar",
      "default": 45,
      "flags": ["sv", "release"],
      "description": "Cycle match stats after so many seconds"
    },
    {
      "command": "mp_teammatchstat_holdtime",
      "type": "convar",
      "default": 5,
      "flags": ["sv", "release"],
      "description": "Decide on a match stat and hold it additionally for at least so many seconds"
    },
    {
      "command": "mp_teammatchstat_txt",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "A non-empty string sets the match stat description, e.g. 'Match 2 of 3'."
    },
    {
      "command": "mp_teammates_are_enemies",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "When set, your teammates act as enemies and all players are valid targets."
    },
    {
      "command": "mp_teamname_1",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "A non-empty string overrides the first team's name."
    },
    {
      "command": "mp_teamname_2",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "A non-empty string overrides the second team's name."
    },
    {
      "command": "mp_teamprediction_pct",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "A value between 1 and 99 will show predictions in favor of CT team."
    },
    {
      "command": "mp_teamprediction_txt",
      "type": "convar",
      "default": "#SFUIHUD_Spectate_Predictions",
      "flags": ["sv", "release"],
      "description": "A value between 1 and 99 will set predictions in favor of first team."
    },
    {
      "command": "mp_teamscore_1",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "A non-empty string for best-of-N maps won by the first team."
    },
    {
      "command": "mp_teamscore_2",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "A non-empty string for best-of-N maps won by the second team."
    },
    {
      "command": "mp_teamscore_max",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "How many maps to win the series (bo3 max=2; bo5 max=3; bo7 max=4)"
    },
    {
      "command": "mp_technical_timeout_duration_s",
      "type": "convar",
      "default": 120,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How many seconds is a full technical timeout?"
    },
    {
      "command": "mp_technical_timeout_per_team",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How many technical timeouts are there per team?"
    },
    {
      "command": "mp_timelimit",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Game time per map in minutes"
    },
    {
      "command": "mp_tkpunish",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "rep", "release"],
      "description": "Will TK'ers and team damagers be punished in the next round? {0=no, 1=yes}"
    },
    {
      "command": "mp_unpause_match",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Resume the match"
    },
    {
      "command": "mp_use_respawn_waves",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "When set to 1, and that player's team is set to respawn, they will respawn in waves. If set to 2, teams will respawn when the whole team is dead."
    },
    {
      "command": "mp_verbose_changelevel_spew",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "mp_warmup_end",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "End warmup immediately."
    },
    {
      "command": "mp_warmup_offline_enabled",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Whether or not to do a warmup period at the start of a match in an offline (bot) match."
    },
    {
      "command": "mp_warmup_online_enabled",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Whether or not to do a warmup period at the start of an online match."
    },
    {
      "command": "mp_warmup_pausetimer",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Set to 1 to stay in warmup indefinitely. Set to 0 to resume the timer."
    },
    {
      "command": "mp_warmup_start",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Start warmup."
    },
    {
      "command": "mp_warmuptime",
      "type": "convar",
      "default": 120,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "How long the warmup period lasts. Changing this value resets warmup."
    },
    {
      "command": "mp_warmuptime_all_players_connected",
      "type": "convar",
      "default": 15,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Warmup time to use when all players have connected. 0 to disable."
    },
    {
      "command": "mp_warmuptime_match_cancelled",
      "type": "convar",
      "default": 5,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Warmup time to use when the match will be cancelled (eg. due to a live VAC ban)."
    },
    {
      "command": "mp_weapon_melee_touch_time_after_hit",
      "type": "convar",
      "default": 5,
      "flags": ["sv", "cheat", "release"],
      "description": ""
    },
    {
      "command": "mp_weapon_next_owner_touch_time",
      "type": "convar",
      "default": 1.3,
      "flags": ["sv", "cheat", "release"],
      "description": ""
    },
    {
      "command": "mp_weapon_prev_owner_touch_time",
      "type": "convar",
      "default": 1.5,
      "flags": ["sv", "cheat", "release"],
      "description": ""
    },
    {
      "command": "mp_weapon_self_inflict_amount",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "rep", "release"],
      "description": "If Set to non-0, will hurt the attacker by the specified fraction of max damage if they miss."
    },
    {
      "command": "mp_weapons_allow_heavy",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines which team, if any, can purchase Heavy guns. -1 = any; 0 = non; 2 = Ts; 3 = CTs."
    },
    {
      "command": "mp_weapons_allow_heavyassaultsuit",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines whether heavyassaultsuit is permitted."
    },
    {
      "command": "mp_weapons_allow_map_placed",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If this convar is set, when a match starts, the game will not delete weapons placed in the map."
    },
    {
      "command": "mp_weapons_allow_pistols",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines which team, if any, can purchase Pistols. -1 = any; 0 = non; 2 = Ts; 3 = CTs."
    },
    {
      "command": "mp_weapons_allow_rifles",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines which team, if any, can purchase Rifles. -1 = any; 0 = non; 2 = Ts; 3 = CTs."
    },
    {
      "command": "mp_weapons_allow_smgs",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines which team, if any, can purchase SMGs. -1 = any; 0 = non; 2 = Ts; 3 = CTs."
    },
    {
      "command": "mp_weapons_allow_typecount",
      "type": "convar",
      "default": 5,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines how many purchases of each weapon type allowed per player per round (0 to disallow purchasing, -1 to have no limit)."
    },
    {
      "command": "mp_weapons_allow_zeus",
      "type": "convar",
      "default": 5,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Determines how many Zeus purchases a player can make per round (0 to disallow, -1 to have no limit)."
    },
    {
      "command": "mp_weapons_glow_on_ground",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If this convar is set, weapons on the ground will have a glow around them."
    },
    {
      "command": "mp_weapons_max_gun_purchases_per_weapon_per_match",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Max number of times a player may purchase any weapon per match"
    },
    {
      "command": "mp_win_panel_display_time",
      "type": "convar",
      "default": 3,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "The amount of time to show the win panel between matches / halfs"
    },
    {
      "command": "multvar",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Multiply specified convar value."
    },
    {
      "command": "name",
      "type": "convar",
      "default": "",
      "flags": ["a", "per_user"],
      "description": ""
    },
    {
      "command": "nav_add_to_selected_set",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Add current area to the selected set."
    },
    {
      "command": "nav_add_to_selected_set_by_id",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Add specified area id to the selected set."
    },
    {
      "command": "nav_avoid",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggles the 'avoid this area when possible' flag used by the AI system."
    },
    {
      "command": "nav_avoid_obstacles",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_begin_deselecting",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Start continuously removing from the selected set."
    },
    {
      "command": "nav_begin_drag_deselecting",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Start dragging a selection area."
    },
    {
      "command": "nav_begin_drag_selecting",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Start dragging a selection area."
    },
    {
      "command": "nav_begin_selecting",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Start continuously adding to the selected set."
    },
    {
      "command": "nav_bfs_debug",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_check_connectivity",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Checks to be sure every (or just the marked) nav area can get to every goal area for the map (hostages or bomb site)."
    },
    {
      "command": "nav_clear_attribute",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Remove given nav attribute from all areas in the selected set."
    },
    {
      "command": "nav_clear_attributes",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Clear all nav attributes of selected area."
    },
    {
      "command": "nav_clear_selected_set",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Clear the selected set."
    },
    {
      "command": "nav_corner_adjust_adjacent",
      "type": "convar",
      "default": 18,
      "flags": ["cheat"],
      "description": "radius used to raise/lower corners in nearby areas when raising/lowering corners."
    },
    {
      "command": "nav_curve_alt",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_curve_iter",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_curve_lock",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_curve_max_step",
      "type": "convar",
      "default": 10,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_curve_set",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_curve_step",
      "type": "convar",
      "default": 0.02,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_debug_blocked",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_delete",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Deletes the currently highlighted Area."
    },
    {
      "command": "nav_delete_all_hull",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Deletes all areas with given hull category."
    },
    {
      "command": "nav_delete_marked",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Deletes the currently marked Area (if any)."
    },
    {
      "command": "nav_disconnect",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "To disconnect two Areas, mark an Area, highlight a second Area, then invoke the disconnect command. This will remove all connections between the two Areas."
    },
    {
      "command": "nav_draw_area_connections",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_area_filled",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_area_ground",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_area_hull_support",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_area_ids",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_area_inset_margin",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_area_should_be_destroyed",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_area_split_by_nav_link_mgr",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_area_split_by_obstacle_mgr",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_area_ztest",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_attribute_dynamic",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Draw all nav areas with this dynamic attribute"
    },
    {
      "command": "nav_draw_attribute_game",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Draw all nav areas with this game attribute"
    },
    {
      "command": "nav_draw_blocked",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_blocked_connections",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_connected_area_radius",
      "type": "convar",
      "default": 1000,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_dangerareas",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_externally_created",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_hidingspots",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_jump_links",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_limit",
      "type": "convar",
      "default": 300,
      "flags": ["sv", "cheat"],
      "description": "The maximum number of areas to draw in edit mode"
    },
    {
      "command": "nav_draw_link_alignment",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_links",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_markup",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_markup_offset",
      "type": "convar",
      "default": 4,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_mesh",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_mesh_grid",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Draw the mesh's spatial grid structure around the edit cursor position."
    },
    {
      "command": "nav_draw_mesh_offset",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cheat"],
      "description": "Vertical offset for drawing the mesh (useful for flat planes where the mesh is often a fixed offset from the physical ground"
    },
    {
      "command": "nav_draw_space_cells",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_space_fly",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_space_neighbors",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_space_portals",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_space_radius",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_space_swim",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_draw_vertex_normal",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_edit",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode."
    },
    {
      "command": "nav_edit_validate",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Validate navmesh structures."
    },
    {
      "command": "nav_end_deselecting",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Stop continuously removing from the selected set."
    },
    {
      "command": "nav_end_drag_deselecting",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Stop dragging a selection area."
    },
    {
      "command": "nav_end_drag_selecting",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Stop dragging a selection area."
    },
    {
      "command": "nav_end_selecting",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Stop continuously adding to the selected set."
    },
    {
      "command": "nav_gen_add_jumps",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_agent_radius_buffer",
      "type": "convar",
      "default": 0.75,
      "flags": ["cheat"],
      "description": "Buffer to add to agent radius before passing to nav gen"
    },
    {
      "command": "nav_gen_clip_polys_to_clearance",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_clip_polys_to_clearance_debug",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_connect_allow_multiple",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_connect_angle",
      "type": "convar",
      "default": 0.75,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_connect_angle_ignore_z",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_connect_dist_a",
      "type": "convar",
      "default": 1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_connect_dist_b",
      "type": "convar",
      "default": 1.5,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_connect_dist_z_mult",
      "type": "convar",
      "default": 0.5,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_connect_overlap",
      "type": "convar",
      "default": 0.5,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_degen_limit",
      "type": "convar",
      "default": 0.001,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_false",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Always false"
    },
    {
      "command": "nav_gen_island_removal",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_island_removal_all_hulls",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_join_nonzup",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_jump_connection_min_overlap_ratio",
      "type": "convar",
      "default": 0.1,
      "flags": ["cheat"],
      "description": "Minimum edge overlap required for jump connection consideration as a percentage of agent radius"
    },
    {
      "command": "nav_gen_markup_split_expand",
      "type": "convar",
      "default": 2,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_markup_split_tol_base",
      "type": "convar",
      "default": 1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_markup_split_tol_nonav",
      "type": "convar",
      "default": 1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_markup_split_tol_nonentity",
      "type": "convar",
      "default": 8,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_match_ground",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_max_bottleneck_width",
      "type": "convar",
      "default": 128,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_max_bottleneck_width_do_clip",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_max_edge_len",
      "type": "convar",
      "default": 512,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_max_edge_len_do_clip",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_max_edge_len_split_tol",
      "type": "convar",
      "default": 24,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_opt_to_quads",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_opt_to_quads_angle_limit",
      "type": "convar",
      "default": 8,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_opt_to_quads_num_steps",
      "type": "convar",
      "default": 6,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_opt_to_quads_planar_deviation_limit",
      "type": "convar",
      "default": 4,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_opt_to_quads_se_limit_end",
      "type": "convar",
      "default": 0.1,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_opt_to_quads_se_limit_start",
      "type": "convar",
      "default": 0.00001,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_opt_to_quads_weld_limit_end",
      "type": "convar",
      "default": 0.01,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_opt_to_quads_weld_limit_start",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_remove_vertical_polys",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_split_boundary_polys",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_split_multi_connection_polys",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_split_multi_connection_polys_tol",
      "type": "convar",
      "default": 0.01,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_gen_true",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Always true"
    },
    {
      "command": "nav_gen_vertical_limit",
      "type": "convar",
      "default": 88,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_genrt_debug",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_genrt_no_splice",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_genrt_no_split",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_genrt_step",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_lower_drag_volume_max",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Lower the top of the drag select volume."
    },
    {
      "command": "nav_lower_drag_volume_min",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Lower the bottom of the drag select volume."
    },
    {
      "command": "nav_mark",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands."
    },
    {
      "command": "nav_mark_attribute",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Set nav attribute for all areas in the selected set."
    },
    {
      "command": "nav_max_view_distance",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Maximum range for precomputed nav mesh visibility (0 = default 1500 units)"
    },
    {
      "command": "nav_max_vis_delta_list_length",
      "type": "convar",
      "default": 64,
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "nav_obstacle_genrt",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_obstacle_validate",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_obstruction_draw",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_obstruction_draw_change",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_obstruction_draw_dist",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_obstruction_draw_island",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_obstruction_draw_island_hull",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_obstruction_draw_movefail_blocking",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_debug",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_debug_compute_with_open_goal",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_draw_areas",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_draw_arrow",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_draw_climb_segments",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_draw_connected_areas",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_draw_ground_segments",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_draw_jump_segments",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_draw_ladder_segments",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_draw_link_segments",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_draw_tick",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_fixup_climb_up_segments",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_fixup_gap_segments",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_jump_process_debug",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_optimize",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_optimize_portals",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_optimizer_debug",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_record_draw_last_fail",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_path_record_enable",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_pathfind_debug_log",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_pathfind_draw",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_pathfind_draw_blocked",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_pathfind_draw_costs",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_pathfind_draw_fail",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_pathfind_draw_total_costs",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_pathfind_inadmissable_heuristic_factor",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_potentially_visible_dot_tolerance",
      "type": "convar",
      "default": 0.98,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_precise",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggles the 'dont avoid obstacles' flag used by the AI system."
    },
    {
      "command": "nav_raise_drag_volume_max",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Raise the top of the drag select volume."
    },
    {
      "command": "nav_raise_drag_volume_min",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Raise the bottom of the drag select volume."
    },
    {
      "command": "nav_recall_selected_set",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Re-selects the stored selected set."
    },
    {
      "command": "nav_remove_from_selected_set",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Remove current area from the selected set."
    },
    {
      "command": "nav_select_allow_blocked",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "When selecting an area under nav_edit, allow area marked as blocked."
    },
    {
      "command": "nav_select_area_id",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": "Select nav area with matching ID."
    },
    {
      "command": "nav_select_block_id",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": "Select nav space block with matching ID."
    },
    {
      "command": "nav_select_hull",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Restrict area selection to areas that can support a hull of the given category"
    },
    {
      "command": "nav_select_radius",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Adds all areas in a radius to the selection set"
    },
    {
      "command": "nav_select_with_attribute",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Selects areas with the given attribute."
    },
    {
      "command": "nav_show_area_connections",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Show connections to selected area when true"
    },
    {
      "command": "nav_show_area_info_font",
      "type": "convar",
      "default": "Consolas",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_show_area_info_font_size",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_show_area_info_font_voffset",
      "type": "convar",
      "default": -11,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_show_area_verts",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Show area vertex positions"
    },
    {
      "command": "nav_show_area_water_info",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_show_potentially_visible",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": "Show areas that are potentially visible from the current nav area"
    },
    {
      "command": "nav_smooth_calc_z",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_constrain_results",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_constrain_results_relax",
      "type": "convar",
      "default": 0.006,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_constrain_spring",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_constrain_spring_relax",
      "type": "convar",
      "default": 0.01,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_draw_accel",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_draw_boundary",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_draw_calc",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_draw_constraint_spline",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_draw_constraint_spring",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_draw_speed",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_enable",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_relax",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_relax_use_timesteps",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_separating_dist_override",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_const_override",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_factor_deriv",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_factor_dist",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_factor_speed",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_forward_dist_base",
      "type": "convar",
      "default": 50,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_forward_dist_time_limit",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_max_dist",
      "type": "convar",
      "default": 36,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_tension_max_override",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_timestep_factor_accel",
      "type": "convar",
      "default": 100,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_timestep_factor_speed",
      "type": "convar",
      "default": 100,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_timestep_max",
      "type": "convar",
      "default": 0.5,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_timestep_min",
      "type": "convar",
      "default": 0.1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_yaw_rotation_speed",
      "type": "convar",
      "default": 50,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_spring_yaw_threshold",
      "type": "convar",
      "default": 20,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_smooth_use_opt",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_space_select_dist",
      "type": "convar",
      "default": 200,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_split",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "To split an Area into two, align the split line using your cursor and invoke the split command."
    },
    {
      "command": "nav_split_place_on_ground",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "If true, nav areas will be placed flush with the ground when split."
    },
    {
      "command": "nav_split_show_line",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Show the free split line."
    },
    {
      "command": "nav_store_selected_set",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Stores the current selected set for later retrieval."
    },
    {
      "command": "nav_test_bfs_lattice_dist_0",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_bfs_lattice_dist_1",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_bfs_lattice_dist_2",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_bfs_lattice_hex",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Demonstrates searching hexagonal lattice over nav mesh."
    },
    {
      "command": "nav_test_bfs_lattice_mark",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_bfs_lattice_simple",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_bfs_lattice_spacing_0",
      "type": "convar",
      "default": 24,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_bfs_lattice_spacing_1",
      "type": "convar",
      "default": 48,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_bfs_lattice_spacing_2",
      "type": "convar",
      "default": 96,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_bfs_simple",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_boundary_zone_circle",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_boundary_zone_force",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_boundary_zone_grid_dim",
      "type": "convar",
      "default": 90,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_boundary_zone_path",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_boundary_zone_rays",
      "type": "convar",
      "default": 100,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_boundary_zone_rays_margin",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_boundary_zone_rays_random",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_curve_opt",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_detour",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_find_nearest",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Calculate the nearest point on the navmesh to the trace point. Uses selection from nav_select_hull."
    },
    {
      "command": "nav_test_find_nearest_clear",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Calculate the nearest point on the navmesh to the trace point. Uses selection from nav_select_hull."
    },
    {
      "command": "nav_test_find_random_connected",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Demonstrates finding random points that are connected in the nav mesh to the start point."
    },
    {
      "command": "nav_test_find_random_connected_dist_max",
      "type": "convar",
      "default": 1000,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_find_random_connected_dist_min",
      "type": "convar",
      "default": 100,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_find_z",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_force_npc_repath",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_genrt",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_genrt_place",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_level_hull",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Find entities that intrude into the nav mesh. List those entities in console output, and display bounding boxes around them for a while."
    },
    {
      "command": "nav_test_level_hull_move",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_multi_connection",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_npc_area",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_npc_collision",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_npc_collision_range",
      "type": "convar",
      "default": 250,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_npc_collision_show_geometry",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_path",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Calculate and draw a path from player/camera position to the test position."
    },
    {
      "command": "nav_test_path_expansion_search",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Extend nav_test_path by doing an expansion search on that path. Convar value defines dist."
    },
    {
      "command": "nav_test_path_lock_goal",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_path_lock_start",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_path_move",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_path_opt",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Enable path optimization for nav_edit_path paths."
    },
    {
      "command": "nav_test_path_opt_transitions",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_path_return",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Calculate a return path from cursor position to the path calculated by nav_test_path."
    },
    {
      "command": "nav_test_path_space",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Should nav_test_path test 3d navigation? 1 = space to space, 2 = multi-modal space/ground"
    },
    {
      "command": "nav_test_path_space_fly",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Test flight paths"
    },
    {
      "command": "nav_test_path_space_swim",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Test swim paths"
    },
    {
      "command": "nav_test_ray_space",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_rays",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_smooth",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_smooth_extern_push",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_smooth_in_speed",
      "type": "convar",
      "default": 120,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_smooth_in_yaw",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_smooth_path_speed",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_smooth_separating_dist",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_smooth_spring_const",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_smooth_spring_tension_max",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_spline",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_split_obstacle",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_split_obstacle_dirty",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_split_obstacle_leave",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_split_obstacle_size",
      "type": "convar",
      "default": 30,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_split_obstacle_update_pos",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "nav_test_vis",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Draw potentially visible areas from current cursor area."
    },
    {
      "command": "nav_test_vis_radius",
      "type": "convar",
      "default": 1500,
      "flags": ["sv", "cheat"],
      "description": "Radius used by nav_test_vis for visibility sampling."
    },
    {
      "command": "nav_toggle_place_mode",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggle 'place painting' mode to assign places to areas."
    },
    {
      "command": "nav_use_place",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Use the given place for painting; without args, use the last picked place."
    },
    {
      "command": "nav_place_pick",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Pick the place from the area under the cursor as the active place."
    },
    {
      "command": "nav_place_list",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "List all places known for this map."
    },
    {
      "command": "nav_place_floodfill",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Flood-fill the selected set with the active place."
    },
    {
      "command": "nav_place_paint_radius",
      "type": "convar",
      "default": 200,
      "flags": ["sv", "cheat"],
      "description": "Radius used while painting places."
    },
    {
      "command": "nav_unmark",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Clears the current mark."
    },
    {
      "command": "nav_update_blocked",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Recalculate which nav areas are blocked by entities/props."
    },
    {
      "command": "nav_update_visibility_on_edit",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Rebuild local visibility when editing areas."
    },
    {
      "command": "nav_validate_selected_set",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Validate structure and connections for the currently selected set."
    },
    {
      "command": "nav_validate_connected_areas",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Validate that all selected areas are mutually reachable."
    },
    {
      "command": "nav_warp_selected_set_to_cursor",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Move the selected set so its reference corner matches the cursor."
    },
    {
      "command": "nav_write",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Save the current navigation mesh to disk."
    },
    {
      "command": "nav_write_unsafe",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Force-save the mesh even if checks fail."
    },
    {
      "command": "nav_zoom_to_selected",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Focus camera/view on the selected set."
    },
    {
      "command": "nav_corner_mark",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Mark the nearest corner of the highlighted area."
    },
    {
      "command": "nav_corner_clear_mark",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Clear the marked corner."
    },
    {
      "command": "nav_corner_raise",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Raise the marked corner."
    },
    {
      "command": "nav_corner_lower",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Lower the marked corner."
    },
    {
      "command": "nav_corner_place_on_ground",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Snap the marked corner to ground."
    },
    {
      "command": "nav_connect_to_marked",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Create bidirectional connections from highlighted to marked area."
    },
    {
      "command": "nav_connect_one_way_to_marked",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Create a one-way connection from highlighted to marked area."
    },
    {
      "command": "nav_connect_undo",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Remove the last created connection."
    },
    {
      "command": "nav_merge",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Merge the marked and highlighted areas."
    },
    {
      "command": "nav_splice",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Create a new area where two are adjacent by splicing edges."
    },
    {
      "command": "nav_subdivide_selected",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Subdivide each selected area into smaller quads."
    },
    {
      "command": "nav_shift_selected_x",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Amount to shift selected set along +X when using nav_shift_selected."
    },
    {
      "command": "nav_shift_selected_y",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Amount to shift selected set along +Y when using nav_shift_selected."
    },
    {
      "command": "nav_shift_selected_z",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Amount to shift selected set along +Z when using nav_shift_selected."
    },
    {
      "command": "nav_shift_selected",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Shift the selected set by the configured X/Y/Z offsets."
    },
    {
      "command": "nav_ladder_create",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Create a ladder between two points; click bottom then top."
    },
    {
      "command": "nav_ladder_remove",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Remove the ladder under the cursor."
    },
    {
      "command": "nav_ladder_flip",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Flip the facing of the ladder under the cursor."
    },
    {
      "command": "nav_ladder_mark",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Mark the ladder under the cursor for subsequent operations."
    },
    {
      "command": "nav_link_create",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Create a manual nav link between two areas."
    },
    {
      "command": "nav_link_remove",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Remove the nav link under the cursor."
    },
    {
      "command": "nav_link_set_bidirectional",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Toggle bidirectional state for the selected link."
    },
    {
      "command": "nav_no_jump",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Toggle the 'no jump' attribute for selected areas."
    },
    {
      "command": "nav_crouch",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Toggle the 'must crouch' attribute for selected areas."
    },
    {
      "command": "nav_parkour",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Toggle the 'jump traversable' attribute for selected areas."
    },
    {
      "command": "nav_blocked",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Toggle the 'blocked' state for selected areas."
    },
    {
      "command": "nav_transient",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Toggle the 'transient' attribute for selected areas."
    },
    {
      "command": "nav_generate_place_stats",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Compute statistics for places (area count, coverage)."
    },
    {
      "command": "nav_rebuild_lighting_selected",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Rebuild lighting info for selected areas."
    },
    {
      "command": "nav_area_set_grid_snap",
      "type": "convar",
      "default": 16,
      "flags": ["sv", "cheat"],
      "description": "Grid snapping size when moving corners/areas."
    },
    {
      "command": "nav_snap_corners_to_grid",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Snap all corners of selected areas to the grid."
    },
    {
      "command": "nav_area_min_size",
      "type": "convar",
      "default": 8,
      "flags": ["sv", "cheat"],
      "description": "Minimum side length allowed when creating/splitting areas."
    },
    {
      "command": "nav_begin_area",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Begin creating a new nav area (first corner)."
    },
    {
      "command": "nav_end_area",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Finish creating a new nav area (final corner)."
    },
    {
      "command": "nav_toggle_selected_set_outline",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Draw an outline around the selected set."
    },
    {
      "command": "nav_toggle_selected_set_fill",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Fill selected areas for visibility in edit mode."
    },
    {
      "command": "nav_selected_set_color",
      "type": "convar",
      "default": "0 255 0",
      "flags": ["sv", "cheat"],
      "description": "Color used to draw the selected set (RGB)."
    },
    {
      "command": "nav_hover_color",
      "type": "convar",
      "default": "255 255 0",
      "flags": ["sv", "cheat"],
      "description": "Color used to draw the hovered area (RGB)."
    },
    {
      "command": "nav_marked_color",
      "type": "convar",
      "default": "255 128 0",
      "flags": ["sv", "cheat"],
      "description": "Color used to draw the marked area (RGB)."
    },
    {
      "command": "nav_show_place_names",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Show place names over areas in edit mode."
    },
    {
      "command": "nav_toggle_attribute_panel",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Show/hide an attribute editor panel for selected areas."
    },
    {
      "command": "nav_area_rotate_90",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Rotate the selected set 90 degrees around the cursor."
    },
    {
      "command": "nav_area_scale_uniform",
      "type": "convar",
      "default": 1.0,
      "flags": ["sv", "cheat"],
      "description": "Uniform scale factor applied by nav_scale_selected."
    },
    {
      "command": "nav_scale_selected",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Scale the selected set using nav_area_scale_uniform."
    },
    {
      "command": "nav_area_align_to_world",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Align selected areas to world axes."
    },
    {
      "command": "nav_area_make_rectangular",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Orthogonalize selected areas (rectify corners)."
    },
    {
      "command": "nav_area_cleanup_overlaps",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Remove tiny overlaps and degenerate verts in selected set."
    },
    {
      "command": "nav_area_limit_slope",
      "type": "convar",
      "default": 0.7,
      "flags": ["sv", "cheat"],
      "description": "Max ground normal dot for walkable areas (slope limit)."
    },
    {
      "command": "nav_area_walkable_height",
      "type": "convar",
      "default": 72,
      "flags": ["sv", "cheat"],
      "description": "Clearance height required for walkable areas."
    },
    {
      "command": "nav_area_walkable_step",
      "type": "convar",
      "default": 18,
      "flags": ["sv", "cheat"],
      "description": "Max step height allowed between adjacent areas."
    },
    {
      "command": "nav_area_walkable_ledge",
      "type": "convar",
      "default": 6,
      "flags": ["sv", "cheat"],
      "description": "Ledge tolerance during area generation/edit."
    },
    {
      "command": "navspace_create_water_smooth_connections",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Create smooth water connections in navspace."
    },
    {
      "command": "navspace_create_water_transition_connections",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Create transition connections between water and non-water navspace."
    },
    {
      "command": "navspace_debug_pathfind",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "cheat"],
      "description": "Enable/level for navspace pathfind debug."
    },
    {
      "command": "navspace_debug_stringpull",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cheat"],
      "description": "Enable string-pull debug for navspace."
    },
    {
      "command": "navspace_debug_trace",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Enable trace debug for navspace."
    },
    {
      "command": "navspace_debug_transition_calc",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Enable transition calculation debug for navspace."
    },
    {
      "command": "navspace_draw_water_changes",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Draw changes in water volumes."
    },
    {
      "command": "navspace_path_use_water_level_locator",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Use water level locator for navspace pathing."
    },
    {
      "command": "net_allow_multicast",
      "type": "convar",
      "default": true,
      "flags": ["a", "release"],
      "description": "Allow multicast networking."
    },
    {
      "command": "net_client_steamdatagram_enable_override",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "release"],
      "description": "0: Use method requested by GC; >0: Always use SDR if possible; <0: Always use direct UDP if possible."
    },
    {
      "command": "net_fakelag",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Shorthand for 'net_option FakePacketLag_Recv'."
    },
    {
      "command": "net_listallmessages",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "List all registered net messages."
    },
    {
      "command": "net_maxroutable",
      "type": "convar",
      "default": 1200,
      "flags": ["a", "user"],
      "description": "Requested max packet size before packets are split."
    },
    {
      "command": "net_messageinfo",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Display info about a net message (by classname or id)."
    },
    {
      "command": "net_option",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Get or set SteamNetworkingSockets options (fake lag/loss, etc.)."
    },
    {
      "command": "net_public_adr",
      "type": "convar",
      "default": 0,
      "flags": ["release"],
      "description": "Public facing IP address string for servers behind NAT/DHCP ('x.x.x.x')."
    },
    {
      "command": "net_showudp",
      "type": "convar",
      "default": false,
      "flags": ["release"],
      "description": "Dump UDP packets summary to console."
    },
    {
      "command": "net_showudp_remoteonly",
      "type": "convar",
      "default": true,
      "flags": ["release"],
      "description": "Dump non-loopback UDP only."
    },
    {
      "command": "net_validatemessages",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Activate/deactivate net message validation."
    },
    {
      "command": "nextdemo",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Play next demo in sequence."
    },
    {
      "command": "nextlevel",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "nf", "release"],
      "description": "If set to a valid map name, will changelevel to that map at round end."
    },
    {
      "command": "nextmap_print_enabled",
      "type": "convar",
      "default": false,
      "flags": ["sv", "release"],
      "description": "When enabled prints next map to clients."
    },
    {
      "command": "nextmode",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "nf", "rep", "release"],
      "description": "Sets the game mode to be played when the next level loads."
    },
    {
      "command": "noclip",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggle. Player becomes non-solid and flies. Optional 0/1 to force."
    },
    {
      "command": "noclip_fixup",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Fix up noclip movement/solid state issues."
    },
    {
      "command": "notarget",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggle. Player becomes hidden to NPCs."
    },

    {
      "command": "option_duck_method",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "user", "per_user"],
      "description": "Input toggle control."
    },
    {
      "command": "option_speed_method",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a", "user", "per_user"],
      "description": "Input toggle control."
    },

    {
      "command": "panorama_debugger_theme",
      "type": "convar",
      "default": "Light",
      "flags": ["cl", "a"],
      "description": "Debugger theme."
    },
    {
      "command": "panorama_focus_world_panels",
      "type": "convar",
      "default": false,
      "flags": ["cl", "a"],
      "description": "Request key focus when a world panel is enabled."
    },
    {
      "command": "particle_test_attach_attachment",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Attachment index for attachment mode."
    },
    {
      "command": "particle_test_attach_mode",
      "type": "convar",
      "default": "follow_attachment",
      "flags": ["sv", "cheat"],
      "description": "Attachment mode: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin'."
    },
    {
      "command": "particle_test_create",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Create named particle system where the player is looking. Args: {entity_name|class_name|entity_index|none}."
    },
    {
      "command": "particle_test_destroy",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Destroy particle systems matching the specified name."
    },
    {
      "command": "particle_test_file",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cheat"],
      "description": "Name of the particle system to dynamically spawn."
    },
    {
      "command": "particle_test_start",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Dispatch test particle using current test convars on looked-at entity."
    },
    {
      "command": "particle_test_stop",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Stop particle systems on selected entities."
    },
    {
      "command": "particles_multiplier",
      "type": "convar",
      "default": 1,
      "flags": ["cheat"],
      "description": "Multiply rendered particle count (perf testing)."
    },
    {
      "command": "password",
      "type": "convar",
      "default": 0,
      "flags": ["a", "norecord", "server_cant_query"],
      "description": "Current server access password."
    },
    {
      "command": "pause",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Toggle the server pause state."
    },
    {
      "command": "phys_debug_showdefaultmaterial",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Highlight surfaces with default material in physics debug."
    },
    {
      "command": "phys_dynamic_scaling",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Enable dynamic scaling for physics."
    },
    {
      "command": "phys_expensive_shape_threshold",
      "type": "convar",
      "default": 6,
      "flags": ["cl", "cheat"],
      "description": "Threshold for expensive physics shapes."
    },
    {
      "command": "phys_highlight_expensive_objects",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Highlight expensive physics objects."
    },
    {
      "command": "phys_highlight_expensive_objects_strength",
      "type": "convar",
      "default": 0.02,
      "flags": ["cheat"],
      "description": "Highlight strength for expensive physics objects."
    },
    {
      "command": "phys_joint_teleport",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Teleport joint anchors if connected to world."
    },
    {
      "command": "phys_length_damping_ratio",
      "type": "convar",
      "default": 2,
      "flags": ["sv", "cheat"],
      "description": "Spring damping ratio for length constraint."
    },
    {
      "command": "phys_length_frequency",
      "type": "convar",
      "default": 5,
      "flags": ["sv", "cheat"],
      "description": "Spring stiffness for length constraint."
    },
    {
      "command": "phys_mark_debug",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Mark object for physics debug."
    },
    {
      "command": "phys_shoot",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Shoot a physics object."
    },
    {
      "command": "phys_use_block_solver",
      "type": "convar",
      "default": true,
      "flags": ["sv", "cheat"],
      "description": "Use block solving for constraint entities."
    },
    {
      "command": "phys_visualize_traces",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Visualize physics traces."
    },
    {
      "command": "pixelvis_debug",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Dump pixel visibility debug info."
    },
    {
      "command": "plant_bomb",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Plant a bomb where the player is looking."
    },
    {
      "command": "play",
      "type": "command",
      "default": "cmd",
      "flags": ["server_can_execute"],
      "description": "Play a sound."
    },
    {
      "command": "playdemo",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Play a recorded demo file (.dem)."
    },
    {
      "command": "player0_using_joystick",
      "type": "convar",
      "default": false,
      "flags": ["a"],
      "description": "Whether player0 is using a joystick."
    },
    {
      "command": "player_botdifflast_s",
      "type": "convar",
      "default": 2,
      "flags": ["cl", "a", "release"],
      "description": "Last selected bot difficulty."
    },
    {
      "command": "player_competitive_maplist_2v2_10_0_C8D88986",
      "type": "convar",
      "default": "mg_de_overpass,mg_de_vertigo,mg_de_inferno,mg_de_nuke",
      "flags": ["cl", "a"],
      "description": "Stored competitive 2v2 map list."
    },
    {
      "command": "player_competitive_maplist_8_10_0_5069769",
      "type": "convar",
      "default": "mg_de_mirage,mg_de_overpass,mg_de_vertigo,mg_de_ancient,mg_de_inferno,mg_de_nuke,mg_de_anubis,mg_de_dust2,mg_cs_office",
      "flags": ["cl", "a"],
      "description": "Stored competitive map list."
    },
    {
      "command": "player_debug_off_nav",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Disable player off-nav debugging."
    },
    {
      "command": "player_debug_print_damage",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Print amount/type of damage received by player to console."
    },
    {
      "command": "player_nevershow_communityservermessage",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "per_user"],
      "description": "Never show community server message."
    },
    {
      "command": "player_ping",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Create a ping notification where the player is looking."
    },
    {
      "command": "player_ping_token_cooldown",
      "type": "convar",
      "default": 20,
      "flags": ["sv", "cheat", "release"],
      "description": "Cooldown seconds to refresh ping token (players get 5 tokens)."
    },
    {
      "command": "player_survival_list_10_0_303",
      "type": "convar",
      "default": "mg_dz_blacksite,mg_dz_sirocco,mg_dz_vineyard,mg_dz_ember",
      "flags": ["cl", "a"],
      "description": "Stored Danger Zone map list."
    },
    {
      "command": "player_teamplayedlast",
      "type": "convar",
      "default": 3,
      "flags": ["cl", "a", "per_user"],
      "description": "Team played last."
    },
    {
      "command": "player_use_radius",
      "type": "convar",
      "default": 80,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Player +use radius."
    },
    {
      "command": "player_wargames_list2_10_0_0",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a"],
      "description": "Stored War Games list."
    },
    {
      "command": "playsoundscape",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Force a soundscape to play."
    },
    {
      "command": "print_mapgroup",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Print current mapgroup and contained maps."
    },
    {
      "command": "print_mapgroup_sv",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "release"],
      "description": "Print current server mapgroup and contained maps."
    },
    {
      "command": "prop_debug",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Toggle prop debug mode with color-coded bounding boxes."
    },
    {
      "command": "prop_debug_collision",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cheat"],
      "description": "Highlight props by collision group."
    },
    {
      "command": "prop_dynamic_create",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Create a dynamic prop (.vmdl) aimed away from look direction. Args: {.vmdl name}."
    },
    {
      "command": "prop_physics_create",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Create a physics prop (.vmdl) aimed away from look direction. Args: {.vmdl name}."
    },
    {
      "command": "pvs_debugentity",
      "type": "convar",
      "default": -1,
      "flags": ["sv", "release"],
      "description": "Verbose spew for this entity when doing IsInPVS."
    },
    {
      "command": "pvs_flowtype",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Flow through spawn groups for vis (0=default, 1=always visible, 2=never visible)."
    },
    {
      "command": "pwatchent",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": "Entity to watch for prediction system changes."
    },
    {
      "command": "pwatchvar",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Entity variable to watch in prediction system for changes."
    },
    {
      "command": "quit",
      "type": "command",
      "default": "cmd",
      "flags": ["release", "vconsole_set_focus"],
      "description": "Quit the game."
    },
    {
      "command": "+quickbuyradial",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Press: open quick-buy radial."
    },
    {
      "command": "-quickbuyradial",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Release: close quick-buy radial."
    },
    {
      "command": "+quickgrenaderadial",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Press: open quick-grenade radial."
    },
    {
      "command": "-quickgrenaderadial",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Release: close quick-grenade radial."
    },
    {
      "command": "+quickinv",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Press: open quick inventory."
    },
    {
      "command": "-quickinv",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Release: close quick inventory."
    },
    {
      "command": "r_AirboatViewDampenDamp",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "nf", "rep", "cheat"],
      "description": "View dampening (damping ratio) while in airboat."
    },
    {
      "command": "r_AirboatViewDampenFreq",
      "type": "convar",
      "default": 7,
      "flags": ["sv", "cl", "nf", "rep", "cheat"],
      "description": "View dampening (frequency) while in airboat."
    },
    {
      "command": "r_AirboatViewZHeight",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "cl", "nf", "rep", "cheat"],
      "description": "View Z height offset while in airboat."
    },
    {
      "command": "r_aoproxy_debug",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Debug ambient occlusion proxy."
    },
    {
      "command": "r_aoproxy_show",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Show ambient occlusion proxy."
    },
    {
      "command": "r_csgo_cubemap_normalization",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable cubemap normalization."
    },
    {
      "command": "r_csgo_debug_reflection_rects",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Debug reflection rectangles."
    },
    {
      "command": "r_csgo_decal_debug",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Debug decal rendering."
    },
    {
      "command": "r_csgo_depth_prepass",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable depth pre-pass."
    },
    {
      "command": "r_csgo_depth_prepass_cull_threshold",
      "type": "convar",
      "default": 60,
      "flags": ["cl", "cheat"],
      "description": "Cull threshold (%) for depth pre-pass."
    },
    {
      "command": "r_csgo_depth_prepass_reflections_large",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Use depth pre-pass for large reflections."
    },
    {
      "command": "r_csgo_depth_prepass_reflections_small",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Use depth pre-pass for small reflections."
    },
    {
      "command": "r_csgo_depth_prepass_skybox_alpha_tested",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Use depth pre-pass for alpha-tested skybox."
    },
    {
      "command": "r_csgo_depth_prepass_small_cull_threshold",
      "type": "convar",
      "default": 10,
      "flags": ["cl", "cheat"],
      "description": "Cull threshold (%) for small objects in pre-pass."
    },
    {
      "command": "r_csgo_depth_prepass_viewmodel",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable depth pre-pass for viewmodels."
    },
    {
      "command": "r_csgo_directional_lightmaps",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable directional lightmaps."
    },
    {
      "command": "r_csgo_effects_bloom",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable bloom effects."
    },
    {
      "command": "r_csgo_effects_bloom_when_smoked",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Enable bloom while inside smoke."
    },
    {
      "command": "r_csgo_enable_glows",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable glow outlines."
    },
    {
      "command": "r_csgo_enable_high_precision_lighting",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Use high precision lighting."
    },
    {
      "command": "r_csgo_enable_tonemapping",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable tone mapping."
    },
    {
      "command": "r_csgo_enable_translucent_screen_space",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable translucent screen-space effects."
    },
    {
      "command": "r_csgo_mboit",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable MBOIT transparency."
    },
    {
      "command": "r_csgo_mboit_bias",
      "type": "convar",
      "default": 0.000005,
      "flags": ["cl", "cheat"],
      "description": "MBOIT bias."
    },
    {
      "command": "r_csgo_mboit_debug",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Debug MBOIT."
    },
    {
      "command": "r_csgo_mboit_overestimation",
      "type": "convar",
      "default": 0.01,
      "flags": ["cl", "cheat"],
      "description": "MBOIT overestimation factor."
    },
    {
      "command": "r_csgo_mboit_use_4_moments",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Use 4 moments for MBOIT."
    },
    {
      "command": "r_csgo_mixed_resolution_color_slices",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Enable mixed-resolution color slices."
    },
    {
      "command": "r_csgo_mixed_resolution_particles_minmax",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Enable mixed-resolution particles (min/max)."
    },
    {
      "command": "r_csgo_mixed_resolution_particles_scale",
      "type": "convar",
      "default": 2,
      "flags": ["cl", "cheat"],
      "description": "Scale for mixed-resolution particles."
    },
    {
      "command": "r_csgo_no_shader_resolve",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Disable shader resolve pass."
    },
    {
      "command": "r_csgo_override_global_time",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Override global time for rendering."
    },
    {
      "command": "r_csgo_postprocess_enable",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable post-processing."
    },
    {
      "command": "r_csgo_readonly_depth_stencil_enable",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable read-only depth-stencil optimization."
    },
    {
      "command": "r_csgo_reconstruct_normals",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Reconstruct normals from depth."
    },
    {
      "command": "r_csgo_reconstruct_normals_method",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Normal reconstruction method."
    },
    {
      "command": "r_csgo_reflection_min_far_plane",
      "type": "convar",
      "default": 5000,
      "flags": ["cl", "cheat"],
      "description": "Minimum far plane for reflections."
    },
    {
      "command": "r_csgo_render_decals",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render decals."
    },
    {
      "command": "r_csgo_render_decals_on_translucent",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render decals on translucent geometry."
    },
    {
      "command": "r_csgo_render_dither_scale",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "cheat"],
      "description": "Dither scale."
    },
    {
      "command": "r_csgo_render_dynamic_objects",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render dynamic objects."
    },
    {
      "command": "r_csgo_render_inferno_decals",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render inferno (fire) decals."
    },
    {
      "command": "r_csgo_render_opaque",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render opaque pass."
    },
    {
      "command": "r_csgo_render_overlays",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render overlays."
    },
    {
      "command": "r_csgo_render_post_bloom",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "cheat"],
      "description": "Render post bloom pass."
    },
    {
      "command": "r_csgo_render_post_bloom_strength",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": "Bloom strength override (-1 = default)."
    },
    {
      "command": "r_csgo_render_post_colorcorrection",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Render post color correction pass."
    },
    {
      "command": "r_csgo_render_post_film_grain",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Render post film grain pass."
    },
    {
      "command": "r_csgo_render_post_local_contrast",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render post local contrast enhancement."
    },
    {
      "command": "r_csgo_render_post_mirror_horizontal",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Mirror screen horizontally."
    },
    {
      "command": "r_csgo_render_post_mirror_vertical",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Mirror screen vertically."
    },
    {
      "command": "r_csgo_render_translucent",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render translucent pass."
    },
    {
      "command": "r_csgo_shadows_debug",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Debug shadow rendering."
    },
    {
      "command": "r_csgo_volume_mboit_optimization",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Optimize volumetric MBOIT."
    },
    {
      "command": "r_csgo_water_effects",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable water effects."
    },
    {
      "command": "r_csgo_water_refraction",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Enable water refraction."
    },
    {
      "command": "r_cubemap_debug_colors",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": "Debug cubemap colors."
    },
    {
      "command": "r_debug_particle_shadows",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Debug particle shadows."
    },
    {
      "command": "r_debug_precipitation",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Show precipitation volumes."
    },
    {
      "command": "r_directlighting",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Use direct lighting."
    },
    {
      "command": "r_dof_override",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Override DOF parameters."
    },
    {
      "command": "r_dof_override_far_blurry",
      "type": "convar",
      "default": 2000,
      "flags": ["cheat"],
      "description": "DOF far blurry distance."
    },
    {
      "command": "r_dof_override_far_crisp",
      "type": "convar",
      "default": 180,
      "flags": ["cheat"],
      "description": "DOF far crisp distance."
    },
    {
      "command": "r_dof_override_near_blurry",
      "type": "convar",
      "default": -100,
      "flags": ["cheat"],
      "description": "DOF near blurry distance."
    },
    {
      "command": "r_dof_override_near_crisp",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": "DOF near crisp distance."
    },
    {
      "command": "r_dof_override_tilt_to_ground",
      "type": "convar",
      "default": 0.5,
      "flags": ["cheat"],
      "description": "DOF tilt toward ground factor."
    },
    {
      "command": "r_dopixelvisibility",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable pixel visibility queries."
    },
    {
      "command": "r_draw_first_tri_only",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Render only the first triangle of each draw call."
    },
    {
      "command": "r_draw_instances",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable rendering of instanced geometry."
    },
    {
      "command": "r_draw_particle_children_with_parents",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": "Draw particle children with parents (-1=gameinfo, 0=no, 1=yes)."
    },
    {
      "command": "r_drawblankworld",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Render blank background instead of the world."
    },
    {
      "command": "r_drawchickens",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render chickens."
    },
    {
      "command": "r_drawcsplayers",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render CS player models."
    },
    {
      "command": "r_drawdecals",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Render decals."
    },
    {
      "command": "r_drawdevvisualizers",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Render developer visualizers."
    },
    {
      "command": "r_drawpanorama",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable rendering of Panorama UI."
    },
    {
      "command": "r_drawparticles",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable particle rendering."
    },
    {
      "command": "r_drawropes",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render ropes."
    },
    {
      "command": "r_drawskybox",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Render the 2D skybox."
    },
    {
      "command": "r_drawsprites",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render sprites."
    },
    {
      "command": "r_drawtracers",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render bullet tracers."
    },
    {
      "command": "r_drawviewmodel",
      "type": "convar",
      "default": true,
      "flags": ["cl", "cheat"],
      "description": "Render the first-person view model."
    },
    {
      "command": "r_drawworld",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Render the world geometry."
    },
    {
      "command": "r_extra_render_frames",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": "Add extra render frames (debug)."
    },
    {
      "command": "r_fallback_texture_lod_scale",
      "type": "convar",
      "default": 2,
      "flags": ["cheat"],
      "description": "Scale for requested texture size (streaming) for geo without UV density."
    },
    {
      "command": "r_farz",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": "Override far clipping plane (-1 = use env_fog_controller)."
    },
    {
      "command": "r_flashlightambient",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "cheat"],
      "description": "Flashlight ambient term."
    },
    {
      "command": "r_flashlightbacktraceoffset",
      "type": "convar",
      "default": 0.4,
      "flags": ["cl", "cheat"],
      "description": "Flashlight backtrace offset."
    },
    {
      "command": "r_flashlightbrightness",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "rep", "cheat"],
      "description": "Flashlight brightness."
    },
    {
      "command": "r_flashlightconstant",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "rep", "cheat"],
      "description": "Flashlight constant attenuation."
    },
    {
      "command": "r_flashlightfar",
      "type": "convar",
      "default": 1500,
      "flags": ["cl", "rep", "cheat"],
      "description": "Flashlight far Z."
    },
    {
      "command": "r_flashlightfov",
      "type": "convar",
      "default": 53,
      "flags": ["cl", "rep", "cheat"],
      "description": "Flashlight FOV."
    },
    {
      "command": "r_flashlightladderdist",
      "type": "convar",
      "default": 40,
      "flags": ["cl", "cheat"],
      "description": "Distance to ladder for flashlight behavior."
    },
    {
      "command": "r_flashlightlinear",
      "type": "convar",
      "default": 100,
      "flags": ["cl", "rep", "cheat"],
      "description": "Flashlight linear attenuation."
    },
    {
      "command": "r_flashlightlockposition",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Lock flashlight position."
    },
    {
      "command": "r_flashlightmuzzleflashfov",
      "type": "convar",
      "default": 120,
      "flags": ["cl", "cheat"],
      "description": "FOV for muzzle-flash flashlight."
    },
    {
      "command": "r_flashlightnear",
      "type": "convar",
      "default": 4,
      "flags": ["cl", "rep", "cheat"],
      "description": "Flashlight near Z."
    },
    {
      "command": "r_flashlightnearoffsetscale",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "cheat"],
      "description": "Near offset scale for flashlight."
    },
    {
      "command": "r_flashlightoffsetforward",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "rep", "cheat"],
      "description": "Flashlight forward offset."
    },
    {
      "command": "r_flashlightoffsetright",
      "type": "convar",
      "default": 5,
      "flags": ["cl", "rep", "cheat"],
      "description": "Flashlight right offset."
    },
    {
      "command": "r_flashlightoffsetup",
      "type": "convar",
      "default": -5,
      "flags": ["cl", "rep", "cheat"],
      "description": "Flashlight up offset."
    },
    {
      "command": "r_flashlightquadratic",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "rep", "cheat"],
      "description": "Flashlight quadratic attenuation."
    },
    {
      "command": "r_flashlightshadowatten",
      "type": "convar",
      "default": 0.35,
      "flags": ["cl", "cheat"],
      "description": "Flashlight shadow attenuation."
    },
    {
      "command": "r_flashlighttracedistcutoff",
      "type": "convar",
      "default": 128,
      "flags": ["cl", "cheat"],
      "description": "Trace distance cutoff for flashlight."
    },
    {
      "command": "r_flashlighttracedistwatercutoff",
      "type": "convar",
      "default": 80,
      "flags": ["cl", "cheat"],
      "description": "Trace distance cutoff in water for flashlight."
    },
    {
      "command": "r_flashlightvisualizetrace",
      "type": "convar",
      "default": false,
      "flags": ["cl", "cheat"],
      "description": "Visualize flashlight trace."
    },
    {
      "command": "r_force_no_present",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Force the render device to not present frames."
    },
    {
      "command": "r_force_zprepass",
      "type": "convar",
      "default": -1,
      "flags": ["cheat"],
      "description": "Force Z pre-pass (0=off, 1=on, -1=auto)."
    },
    {
      "command": "r_freezeparticles",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Pause particle simulation."
    },
    {
      "command": "r_fullscreen_gamma",
      "type": "convar",
      "default": 2.2,
      "flags": ["a"],
      "description": "Screen gamma (fullscreen modes only)."
    },
    {
      "command": "r_indirectlighting",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Use indirect lighting."
    },
    {
      "command": "r_JeepViewDampenDamp",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "nf", "rep", "cheat"],
      "description": "View dampening (damping ratio) while in jeep."
    },
    {
      "command": "r_JeepViewDampenFreq",
      "type": "convar",
      "default": 7,
      "flags": ["sv", "cl", "nf", "rep", "cheat"],
      "description": "View dampening (frequency) while in jeep."
    },
    {
      "command": "r_JeepViewZHeight",
      "type": "convar",
      "default": 10,
      "flags": ["sv", "cl", "nf", "rep", "cheat"],
      "description": "View Z height offset while in jeep."
    },
    {
      "command": "r_light_probe_volume_debug_colors",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": "Debug color index for LPV."
    },
    {
      "command": "r_light_probe_volume_debug_grid",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Show LPV debug grid (0: off, 1: closest only, 2: closest+keep, 3: all)."
    },
    {
      "command": "r_light_probe_volume_debug_grid_albedo",
      "type": "convar",
      "default": "128 128 128",
      "flags": ["cheat"],
      "description": "Albedo for LPV debug grid."
    },
    {
      "command": "r_light_probe_volume_debug_grid_bbox",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Show LPV bounding box when debug grid is on."
    },
    {
      "command": "r_light_probe_volume_debug_grid_metalness",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": "Metalness for LPV debug grid."
    },
    {
      "command": "r_light_probe_volume_debug_grid_prim",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": "Primitive type for LPV debug grid (0=spheres, 1=cubes)."
    },
    {
      "command": "r_light_probe_volume_debug_grid_roughness",
      "type": "convar",
      "default": 0.5,
      "flags": ["cheat"],
      "description": "Roughness for LPV debug grid."
    },
    {
      "command": "r_light_probe_volume_debug_grid_samplesize",
      "type": "convar",
      "default": 4,
      "flags": ["cheat"],
      "description": "Sample size / sphere radius (world units) for LPV debug grid."
    },
    {
      "command": "r_lightBinnerFarPlane",
      "type": "convar",
      "default": 4096,
      "flags": ["cheat"],
      "description": "Far plane for light binning."
    },
    {
      "command": "r_lightmap_set",
      "type": "convar",
      "default": "lightmaps",
      "flags": ["cheat"],
      "description": "Lightmap set to use (map load only)."
    },
    {
      "command": "r_mapextents",
      "type": "convar",
      "default": 16384,
      "flags": ["cl", "cheat"],
      "description": "Max map dimension (also drives far clip)."
    },
    {
      "command": "r_morphing_enabled",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable vertex morphing."
    },
    {
      "command": "r_muzzleflashbrightness",
      "type": "convar",
      "default": 0.4,
      "flags": ["cl", "rep", "cheat"],
      "description": "Muzzle flash brightness."
    },
    {
      "command": "r_muzzleflashlinear",
      "type": "convar",
      "default": 0.05,
      "flags": ["cl", "rep", "cheat"],
      "description": "Muzzle flash linear term."
    },
    {
      "command": "r_nearz",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": "Override near clipping plane (-1 = default)."
    },
    {
      "command": "r_particle_max_draw_distance",
      "type": "convar",
      "default": 1000000.0,
      "flags": ["cheat"],
      "description": "Maximum distance that particles will render."
    },
    {
      "command": "r_pixelvisibility_partial",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable partial pixel visibility."
    },
    {
      "command": "r_pixelvisibility_spew",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Spew pixel visibility debug to console."
    },
    {
      "command": "r_player_visibility_mode",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "release"],
      "description": "Player visibility rendering mode."
    },
    {
      "command": "r_refraction_clip_plane_adjust",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": "Adjust refraction clip plane."
    },
    {
      "command": "r_render_world_node_bounds",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Render world node bounds."
    },
    {
      "command": "r_rendersun",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Render sun lighting."
    },
    {
      "command": "r_replay_post_effect",
      "type": "convar",
      "default": -1,
      "flags": ["cl", "cheat"],
      "description": "Replay post effect (-1 = disabled)."
    },
    {
      "command": "r_shadows",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable shadow rendering."
    },
    {
      "command": "r_show_build_info",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "release"],
      "description": "Show build information overlay."
    },
    {
      "command": "r_show_hipoly_draw_calls",
      "type": "convar",
      "default": 0,
      "flags": ["cheat"],
      "description": "Wireframe overlay for draw calls above triangle count threshold."
    },
    {
      "command": "r_showdebugoverlays",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Render debug overlays."
    },
    {
      "command": "r_showdebugrendertarget",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Show a debug render target (0 = disable)."
    },
    {
      "command": "r_showsceneobjectbounds",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Show scene system object bounding boxes."
    },
    {
      "command": "r_showsunshadowdebugrendertargets",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Render sun shadow debug render targets."
    },
    {
      "command": "r_showsunshadowdebugsplitvis",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Render sun shadow split visibility debugger."
    },
    {
      "command": "r_size_cull_threshold_shadow",
      "type": "convar",
      "default": 0.2,
      "flags": ["cheat"],
      "description": "Sun shadow map size percentage threshold for culling."
    },
    {
      "command": "r_skinning_enabled",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable model skinning."
    },
    {
      "command": "r_stereo_multiview_instancing",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Use multiview instancing for stereo rendering."
    },
    {
      "command": "r_texture_lod_scale",
      "type": "convar",
      "default": 1,
      "flags": ["cheat"],
      "description": "Scale factor for requested texture size (streaming)."
    },
    {
      "command": "r_translucent",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable rendering of translucent geometry."
    },
    {
      "command": "r_worldlod",
      "type": "convar",
      "default": true,
      "flags": ["cheat"],
      "description": "Enable world LOD."
    },
    {
      "command": "r_zprepass_normals",
      "type": "convar",
      "default": false,
      "flags": ["cheat"],
      "description": "Normals in Z pre-pass (0=reconstruct from depth, 1=output correct normals)."
    },
    {
      "command": "radarvisdistance",
      "type": "convar",
      "default": 1000,
      "flags": ["sv", "cheat"],
      "description": "Beyond this distance you must point directly at someone to see them on radar."
    },
    {
      "command": "radarvismaxdot",
      "type": "convar",
      "default": 0.996,
      "flags": ["sv", "cheat"],
      "description": "How closely you must point at someone to see them beyond max distance."
    },
    {
      "command": "radarvismethod",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cheat"],
      "description": "0 = traditional method, 1 = more realistic method."
    },
    {
      "command": "radarvispow",
      "type": "convar",
      "default": 0.4,
      "flags": ["sv", "cheat"],
      "description": "How far you can point away and still see target on radar."
    },
    {
      "command": "+radialradio",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Press: open radial radio menu."
    },
    {
      "command": "-radialradio",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Release: close radial radio menu."
    },
    {
      "command": "+radialradio2",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Press: open second radial radio menu."
    },
    {
      "command": "-radialradio2",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Release: close second radial radio menu."
    },
    {
      "command": "+radialradio3",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Press: open third radial radio menu."
    },
    {
      "command": "-radialradio3",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Release: close third radial radio menu."
    },
    {
      "command": "radio",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Opens a radio menu."
    },
    {
      "command": "radio1",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Opens a radio menu."
    },
    {
      "command": "radio2",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Opens a radio menu."
    },
    {
      "command": "radio3",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release"],
      "description": "Opens a radio menu."
    },
    {
      "command": "ragdoll_friction_scale",
      "type": "convar",
      "default": 0.6,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Scale for ragdoll friction."
    },
    {
      "command": "ragdoll_gravity_scale",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Scale for ragdoll gravity."
    },
    {
      "command": "ragdoll_lru_debug_removal",
      "type": "convar",
      "default": false,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Debug ragdoll LRU removal."
    },
    {
      "command": "ragdoll_lru_min_age",
      "type": "convar",
      "default": 10,
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Minimum age (seconds) before ragdoll is eligible for LRU removal."
    },
    {
      "command": "rangefinder",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Measure distance along a ray."
    },
    {
      "command": "rate",
      "type": "convar",
      "default": 786432,
      "flags": ["a", "user"],
      "description": "Min bytes/sec the host can receive data."
    },
    {
      "command": "rcon",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Issue a remote console command."
    },
    {
      "command": "rcon_address",
      "type": "convar",
      "default": 0,
      "flags": ["norecord", "release", "server_cant_query"],
      "description": "Address of remote server for unconnected rcon (x.x.x.x:p)."
    },
    {
      "command": "rcon_connected_clients_allow",
      "type": "convar",
      "default": true,
      "flags": ["rep", "release"],
      "description": "Allow clients to use rcon commands on server."
    },
    {
      "command": "rcon_password",
      "type": "convar",
      "default": 0,
      "flags": ["norecord", "release", "server_cant_query"],
      "description": "Remote console password."
    },
    {
      "command": "rebuy",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "clientcmd_can_execute"],
      "description": "Attempt to repurchase items using cl_rebuy order."
    },
    {
      "command": "recast_mark_overhang",
      "type": "convar",
      "default": true,
      "flags": ["rep", "cheat"],
      "description": "Enable/disable overhang detection (Recast)."
    },
    {
      "command": "recast_partitioning",
      "type": "convar",
      "default": 0,
      "flags": ["rep", "cheat"],
      "description": "Partitioning method: 0=watershed, 1=monotone, 2=layers."
    },
    {
      "command": "record",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Record a demo."
    },
    {
      "command": "refresh_ui_audio_state",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Restore audio DSP state for UI."
    },
    {
      "command": "regenerate_weapon_skins",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Regenerate weapon skin data."
    },
    {
      "command": "reloadgame",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat", "vconsole_set_focus"],
      "description": "Reload the most recent saved game."
    },
    {
      "command": "remove_weapon",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Remove a weapon from the player. Args: <weapon subclass name>."
    },
    {
      "command": "repeat_last_console_command",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Repeat last console command."
    },
    {
      "command": "replay_death",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Start HLTV replay of last death."
    },
    {
      "command": "replay_debug",
      "type": "convar",
      "default": 0,
      "flags": ["rep", "release"],
      "description": "Replay system debug level."
    },
    {
      "command": "replay_start",
      "type": "command",
      "default": "cmd",
      "flags": ["sv", "cheat"],
      "description": "Start GOTV replay: replay_start <delay> [<player name or index>]."
    },
    {
      "command": "replay_stop",
      "type": "command",
      "default": "cmd",
      "flags": ["sv"],
      "description": "Stop HLTV replay."
    },
    {
      "command": "say",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release", "clientcmd_can_execute"],
      "description": "Send a chat message to all players."
    },
    {
      "command": "say_team",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "release", "clientcmd_can_execute"],
      "description": "Send a chat message to your team."
    },
    {
      "command": "screenshot",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Save a screenshot to disk."
    },
    {
      "command": "scene_flush",
      "type": "command",
      "default": "cmd",
      "flags": ["cheat"],
      "description": "Flush scene system caches."
    },
    {
      "command": "sensitivity",
      "type": "convar",
      "default": 2.5,
      "flags": ["cl", "a", "user", "per_user"],
      "description": "Mouse sensitivity."
    },
    {
      "command": "servercfgfile",
      "type": "convar",
      "default": "server.cfg",
      "flags": ["sv", "release"],
      "description": "Configuration file executed on server start."
    },
    {
      "command": "showconsole",
      "type": "command",
      "default": "cmd",
      "flags": ["norecord", "release"],
      "description": "Show the developer console."
    },
    {
      "command": "showinfo",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Print player and server info."
    },
    {
      "command": "showloadout",
      "type": "convar",
      "default": true,
      "flags": ["cl", "a", "per_user"],
      "description": "Toggle display of current loadout."
    },
    {
      "command": "snd_deathcamera_volume",
      "type": "convar",
      "default": 1.0,
      "flags": ["cl", "a", "release"],
      "description": "Death camera music volume."
    },
    {
      "command": "snd_dzmusic_volume",
      "type": "convar",
      "default": 1.0,
      "flags": ["cl", "a", "release"],
      "description": "Danger Zone music volume."
    },
    {
      "command": "snd_headphone_eq",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "release"],
      "description": "Enable headphone EQ."
    },
    {
      "command": "snd_menumusic_volume",
      "type": "convar",
      "default": 0.6,
      "flags": ["cl", "a", "release"],
      "description": "Main menu music volume."
    },
    {
      "command": "snd_mixahead",
      "type": "convar",
      "default": 0.025,
      "flags": ["a", "release"],
      "description": "Amount of audio buffered ahead in seconds."
    },
    {
      "command": "snd_mix_async",
      "type": "convar",
      "default": 1,
      "flags": ["release"],
      "description": "Enable async audio mixing when possible."
    },
    {
      "command": "snd_mute_losefocus",
      "type": "convar",
      "default": 0,
      "flags": ["cl", "a", "release"],
      "description": "Mute game audio when window loses focus."
    },
    {
      "command": "snd_musicvolume",
      "type": "convar",
      "default": 1.0,
      "flags": ["cl", "a", "release"],
      "description": "Global music volume."
    },
    {
      "command": "snd_mvp_volume",
      "type": "convar",
      "default": 1.0,
      "flags": ["cl", "a", "release"],
      "description": "MVP anthem volume."
    },
    {
      "command": "snd_roundend_volume",
      "type": "convar",
      "default": 1.0,
      "flags": ["cl", "a", "release"],
      "description": "Round end music volume."
    },
    {
      "command": "snd_roundstart_volume",
      "type": "convar",
      "default": 1.0,
      "flags": ["cl", "a", "release"],
      "description": "Round start music volume."
    },
    {
      "command": "snd_mapobjective_volume",
      "type": "convar",
      "default": 1.0,
      "flags": ["cl", "a", "release"],
      "description": "Map objective music volume."
    },
    {
      "command": "snd_tensecondwarning_volume",
      "type": "convar",
      "default": 1.0,
      "flags": ["cl", "a", "release"],
      "description": "10-second bomb warning music volume."
    },
    {
      "command": "snd_mvp_audio_delay",
      "type": "convar",
      "default": 0.0,
      "flags": ["cl", "release"],
      "description": "Delay before playing MVP music (seconds)."
    },
    {
      "command": "snd_rebuildaudiocache",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Rebuild the audio cache."
    },
    {
      "command": "snd_restart",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Restart the sound system."
    },
    {
      "command": "snd_surround_speakers",
      "type": "convar",
      "default": 0,
      "flags": ["a", "release"],
      "description": "Number of surround speakers (0=auto)."
    },
    {
      "command": "snd_voipvolume",
      "type": "convar",
      "default": 1.0,
      "flags": ["cl", "a", "user"],
      "description": "Voice chat playback volume."
    },
    {
      "command": "snd_steamaudio_enable",
      "type": "convar",
      "default": 1,
      "flags": ["a", "release"],
      "description": "Enable Steam Audio spatialization."
    },
    {
      "command": "snd_steamaudio_reverb",
      "type": "convar",
      "default": 1,
      "flags": ["a", "release"],
      "description": "Enable Steam Audio reverb."
    },
    {
      "command": "snd_steamaudio_occlusion",
      "type": "convar",
      "default": 1,
      "flags": ["a", "release"],
      "description": "Enable Steam Audio occlusion."
    },
    {
      "command": "spec_freeze_deathanim_time",
      "type": "convar",
      "default": 0.5,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Delay between death and freezecam start."
    },
    {
      "command": "spec_freeze_time",
      "type": "convar",
      "default": 3.0,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Freezecam hold duration."
    },
    {
      "command": "spec_replay_rate",
      "type": "convar",
      "default": 0.65,
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Spectator replay playback speed."
    },
    {
      "command": "spec_show_bindings",
      "type": "convar",
      "default": true,
      "flags": ["cl", "release", "clientcmd_can_execute"],
      "description": "Toggle visibility of spectator bindings UI."
    },
    {
      "command": "spec_usenumberkeys_nobinds",
      "type": "convar",
      "default": 1,
      "flags": ["cl", "a", "release"],
      "description": "Use number keys for spectator target switching."
    },
    {
      "command": "status",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Print server and client status."
    },
    {
      "command": "stop",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Stop recording/playback of a demo."
    },
    {
      "command": "stopdemo",
      "type": "command",
      "default": "cmd",
      "flags": ["release"],
      "description": "Stop playing the current demo."
    },
    {
      "command": "stopsound",
      "type": "command",
      "default": "cmd",
      "flags": ["cl", "cheat"],
      "description": "Stop all currently playing sounds."
    },
    {
      "command": "sv_cheats",
      "type": "convar",
      "default": false,
      "flags": ["sv", "rep", "release", "cheat"],
      "description": "Allow cheat commands on the server."
    },
    {
      "command": "sv_lan",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Server is LAN-only if set to 1."
    },
    {
      "command": "sv_pausable",
      "type": "convar",
      "default": 0,
      "flags": ["sv", "release"],
      "description": "Allow players to pause the server."
    },
    {
      "command": "sv_voiceenable",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "release"],
      "description": "Allow voice communications."
    },
    {
      "command": "sv_hibernate_when_empty",
      "type": "convar",
      "default": 1,
      "flags": ["sv", "release"],
      "description": "Hibernate server when no players are connected."
    },
    {
      "command": "sv_maxrate",
      "type": "convar",
      "default": 786432,
      "flags": ["sv", "release"],
      "description": "Maximum bandwidth rate allowed (bytes/sec)."
    },
    {
      "command": "sv_minrate",
      "type": "convar",
      "default": 32000,
      "flags": ["sv", "release"],
      "description": "Minimum bandwidth rate allowed (bytes/sec)."
    },
    {
      "command": "sv_maxupdaterate",
      "type": "convar",
      "default": 128,
      "flags": ["sv", "release"],
      "description": "Maximum updates per second that the server will allow."
    },
    {
      "command": "sv_minupdaterate",
      "type": "convar",
      "default": 64,
      "flags": ["sv", "release"],
      "description": "Minimum updates per second that the server will allow."
    },
    {
      "command": "sv_maxcmdrate",
      "type": "convar",
      "default": 128,
      "flags": ["sv", "release"],
      "description": "Maximum client command rate."
    },
    {
      "command": "sv_mincmdrate",
      "type": "convar",
      "default": 64,
      "flags": ["sv", "release"],
      "description": "Minimum client command rate."
    },
    {
      "command": "r_force_no_present",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Force the render device to not present frames."
    },
    {
      "command": "r_force_zprepass",
      "type": "convar",
      "default": "-1",
      "flags": ["cheat"],
      "description": "0: Force z prepass off. 1: Force on. -1: Don't force."
    },
    {
      "command": "r_freezeparticles",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Pause particle simulation."
    },
    {
      "command": "r_fullscreen_gamma",
      "type": "convar",
      "default": "2.2",
      "flags": ["a"],
      "description": "Screen Gamma (only in fullscreen modes)."
    },
    {
      "command": "r_indirectlighting",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": "Set to use indirect lighting."
    },
    {
      "command": "r_JeepViewDampenDamp",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "nf", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "r_JeepViewDampenFreq",
      "type": "convar",
      "default": "7",
      "flags": ["sv", "cl", "nf", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "r_JeepViewZHeight",
      "type": "convar",
      "default": "10",
      "flags": ["sv", "cl", "nf", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "r_light_probe_volume_debug_colors",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "r_light_probe_volume_debug_grid",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Show LPV debug grid, 0: off, 1: closest only 2: closest and keep 3: all."
    },
    {
      "command": "r_light_probe_volume_debug_grid_albedo",
      "type": "convar",
      "default": "128 128 128",
      "flags": ["cheat"],
      "description": "Albedo for LPV debug grid."
    },
    {
      "command": "r_light_probe_volume_debug_grid_bbox",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": "Show LPV bounding box when debug grid is on, 0: off, 1: on."
    },
    {
      "command": "r_light_probe_volume_debug_grid_metalness",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": "Metalness for LPV debug grid."
    },
    {
      "command": "r_light_probe_volume_debug_grid_prim",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": "0: spheres, 1: cubes."
    },
    {
      "command": "r_light_probe_volume_debug_grid_roughness",
      "type": "convar",
      "default": "0.5",
      "flags": ["cheat"],
      "description": "Roughness for LPV debug grid."
    },
    {
      "command": "r_light_probe_volume_debug_grid_samplesize",
      "type": "convar",
      "default": "4",
      "flags": ["cheat"],
      "description": "Sphere radius (world) for LPV debug grid."
    },
    {
      "command": "r_lightBinnerFarPlane",
      "type": "convar",
      "default": "4096",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "r_lightmap_set",
      "type": "convar",
      "default": "lightmaps",
      "flags": ["cheat"],
      "description": "Lightmap set to use, only works on map load."
    },
    {
      "command": "r_mapextents",
      "type": "convar",
      "default": "16384",
      "flags": ["cl", "cheat"],
      "description": "Set the max dimension for the map. Determines the far clipping plane."
    },
    {
      "command": "r_morphing_enabled",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "r_muzzleflashbrightness",
      "type": "convar",
      "default": "0.4",
      "flags": ["cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "r_muzzleflashlinear",
      "type": "convar",
      "default": "0.05",
      "flags": ["cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "r_nearz",
      "type": "convar",
      "default": "-1",
      "flags": ["cl", "cheat"],
      "description": "Override the near clipping plane. -1 uses default."
    },
    {
      "command": "r_particle_max_draw_distance",
      "type": "convar",
      "default": "1000000.000000",
      "flags": ["cheat"],
      "description": "The maximum distance that particles will render."
    },
    {
      "command": "r_pixelvisibility_partial",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "r_pixelvisibility_spew",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "r_player_visibility_mode",
      "type": "convar",
      "default": "1",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "r_refraction_clip_plane_adjust",
      "type": "convar",
      "default": "-1",
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "r_render_world_node_bounds",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Render world node bounds."
    },
    {
      "command": "r_rendersun",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": "Render sun lighting."
    },
    {
      "command": "r_replay_post_effect",
      "type": "convar",
      "default": "-1",
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "r_shadows",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "r_show_build_info",
      "type": "convar",
      "default": "true",
      "flags": ["cl", "a", "release"],
      "description": "Build information; leave enabled for bug screenshots/videos."
    },
    {
      "command": "r_show_hipoly_draw_calls",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": "Transparent wireframe overlay for draw calls above triangle threshold."
    },
    {
      "command": "r_showdebugoverlays",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Set to render debug overlays."
    },
    {
      "command": "r_showdebugrendertarget",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Set the debug render target to show, 0 == disable."
    },
    {
      "command": "r_showsceneobjectbounds",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Show scenesystem object bounding boxes."
    },
    {
      "command": "r_showsunshadowdebugrendertargets",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Render sun shadow render targets."
    },
    {
      "command": "r_showsunshadowdebugsplitvis",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Render sun shadow split visibility debugger."
    },
    {
      "command": "r_size_cull_threshold_shadow",
      "type": "convar",
      "default": "0.2",
      "flags": ["cheat"],
      "description": "Threshold of sun shadow map size percentage below which objects get culled."
    },
    {
      "command": "r_skinning_enabled",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "r_stereo_multiview_instancing",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Use multiview instancing for stereo rendering."
    },
    {
      "command": "r_texture_lod_scale",
      "type": "convar",
      "default": "1",
      "flags": ["cheat"],
      "description": "Scale factor for requested texture size (texture streaming)."
    },
    {
      "command": "r_translucent",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": "Enable rendering of translucent geometry."
    },
    {
      "command": "r_worldlod",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": "Set to enable world LOD."
    },
    {
      "command": "r_zprepass_normals",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "0: Use normals reconstructed from depth. 1: Output correct normals in z prepass."
    },
    {
      "command": "radarvisdistance",
      "type": "convar",
      "default": "1000",
      "flags": ["sv", "cheat"],
      "description": "Beyond this distance you must point right at someone to see them."
    },
    {
      "command": "radarvismaxdot",
      "type": "convar",
      "default": "0.996",
      "flags": ["sv", "cheat"],
      "description": "How closely you have to point at someone to see them beyond max distance."
    },
    {
      "command": "radarvismethod",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cheat"],
      "description": "0 for traditional method, 1 for more realistic method."
    },
    {
      "command": "radarvispow",
      "type": "convar",
      "default": "0.4",
      "flags": ["sv", "cheat"],
      "description": "How far you can point away and still see targets on radar."
    },
    {
      "command": "+radialradio",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "-radialradio",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "+radialradio2",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "-radialradio2",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "+radialradio3",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "-radialradio3",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "radio",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": "Opens a radio menu."
    },
    {
      "command": "radio1",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": "Opens a radio menu."
    },
    {
      "command": "radio2",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": "Opens a radio menu."
    },
    {
      "command": "radio3",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": "Opens a radio menu."
    },
    {
      "command": "ragdoll_friction_scale",
      "type": "convar",
      "default": "0.6",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "ragdoll_gravity_scale",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "ragdoll_lru_debug_removal",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "ragdoll_lru_min_age",
      "type": "convar",
      "default": "10",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "rangefinder",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Measures distance along a ray."
    },
    {
      "command": "rate",
      "type": "convar",
      "default": "786432",
      "flags": ["a", "user"],
      "description": "Min bytes/sec the host can receive data."
    },
    {
      "command": "rcon",
      "type": "command",
      "default": "",
      "flags": ["norecord", "release"],
      "description": "Issue an rcon command."
    },
    {
      "command": "rcon_address",
      "type": "convar",
      "default": "0",
      "flags": ["norecord", "release", "server_cant_query"],
      "description": "Address of remote server for unconnected rcon (x.x.x.x:p)."
    },
    {
      "command": "rcon_connected_clients_allow",
      "type": "convar",
      "default": "true",
      "flags": ["rep", "release"],
      "description": "Allow clients to use rcon commands on server."
    },
    {
      "command": "rcon_password",
      "type": "convar",
      "default": "0",
      "flags": ["norecord", "release", "server_cant_query"],
      "description": "Remote console password."
    },
    {
      "command": "rebuy",
      "type": "command",
      "default": "",
      "flags": ["cl", "clientcmd_can_execute"],
      "description": "Attempt to repurchase items with the order listed in cl_rebuy."
    },
    {
      "command": "recast_mark_overhang",
      "type": "convar",
      "default": "true",
      "flags": ["rep", "cheat"],
      "description": "Enable/disable overhang detection."
    },
    {
      "command": "recast_partitioning",
      "type": "convar",
      "default": "0",
      "flags": ["rep", "cheat"],
      "description": "0=watershed, 1=monotone, 2=layers."
    },
    {
      "command": "record",
      "type": "command",
      "default": "",
      "flags": ["norecord", "release"],
      "description": "Record a demo."
    },
    {
      "command": "refresh_ui_audio_state",
      "type": "command",
      "default": "",
      "flags": ["cl", "cheat"],
      "description": "Restores audio DSP state for the UI."
    },
    {
      "command": "regenerate_weapon_skins",
      "type": "command",
      "default": "",
      "flags": ["cl", "cheat"],
      "description": ""
    },
    {
      "command": "reloadgame",
      "type": "command",
      "default": "",
      "flags": ["cheat", "vconsole_set_focus"],
      "description": "Reload the most recent saved game."
    },
    {
      "command": "remove_weapon",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Remove a weapon held by the player. Args: <weapon subclass name>."
    },
    {
      "command": "repeat_last_console_command",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Repeat last console command."
    },
    {
      "command": "replay_death",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Start HLTV replay of last death."
    },
    {
      "command": "replay_debug",
      "type": "convar",
      "default": "0",
      "flags": ["rep", "release"],
      "description": ""
    },
    {
      "command": "replay_start",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Start GOTV replay: replay_start <delay> [<player name or index>]."
    },
    {
      "command": "replay_stop",
      "type": "command",
      "default": "",
      "flags": ["sv"],
      "description": "Stop HLTV replay."
    },
    {
      "command": "report_cliententitysim",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "cheat"],
      "description": "List clientside simulations and time; turns itself off."
    },
    {
      "command": "report_clientthinklist",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "cheat"],
      "description": "List clientside entities thinking and time; turns itself off."
    },
    {
      "command": "reset_gameconvars",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Reset game convars to default values."
    },
    {
      "command": "respawn_player",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Respawns the player from death!"
    },
    {
      "command": "restart",
      "type": "command",
      "default": "",
      "flags": ["cheat", "vconsole_set_focus"],
      "description": "Reload the current map from disk."
    },
    {
      "command": "rr_followup_maxdist",
      "type": "convar",
      "default": "1800",
      "flags": ["sv", "cheat"],
      "description": "'then ANY' or 'then ALL' response followups only within this distance."
    },
    {
      "command": "rr_forceconcept",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Fire a response concept at a character. Usage: rr_forceconcept <target> <concept> 'criteria1:value1,...'."
    },
    {
      "command": "rr_reloadresponsesystems",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Reload all response system scripts."
    },
    {
      "command": "rr_thenany_score_slop",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "a", "cheat"],
      "description": "Score slop when computing respondents for a 'THEN ANY' rule."
    },
    {
      "command": "run_perftest",
      "type": "command",
      "default": "",
      "flags": ["cheat", "norecord"],
      "description": "Execute perftest.cfg."
    },

    {
      "command": "safezonex",
      "type": "convar",
      "default": "1",
      "flags": ["cl", "a"],
      "description": "Percentage of screen width considered safe from overscan."
    },
    {
      "command": "safezoney",
      "type": "convar",
      "default": "1",
      "flags": ["cl", "a"],
      "description": "Percentage of screen height considered safe from overscan."
    },
    {
      "command": "save_animgraph_recording",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Saves all active animgraph recordings to disk."
    },
    {
      "command": "save_maxarray_spew",
      "type": "convar",
      "default": "10",
      "flags": ["sv", "release"],
      "description": "Max number of array entries to spew when using SaveRestoreIO spewing."
    },
    {
      "command": "say",
      "type": "command",
      "default": "",
      "flags": ["sv"],
      "description": "Display player message."
    },
    {
      "command": "say_team",
      "type": "command",
      "default": "",
      "flags": ["sv"],
      "description": "Display player message to team."
    },
    {
      "command": "sc_check_world",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_disable_culling_boxes",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_disable_procedural_layer_rendering",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_disable_shadow_fastpath",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_disable_shadow_materials",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_disable_spotlight_shadows",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_disable_world_materials",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_disableThreading",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_dump_lists",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_dumpworld",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Dump a list of the objects in a sceneworld (Usage: sc_dumpworld <world_index>)."
    },
    {
      "command": "sc_dumpworld3d",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Dump the objects in a sceneworld into a 3D geoview buffer (Usage: sc_dumpworld3d <world_index>)."
    },
    {
      "command": "sc_extended_stats",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_force_lod_level",
      "type": "convar",
      "default": "-1",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_force_materials_batchable",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_force_translation_in_projection",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "If enabled, the camera's translation will be included in the projection matrix."
    },
    {
      "command": "sc_listworlds",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "List all the active sceneworlds."
    },
    {
      "command": "sc_lod_distance_scale_override",
      "type": "convar",
      "default": "-1",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_log_submits",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Log out display list submits from scenesystem."
    },
    {
      "command": "sc_only_render_opaque",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_only_render_shadowcasters",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_override_shadow_fade_max_dist",
      "type": "convar",
      "default": "-1",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_override_shadow_fade_min_dist",
      "type": "convar",
      "default": "-1",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_reject_all_objects",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "sc_setclassflags",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Low level command to set the flags byte for an object class. Usage: sc_SetClassFlags <classname> <value>."
    },
    {
      "command": "sc_showclasses",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "List the object class names known by scenesystem."
    },
    {
      "command": "sc_skip_traversal",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },

    {
      "command": "scene_playvcd",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Play the given VCD as an instanced scripted scene."
    },

    {
      "command": "screenmessage_show",
      "type": "convar",
      "default": "-1",
      "flags": ["cheat"],
      "description": "Enable display of console messages on screen. 1=Enabled, 0=Disabled, -1=Enabled if vgui is not present."
    },

    {
      "command": "script_add_debug_filter",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Add a filter to the game debug overlay."
    },
    {
      "command": "script_add_watch",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Add a watch to the game debug overlay."
    },
    {
      "command": "script_add_watch_pattern",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Add a watch to the game debug overlay by pattern."
    },
    {
      "command": "script_attach_debugger",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Connect the vscript VM to the script debugger."
    },
    {
      "command": "script_clear_watches",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Clear all watches from the game debug overlay."
    },
    {
      "command": "script_debug",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Toggle the in-game script debug features."
    },
    {
      "command": "script_dump_all",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Dump the state of the VM to the console."
    },
    {
      "command": "script_find",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Find a key in the VM."
    },
    {
      "command": "script_help",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Output help for script functions."
    },
    {
      "command": "script_reload",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Reload scripts."
    },
    {
      "command": "script_reload_code",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Execute a vscript file, replacing existing functions with the functions in the run script."
    },
    {
      "command": "script_reload_entity_code",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Execute all of this entity's VScripts, replacing existing functions."
    },
    {
      "command": "script_remove_debug_filter",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Remove a filter from the game debug overlay."
    },
    {
      "command": "script_remove_watch",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Remove a watch from the game debug overlay."
    },
    {
      "command": "script_remove_watch_pattern",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Remove a watch by pattern from the game debug overlay."
    },
    {
      "command": "script_resurrect_unreachable",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Use the garbage collector to track down reference cycles."
    },
    {
      "command": "script_trace_disable",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Turn off a particular trace output by file or function name."
    },
    {
      "command": "script_trace_disable_all",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Turn off all trace output."
    },
    {
      "command": "script_trace_disable_key",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Turn off a particular trace output by table/instance."
    },
    {
      "command": "script_trace_enable",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Turn on a particular trace output by file or function name."
    },
    {
      "command": "script_trace_enable_all",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Turn on all trace output."
    },
    {
      "command": "script_trace_enable_key",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Turn on a particular trace output by table/instance."
    },

    {
      "command": "sdr",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "An old command that has been renamed to 'net_option'."
    },

    {
      "command": "sensitivity",
      "type": "convar",
      "default": "2.5",
      "flags": ["cl", "a", "per_user"],
      "description": "Mouse sensitivity."
    },

    {
      "command": "server_snd_cast",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Casts a ray and starts a sound event where the ray hits. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]."
    },
    {
      "command": "servercfgfile",
      "type": "convar",
      "default": "server.cfg",
      "flags": ["sv", "release"],
      "description": ""
    },

    {
      "command": "setang",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Snap player eyes to specified pitch yaw <roll:optional> (requires sv_cheats)."
    },
    {
      "command": "setang_exact",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Snap player eyes and orientation to specified pitch yaw <roll:optional> (requires sv_cheats)."
    },
    {
      "command": "setinfo",
      "type": "command",
      "default": "",
      "flags": ["clientcmd_can_execute"],
      "description": "Adds a new user info value."
    },
    {
      "command": "setmodel",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Change player's model."
    },
    {
      "command": "setpause",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Set the pause state of the server."
    },
    {
      "command": "setpos",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Move player to specified origin (requires sv_cheats)."
    },
    {
      "command": "setpos_exact",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Move player to an exact specified origin (requires sv_cheats)."
    },
    {
      "command": "setpos_player",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Move specified player to specified origin (requires sv_cheats)."
    },

    {
      "command": "shake",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Shake the screen."
    },
    {
      "command": "shake_stop",
      "type": "command",
      "default": "",
      "flags": ["cl", "cheat"],
      "description": "Stops all active screen shakes."
    },
    {
      "command": "shake_testpunch",
      "type": "command",
      "default": "",
      "flags": ["cl", "cheat"],
      "description": "Test a punch-style screen shake."
    },

    {
      "command": "shatterglass_break",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "shatterglass_cleanup",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "shatterglass_cleanup_max",
      "type": "convar",
      "default": "150",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "shatterglass_debug",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "shatterglass_distort",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "shatterglass_edge_uv_scale",
      "type": "convar",
      "default": "0.05",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "shatterglass_hit_tolerance",
      "type": "convar",
      "default": "2",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "shatterglass_restore",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "shatterglass_shard_lifetime",
      "type": "convar",
      "default": "15",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "shatterglass_subdiv_size",
      "type": "convar",
      "default": "1.5",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "shatterglass_voronoi_size",
      "type": "convar",
      "default": "15",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },

    {
      "command": "show_loadout_toggle",
      "type": "command",
      "default": "",
      "flags": ["cl", "clientcmd_can_execute"],
      "description": "Toggles loadout display."
    },
    {
      "command": "show_visibility_boxes",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "cheat"],
      "description": "Enable or Disable debug display of visibility boxes."
    },
    {
      "command": "showconsole",
      "type": "command",
      "default": "",
      "flags": ["norecord", "release"],
      "description": "Show the console."
    },
    {
      "command": "showtriggers",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Enable or Disable showing trigger entities."
    },
    {
      "command": "showtriggers_toggle",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Displays the movement bounding box for triggers in orange. Optional arg: entity filter."
    },

    {
      "command": "silence_dsp",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "When on, silences all DSP mixes."
    },

    {
      "command": "sk_autoaim_mode",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "a", "rep"],
      "description": ""
    },

    {
      "command": "skel_constraints_enable",
      "type": "convar",
      "default": "true",
      "flags": ["rep", "cheat"],
      "description": ""
    },
    {
      "command": "skeleton_instance_scaleset_enable",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "skeleton_instance_smear_boneflags",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cheat"],
      "description": "Smear boneflags across the model to test consistency."
    },

    {
      "command": "skill",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "a", "rep", "per_user"],
      "description": "Game skill level."
    },

    {
      "command": "slot0",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot1",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot2",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot3",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot4",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot5",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot6",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot7",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot8",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot9",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot10",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot11",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot12",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },
    {
      "command": "slot13",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": ""
    },

    {
      "command": "snd_arrangement_start",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Starts the specified arrangement."
    },
    {
      "command": "snd_autodetect_latency",
      "type": "convar",
      "default": "true",
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "snd_break_on_start_soundevent",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Use to debug break on any soundevent that is started matching this name."
    },
    {
      "command": "snd_cast",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Casts a ray and starts a sound event where the ray hits. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]."
    },
    {
      "command": "snd_compare_soundevents",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Compare the compiled and loaded contents of 2 soundevents."
    },
    {
      "command": "snd_deathcamera_volume",
      "type": "convar",
      "default": "0.16",
      "flags": ["cl", "a", "release"],
      "description": "Volume of Deathcam Timers."
    },
    {
      "command": "snd_disable_mixer_duck",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_disable_mixer_solo",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_dsp_distance_max",
      "type": "convar",
      "default": "2000",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_dsp_distance_min",
      "type": "convar",
      "default": "20",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_duckerattacktime",
      "type": "convar",
      "default": "0.5",
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "snd_duckerreleasetime",
      "type": "convar",
      "default": "2.5",
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "snd_duckerthreshold",
      "type": "convar",
      "default": "0.15",
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "snd_ducktovolume",
      "type": "convar",
      "default": "0.55",
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "snd_envelope_rate",
      "type": "convar",
      "default": "0.9",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_filter",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_foliage_db_loss",
      "type": "convar",
      "default": "4",
      "flags": ["sv", "cheat"],
      "description": "Foliage dB loss per 1200 units."
    },
    {
      "command": "snd_gain",
      "type": "convar",
      "default": "1",
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "snd_gain_max",
      "type": "convar",
      "default": "1",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_gain_min",
      "type": "convar",
      "default": "0.01",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_gamevoicevolume",
      "type": "convar",
      "default": "1",
      "flags": ["a"],
      "description": "Game v.o. volume."
    },
    {
      "command": "snd_gamevolume",
      "type": "convar",
      "default": "1",
      "flags": ["a"],
      "description": "Game volume."
    },
    {
      "command": "snd_get_physics_surface_properties",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Get physics surface properties for all the materials."
    },
    {
      "command": "snd_headphone_eq",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "clientcmd_can_execute"],
      "description": "Select Headphone EQ Preset."
    },
    {
      "command": "snd_list",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_list_deferred_soundevents",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "List all current deferred load soundevents."
    },
    {
      "command": "snd_list_soundevents",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "List all available soundevents."
    },
    {
      "command": "snd_list_soundevents_by_stack",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "List all available soundevents using specified stack name."
    },
    {
      "command": "snd_mainmenu_music_break_time_max",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "cheat"],
      "description": "Maximum pause between playing main menu music."
    },
    {
      "command": "snd_mainmenu_music_break_time_min",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "cheat"],
      "description": "Minimum pause between playing main menu music."
    },
    {
      "command": "snd_mapobjective_volume",
      "type": "convar",
      "default": "0.04",
      "flags": ["cl", "a", "release"],
      "description": "Volume of Map Objective Music."
    },
    {
      "command": "snd_menumusic_volume",
      "type": "convar",
      "default": "0.04",
      "flags": ["cl", "a", "release"],
      "description": "Volume of Menu / Non-gameplay music."
    },
    {
      "command": "snd_mixahead",
      "type": "convar",
      "default": "0.001",
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "snd_mixer_master_dsp",
      "type": "convar",
      "default": "1",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_mixer_master_level",
      "type": "convar",
      "default": "1",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_musicvolume",
      "type": "convar",
      "default": "1",
      "flags": ["a"],
      "description": "Music volume."
    },
    {
      "command": "snd_mute_losefocus",
      "type": "convar",
      "default": "true",
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "snd_mute_mvp_music_live_players",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "a", "release"],
      "description": "If set, MVP music is muted if players from both teams are still alive."
    },
    {
      "command": "snd_mvp_volume",
      "type": "convar",
      "default": "0.16",
      "flags": ["cl", "a", "release"],
      "description": "Volume of MVP Music."
    },
    {
      "command": "snd_new_visualize",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cheat"],
      "description": "Displays soundevent name played at it's 3d position."
    },
    {
      "command": "snd_occlusion_bounces",
      "type": "convar",
      "default": "1",
      "flags": ["rep", "cheat"],
      "description": ""
    },
    {
      "command": "snd_occlusion_debug",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "snd_occlusion_min_wall_thickness",
      "type": "convar",
      "default": "4",
      "flags": ["rep", "cheat"],
      "description": ""
    },
    {
      "command": "snd_occlusion_rays",
      "type": "convar",
      "default": "4",
      "flags": ["rep", "cheat"],
      "description": ""
    },
    {
      "command": "snd_op_test_convar",
      "type": "convar",
      "default": "720",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_opvar_set_point_debug",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "snd_print_activetracks",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "List all active tracks."
    },
    {
      "command": "snd_print_arrangements",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "List all available sequence arrangments."
    },
    {
      "command": "snd_print_samplers",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "List all available samplers."
    },
    {
      "command": "snd_print_sequences",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "List all available midi sequences."
    },
    {
      "command": "snd_rear_stereo_scale",
      "type": "convar",
      "default": "1",
      "flags": ["rep", "cheat"],
      "description": ""
    },
    {
      "command": "snd_refdb",
      "type": "convar",
      "default": "60",
      "flags": ["cheat"],
      "description": "Reference dB at snd_refdist."
    },
    {
      "command": "snd_refdist",
      "type": "convar",
      "default": "36",
      "flags": ["cheat"],
      "description": "Reference distance for snd_refdb."
    },
    {
      "command": "snd_remove_all_soundevents",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Remove all soundevents."
    },
    {
      "command": "snd_remove_soundevent",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Remove the specified soundevent."
    },
    {
      "command": "snd_report_verbose_error",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "If set to 1, report more error found when playing sounds."
    },
    {
      "command": "snd_roundaction_volume",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": "Volume of Move Action Music."
    },
    {
      "command": "snd_roundend_volume",
      "type": "convar",
      "default": "0.16",
      "flags": ["cl", "a", "release"],
      "description": "Volume of Won/Lost Music."
    },
    {
      "command": "snd_roundstart_volume",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": "Volume of Round Start Music."
    },
    {
      "command": "snd_samplers_play_note",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Play a note from a specified sampler."
    },
    {
      "command": "snd_samplers_stop_note",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Stop a note from a specified sampler."
    },
    {
      "command": "snd_sequence_set_track_bpm",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Sets the tempo of the specified track."
    },
    {
      "command": "snd_sequence_set_track_transpose",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Sets the transposition of the specified track."
    },
    {
      "command": "snd_sequence_stop_all_tracks",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Stops all currently playing sequences."
    },
    {
      "command": "snd_sequence_stop_track",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Stops the specified track."
    },
    {
      "command": "snd_sequencer_show_bpm",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sequencer_show_events",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sequencer_show_quantize_queue",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_set_physics_surface_properties",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Set physics surface properties for materials. Usage: <heuristic #> <commit>."
    },
    {
      "command": "snd_setmixer",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Set named Mixgroup of current mixer to mix vol, mute, solo."
    },
    {
      "command": "snd_setmixlayer",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Set named Mixgroup of named mix layer to mix vol, mute, solo."
    },
    {
      "command": "snd_showclassname",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_showstart",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_block_global_stack",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_block_stop_global_stack",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_calc_angle_debug",
      "type": "convar",
      "default": "false",
      "flags": ["rep", "cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_flush_operators",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Flush and re-parse the sound operator system."
    },
    {
      "command": "snd_sos_get_operator_field_info",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Currently gets info for a single operator field."
    },
    {
      "command": "snd_sos_ingame_debug",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_list_operator_updates",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_opvar_debug",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_pause_soundevent",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Pause the specified soundevent in the list."
    },
    {
      "command": "snd_sos_pause_system",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_print_class_sizes",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Prints the sizes of relevant sos classes."
    },
    {
      "command": "snd_sos_print_field_name_strings",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Prints a list of currently cached field name strings."
    },
    {
      "command": "snd_sos_print_field_references",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Prints field reference info."
    },
    {
      "command": "snd_sos_print_full_field_info",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Prints full field info."
    },
    {
      "command": "snd_sos_print_groups",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Prints the current state of the groups system."
    },
    {
      "command": "snd_sos_print_operator_stack",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Prints a master list of currently exposed variables."
    },
    {
      "command": "snd_sos_print_operator_stack_operator",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Prints an operator from a stack."
    },
    {
      "command": "snd_sos_print_operator_stacks",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Prints a list of currently available stacks."
    },
    {
      "command": "snd_sos_print_operators",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Prints a list of currently available operators."
    },
    {
      "command": "snd_sos_print_stack_exec_list",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Prints the current stack execution list."
    },
    {
      "command": "snd_sos_print_strings",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Prints a list of currently cached strings."
    },
    {
      "command": "snd_sos_print_tool_properties",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Prints the current state of tool properties."
    },
    {
      "command": "snd_sos_resolve_execute_operator",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Resolve the inputs and execute one specified operator from a specified stack."
    },
    {
      "command": "snd_sos_set_operator_field",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Currently sets a single float operator field."
    },
    {
      "command": "snd_sos_set_operator_field_by_guid",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Currently sets a single float operator field."
    },
    {
      "command": "snd_sos_show_block_debug",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "Spew data about the list of block entries."
    },
    {
      "command": "snd_sos_show_operator_event_and_stack",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_operator_event_filter",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_operator_field_filter",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_operator_init",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_operator_not_executing",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_operator_operator_filter",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_operator_pause_entry",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_operator_shutdown",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_operator_stop_entry",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_operator_updates",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_opvar_updates",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_opvar_updates_filter",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_queuetotrack",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_soundevent_param_overwrite",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_show_soundevent_start",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_soundevent_filter",
      "type": "convar",
      "default": "0",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "snd_sos_soundevent_profile",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Dump a record of current soundevents and profile data."
    },
    {
      "command": "snd_sos_start_soundevent",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Starts a specified soundevent."
    },
    {
      "command": "snd_sos_start_soundevent_at_pos",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Starts a specified soundevent at the given position."
    },
    {
      "command": "snd_sos_stop_all_soundevents",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Stops all soundevents currently on the execution list."
    },
    {
      "command": "snd_sos_stop_soundevent_guid",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Stops a specified soundevent."
    },
    {
      "command": "snd_sos_stop_soundevent_index",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Stops a specified soundevent."
    },
    {
      "command": "snd_sos_test_soundmessage",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "test"
    },
    {
      "command": "snd_sos_unpause_soundevent",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "UnPause the first soundevent in the list."
    },
    {
      "command": "snd_sound_areas_debug",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "snd_sound_areas_debug_interval",
      "type": "convar",
      "default": "0.2",
      "flags": ["cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "snd_soundevent_clear_deferred",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Clear the list of deferred soundevents for loading."
    },
    {
      "command": "snd_soundmixer_set_trigger_factor",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Set named mix layer / mix group, trigger amount."
    },
    {
      "command": "snd_soundmixer_setmixlayer_amount",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Set named mix layer mix amount."
    },
    {
      "command": "snd_spatialize_lerp",
      "type": "convar",
      "default": "0",
      "flags": ["a", "release"],
      "description": ""
    },
    {
      "command": "snd_steamaudio_enable_pathing",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": "This variable is checked by soundstack to globally enabling pathing for audio processing."
    },
    {
      "command": "snd_steamaudio_enable_perspective_correction",
      "type": "convar",
      "default": "true",
      "flags": ["a", "release"],
      "description": "Enable perspective correction for 3D audio."
    },
    {
      "command": "snd_steamaudio_enable_reverb",
      "type": "convar",
      "default": "0",
      "flags": ["release"],
      "description": "Enable Steam Audio Reverb processor."
    },
    {
      "command": "snd_steamaudio_enable_spatial_blend_fix",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Toggles the speculative fix for low-frequency issues when using spatial blend."
    },
    {
      "command": "snd_steamaudio_export_scene",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Exports scene currently used by Steam Audio as a phononscene file."
    },
    {
      "command": "snd_steamaudio_halton_sequence",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Generate Halton Sequence for a given order and number of samples."
    },
    {
      "command": "snd_steamaudio_ir_duration",
      "type": "convar",
      "default": "2",
      "flags": ["cheat"],
      "description": "The time delay between a sound being emitted and the last audible reflection in Steam Audio."
    },
    {
      "command": "snd_steamaudio_load_pathing_data",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": "If set, baked pathing data is loaded."
    },
    {
      "command": "snd_steamaudio_load_reverb_data",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": "If set, baked reverb data is loaded."
    },
    {
      "command": "snd_steamaudio_max_convolution_sources",
      "type": "convar",
      "default": "4",
      "flags": ["cheat"],
      "description": "The maximum number of simultaneous sources that can be modeled by Steam Audio."
    },
    {
      "command": "snd_steamaudio_max_occlusion_samples",
      "type": "convar",
      "default": "64",
      "flags": ["cheat"],
      "description": "The maximum number of rays that can be traced for volumetric occlusion by Steam Audio."
    },
    {
      "command": "snd_steamaudio_num_bounces",
      "type": "convar",
      "default": "128",
      "flags": ["cheat"],
      "description": "The maximum number of times any ray can bounce when using Steam Audio."
    },
    {
      "command": "snd_steamaudio_num_diffuse_samples",
      "type": "convar",
      "default": "2048",
      "flags": ["cheat"],
      "description": "The number of directions considered for ray bounce by Steam Audio."
    },
    {
      "command": "snd_steamaudio_num_rays",
      "type": "convar",
      "default": "65536",
      "flags": ["cheat"],
      "description": "The number of rays to trace for reflection modeling by Steam Audio."
    },
    {
      "command": "snd_steamaudio_num_threads",
      "type": "convar",
      "default": "2",
      "flags": ["cheat"],
      "description": "Sets the number of threads used for realtime reflection by Steam Audio."
    },
    {
      "command": "snd_steamaudio_pathing_order",
      "type": "convar",
      "default": "1",
      "flags": ["cheat"],
      "description": "The amount of directional detail in the simulated by Steam Audio."
    },
    {
      "command": "snd_steamaudio_pathing_order_rendering",
      "type": "convar",
      "default": "1",
      "flags": ["cheat"],
      "description": "The amount of directional detail in the rendered audio by Steam Audio."
    },
    {
      "command": "snd_steamaudio_reverb_level_db",
      "type": "convar",
      "default": "-3",
      "flags": ["release"],
      "description": "Adjust overall volume (dB) of the output from Steam Audio Reverb processor."
    },
    {
      "command": "snd_steamaudio_source_pathing_debug",
      "type": "convar",
      "default": "false",
      "flags": ["a"],
      "description": "Enable path visualization for steam_audio_source operator."
    },
    {
      "command": "snd_tensecondwarning_volume",
      "type": "convar",
      "default": "0.04",
      "flags": ["cl", "a", "release"],
      "description": "Volume of Ten Second Warnings."
    },
    {
      "command": "snd_toolvolume",
      "type": "convar",
      "default": "1",
      "flags": ["a"],
      "description": "Volume of sounds in tools (e.g. Hammer, SFM)."
    },
    {
      "command": "snd_use_baked_occlusion",
      "type": "convar",
      "default": "0",
      "flags": ["rep", "cheat", "release"],
      "description": ""
    },
    {
      "command": "snd_vmidi_flush",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Purge and reload all vmidi data and files."
    },
    {
      "command": "snd_vmix_override_mix_decay_time",
      "type": "convar",
      "default": "-1",
      "flags": ["cheat"],
      "description": "If set > 0, overrides how long the decay time is on all mix graphs (in seconds)."
    },
    {
      "command": "snd_vmix_show_input_updates",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": "If set to 1, show all incoming updates to vmix inputs."
    },
    {
      "command": "snd_voipvolume",
      "type": "convar",
      "default": "1",
      "flags": ["a"],
      "description": "Voice volume."
    },
    {
      "command": "sound_device_override",
      "type": "convar",
      "default": "0",
      "flags": ["a", "release"],
      "description": "ID of the sound device to use."
    },
    {
      "command": "soundinfo",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Describe the current sound device with an active voice list."
    },
    {
      "command": "soundscape_debug",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cheat"],
      "description": "When on, draws lines to all env_soundscape entities."
    },
    {
      "command": "soundscape_dumpclient",
      "type": "command",
      "default": "",
      "flags": ["cl", "cheat"],
      "description": "Dumps the client's soundscape data."
    },
    {
      "command": "soundscape_fadetime",
      "type": "convar",
      "default": "3",
      "flags": ["cl", "cheat"],
      "description": "Time to crossfade sound effects between soundscapes."
    },
    {
      "command": "soundscape_radius_debug",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "cheat"],
      "description": "Prints current volume of radius sounds."
    },
    {
      "command": "spawn_group_activate",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Activate specified spawngroup."
    },
    {
      "command": "spawn_group_list",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "List all spawn groups."
    },
    {
      "command": "spawn_group_load",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Load named spawn group."
    },
    {
      "command": "spawn_group_unload",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Unload named spawn group."
    },
    {
      "command": "speaker_config",
      "type": "convar",
      "default": "-1",
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "spec_autodirector",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "clientcmd_can_execute"],
      "description": "Auto-director chooses best view modes while spectating."
    },
    {
      "command": "spec_centerchasecam",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "a"],
      "description": "Looks at the target player's center instead of eye position in chase cam."
    },
    {
      "command": "spec_freeze_deathanim_time",
      "type": "convar",
      "default": "0.8",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Time watching ragdoll before freeze death cam."
    },
    {
      "command": "spec_freeze_time",
      "type": "convar",
      "default": "2",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Time spent frozen in observer freeze cam."
    },
    {
      "command": "spec_freeze_time_lock",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Time players are prevented from skipping the freeze cam."
    },
    {
      "command": "spec_freeze_traveltime",
      "type": "convar",
      "default": "0.3",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Time taken to zoom in to frame a target."
    },
    {
      "command": "spec_glow_decay_time",
      "type": "convar",
      "default": "2",
      "flags": ["cl", "release"],
      "description": "Time to decay glow from 1.0 to spec_glow_silent_factor."
    },
    {
      "command": "spec_glow_full_time",
      "type": "convar",
      "default": "1",
      "flags": ["cl", "release"],
      "description": "Noisy players stay at full brightness for this long."
    },
    {
      "command": "spec_glow_silent_factor",
      "type": "convar",
      "default": "0.4",
      "flags": ["cl", "release"],
      "description": "Lurking player xray glow scaling."
    },
    {
      "command": "spec_glow_spike_factor",
      "type": "convar",
      "default": "1.2",
      "flags": ["cl", "release"],
      "description": "Noisy player xray glow scaling (pop when noise is made)."
    },
    {
      "command": "spec_glow_spike_time",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "release"],
      "description": "Time for noisy player glow 'spike'."
    },
    {
      "command": "spec_hide_players",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "release", "clientcmd_can_execute"],
      "description": "Toggle the visibility of scoreboard players."
    },
    {
      "command": "spec_pos",
      "type": "command",
      "default": "",
      "flags": ["cl", "cheat"],
      "description": "Dump position and angles to the console."
    },
    {
      "command": "spec_replay_autostart",
      "type": "convar",
      "default": "true",
      "flags": ["cl", "a"],
      "description": "Auto-start Killer Replay when available."
    },
    {
      "command": "spec_replay_bot",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Enable Spectator Hltv Replay when killed by bot."
    },
    {
      "command": "spec_replay_enable",
      "type": "convar",
      "default": "0",
      "flags": ["rep", "release"],
      "description": "Enable Killer Replay (0:off, 1:default, 2:force)."
    },
    {
      "command": "spec_replay_leadup_time",
      "type": "convar",
      "default": "5.3438",
      "flags": ["rep", "release"],
      "description": "Replay time in seconds before the highlighted event."
    },
    {
      "command": "spec_replay_message_time",
      "type": "convar",
      "default": "9.5",
      "flags": ["rep", "release"],
      "description": "How long to show the message about Killer Replay after death."
    },
    {
      "command": "spec_replay_on_death",
      "type": "convar",
      "default": "false",
      "flags": ["rep", "release"],
      "description": "Delayed replay mode segregates dead players' chat/voice."
    },
    {
      "command": "spec_replay_rate_base",
      "type": "convar",
      "default": "1",
      "flags": ["rep", "release"],
      "description": "Base time scale of Killer Replay. Experimental."
    },
    {
      "command": "spec_replay_rate_limit",
      "type": "convar",
      "default": "3",
      "flags": ["rep", "release"],
      "description": "Minimum allowable pause between replay requests (seconds)."
    },
    {
      "command": "spec_replay_round_delay",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": "Round can be delayed by this much due to someone watching a replay."
    },
    {
      "command": "spec_replay_winddown_time",
      "type": "convar",
      "default": "2",
      "flags": ["sv", "release"],
      "description": "Trailing time of replay past the event, including fade-out."
    },
    {
      "command": "spec_show_xray",
      "type": "convar",
      "default": "1",
      "flags": ["cl", "a", "release"],
      "description": "See player outlines and name IDs through walls depending on team/mode."
    },
    {
      "command": "spec_usenumberkeys_nobinds",
      "type": "convar",
      "default": "true",
      "flags": ["cl", "a"],
      "description": "Use raw number keys for map voting and spectator view."
    },
    {
      "command": "spec_xray_dropped_defusekits",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "release"],
      "description": "Whether to X-ray dropped defuse kits."
    },
    {
      "command": "spec_xray_dropped_unoccluded",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "release"],
      "description": "Whether to always X-ray dropped c4 and defuse kits."
    },
    {
      "command": "splitscreen_mode",
      "type": "convar",
      "default": "0",
      "flags": ["a"],
      "description": ""
    },
    {
      "command": "+spray_menu",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "-spray_menu",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "startdemos",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Play demos in demo sequence."
    },
    {
      "command": "status",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Print connection status."
    },
    {
      "command": "status_json",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Print status in JSON format."
    },
    {
      "command": "steam_controller_haptics",
      "type": "convar",
      "default": "true",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "stop",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Finish recording demo."
    },
    {
      "command": "stopdemos",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Stop looping demos (current demo will complete)."
    },
    {
      "command": "stopsound",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "stopsoundscape",
      "type": "command",
      "default": "",
      "flags": ["cl", "cheat"],
      "description": "Stops all soundscape processing and fades current looping sounds."
    },
    {
      "command": "subclass_change",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat", "vconsole_fuzzy"],
      "description": "Changes the subclass of the given entity. Usage: <new_subclass> {entity spec}."
    },
    {
      "command": "subclass_create",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat", "vconsole_fuzzy"],
      "description": "Creates an entity of the given subclass where the player is looking."
    },
    {
      "command": "surfaceprop",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Reports the surface properties at the cursor."
    },
    {
      "command": "sv_accelerate",
      "type": "convar",
      "default": "5.5",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Player ground acceleration."
    },
    {
      "command": "sv_accelerate_debug_speed",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Debug print for accelerate speed."
    },
    {
      "command": "sv_accelerate_use_weapon_speed",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Use weapon speed when accelerating."
    },
    {
      "command": "sv_air_max_horizontal_parachute_speed",
      "type": "convar",
      "default": "240",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_air_max_wishspeed",
      "type": "convar",
      "default": "30",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_air_pushaway_dist",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_airaccelerate",
      "type": "convar",
      "default": "12",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Air acceleration."
    },
    {
      "command": "sv_airaccelerate_parachute",
      "type": "convar",
      "default": "2.6",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Air acceleration while parachuting."
    },
    {
      "command": "sv_airaccelerate_rappel",
      "type": "convar",
      "default": "2.2",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Air acceleration while rappelling."
    },
    {
      "command": "sv_allchat",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "nf", "release"],
      "description": "Players can receive all text chat, no death restrictions."
    },
    {
      "command": "sv_allow_votes",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "release"],
      "description": "Allow voting?"
    },
    {
      "command": "sv_alltalk",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "nf", "release"],
      "description": "Players can hear all voice chat, no team restrictions."
    },
    {
      "command": "sv_alternateticks",
      "type": "convar",
      "default": "false",
      "flags": ["sp", "release"],
      "description": "If set, server only simulates entities on even numbered ticks."
    },
    {
      "command": "sv_always_play_damage_headshot_feedback",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "release"],
      "description": "Always play headshot damage feedback, even through smokes/objects."
    },
    {
      "command": "sv_auto_adjust_bot_difficulty",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "release"],
      "description": "Adjust bot difficulty each round based on contribution score."
    },
    {
      "command": "sv_auto_full_alltalk_during_warmup_half_end",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Auto enable full all talk during warmup, halftime and end of match."
    },
    {
      "command": "sv_autobunnyhopping",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Players automatically re-jump while holding jump."
    },
    {
      "command": "sv_autobuyammo",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Enable automatic ammo purchase in buy zones during buy periods."
    },
    {
      "command": "sv_autoexec_mapname_cfg",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Execute a mapname cfg automatically in custom modes that require it."
    },
    {
      "command": "sv_banid_enabled",
      "type": "convar",
      "default": "true",
      "flags": ["release"],
      "description": "Whether server supports banid command."
    },
    {
      "command": "sv_bot_buy_decoy_weight",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "release"],
      "description": "Relative weight for bots buying decoy grenades."
    },
    {
      "command": "sv_bot_buy_flash_weight",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "release"],
      "description": "Relative weight for bots buying flashbangs."
    },
    {
      "command": "sv_bot_buy_grenade_chance",
      "type": "convar",
      "default": "33",
      "flags": ["sv", "release"],
      "description": "Chance (percent) bots buy a grenade with leftover money."
    },
    {
      "command": "sv_bot_buy_hegrenade_weight",
      "type": "convar",
      "default": "6",
      "flags": ["sv", "release"],
      "description": "Relative weight for bots buying HE grenades."
    },
    {
      "command": "sv_bot_buy_molotov_weight",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "release"],
      "description": "Relative weight for bots buying molotov/incendiary."
    },
    {
      "command": "sv_bot_buy_smoke_weight",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "release"],
      "description": "Relative weight for bots buying smokes."
    },
    {
      "command": "sv_bots_get_easier_each_win",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": "If > 0, this many bots lower difficulty each time they win."
    },
    {
      "command": "sv_bots_get_harder_after_each_wave",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": "If > 0, this many bots raise difficulty after CTs beat a wave."
    },
    {
      "command": "sv_bounce",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Bounce multiplier when physics objects collide."
    },
    {
      "command": "sv_buy_status_override",
      "type": "convar",
      "default": "-1",
      "flags": ["sv", "rep", "release"],
      "description": "0 everyone; 1 CT only; 2 T only; 3 nobody."
    },
    {
      "command": "sv_chat_proximity",
      "type": "convar",
      "default": "-1",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Proximity chat range (-1 default)."
    },
    {
      "command": "sv_cheats",
      "type": "convar",
      "default": "false",
      "flags": ["nf", "rep", "release"],
      "description": "Allow cheats on server."
    },
    {
      "command": "sv_clockcorrection_msecs",
      "type": "convar",
      "default": "30",
      "flags": ["sv", "release"],
      "description": "Keep player's tickbase within this many ms of server tickcount."
    },
    {
      "command": "sv_cluster",
      "type": "convar",
      "default": "0",
      "flags": ["release"],
      "description": "Data center cluster this server lives in."
    },
    {
      "command": "sv_competitive_minspec",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Force minimum/maximum client convars for competitive fairness."
    },
    {
      "command": "sv_cs_player_speed_has_hostage",
      "type": "convar",
      "default": "200",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_damage_print_enable",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "0: off; 1: print on death; 2: print at next round restart."
    },
    {
      "command": "sv_deadtalk",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Dead players can speak (voice + text) to the living."
    },
    {
      "command": "sv_debug_overlays_bandwidth",
      "type": "convar",
      "default": "65536",
      "flags": ["release"],
      "description": "Broadcast server debug overlays traffic."
    },
    {
      "command": "sv_debug_overlays_broadcast",
      "type": "convar",
      "default": "false",
      "flags": ["nf", "cheat", "release"],
      "description": "Broadcast server debug overlays."
    },
    {
      "command": "sv_disable_immunity_alpha",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If set, clients won't slam player model render immunity settings."
    },
    {
      "command": "sv_disable_observer_interpolation",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Disallow interpolation between observer targets."
    },
    {
      "command": "sv_disable_radar",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "0: regular; 1: always disabled; 2: disabled in warmup."
    },
    {
      "command": "sv_disable_teamselect_menu",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Disable team select menu on clients."
    },
    {
      "command": "sv_disconnected_player_data_hold_time",
      "type": "convar",
      "default": "60",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Seconds to hold data of disconnected players for scoreboard."
    },
    {
      "command": "sv_distance_guaranteed_damage_feedback",
      "type": "convar",
      "default": "1070",
      "flags": ["sv", "release"],
      "description": "Within this radius attacks guarantee damage feedback sounds."
    },
    {
      "command": "sv_dz_cash_bundle_size",
      "type": "convar",
      "default": "50",
      "flags": ["sv", "rep", "release"],
      "description": "Size of a cash bundle."
    },
    {
      "command": "sv_dz_cash_mega_bundle_size",
      "type": "convar",
      "default": "13",
      "flags": ["sv", "rep", "release"],
      "description": "Size of a mega cash bundle."
    },
    {
      "command": "sv_dz_contractkill_reward",
      "type": "convar",
      "default": "10",
      "flags": ["sv", "rep", "release"],
      "description": "Cash bundles awarded for a contract kill."
    },
    {
      "command": "sv_dz_hostage_rescue_reward",
      "type": "convar",
      "default": "18",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Cash bundles awarded for rescuing a hostage."
    },
    {
      "command": "sv_dz_squad_wipe_reward",
      "type": "convar",
      "default": "2",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Cash bundles awarded for eliminating a squad."
    },
    {
      "command": "sv_enable_alternate_baselines",
      "type": "convar",
      "default": "1",
      "flags": ["release"],
      "description": "Allow alternate baseline system, set 2 for debugging spew."
    },
    {
      "command": "sv_enable_delta_packing",
      "type": "convar",
      "default": "true",
      "flags": ["release"],
      "description": "Use property changes for building entity data (faster)."
    },
    {
      "command": "sv_enablebunnyhopping",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Allow player speed to exceed max running speed."
    },
    {
      "command": "sv_ent_showonlyhitbox",
      "type": "convar",
      "default": "-1",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "sv_ents_write_alarm",
      "type": "convar",
      "default": "0",
      "flags": ["release"],
      "description": "Print callstack when WriteEntityUpdate exceeds N ms."
    },
    {
      "command": "sv_extract_ammo_from_dropped_weapons",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_fade_player_visibility_farz",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_falldamage_scale",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Scale fall damage."
    },
    {
      "command": "sv_falldamage_to_below_player_multiplier",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Scale damage distributed to player below."
    },
    {
      "command": "sv_falldamage_to_below_player_ratio",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Landing on another player's head gives them this ratio of damage."
    },
    {
      "command": "sv_friction",
      "type": "convar",
      "default": "5.2",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "World friction."
    },
    {
      "command": "sv_full_alltalk",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Any player (including Spectators) can speak to any player."
    },
    {
      "command": "sv_game_mode_flags",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": "Dedicated server game mode flags."
    },
    {
      "command": "sv_gameinstructor_disable",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Force clients to disable game instructor hints."
    },
    {
      "command": "sv_gameinstructor_enable",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "rep", "release"],
      "description": "Force clients to enable game instructor hints."
    },
    {
      "command": "sv_gravity",
      "type": "convar",
      "default": "800",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "World gravity."
    },
    {
      "command": "sv_grenade_trajectory_prac_pipreview",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Shows grenade trajectory practice picture-in-picture preview."
    },
    {
      "command": "sv_grenade_trajectory_prac_trailtime",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Shows grenade trajectory practice visualization for this many seconds."
    },
    {
      "command": "sv_grenade_trajectory_time_spectator",
      "type": "convar",
      "default": "4",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Length of time grenade trajectory remains visible for spectators."
    },
    {
      "command": "sv_guardian_extra_equipment_ct",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": "Extra starting equipment for CT players in guardian modes."
    },
    {
      "command": "sv_guardian_extra_equipment_t",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": "Extra starting equipment for Terrorist players in guardian modes."
    },
    {
      "command": "sv_guardian_health_refresh_per_wave",
      "type": "convar",
      "default": "50",
      "flags": ["sv", "release"],
      "description": "Health given to survivors per wave in guardian mode."
    },
    {
      "command": "sv_guardian_heavy_all",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": ""
    },
    {
      "command": "sv_guardian_heavy_count",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": ""
    },
    {
      "command": "sv_guardian_max_wave_for_heavy",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": ""
    },
    {
      "command": "sv_guardian_min_wave_for_heavy",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": ""
    },
    {
      "command": "sv_guardian_refresh_ammo_for_items_on_waves",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": "List of additional weapons to refill ammo on waves."
    },
    {
      "command": "sv_guardian_reset_c4_every_wave",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": ""
    },
    {
      "command": "sv_guardian_respawn_health",
      "type": "convar",
      "default": "50",
      "flags": ["sv", "release"],
      "description": "Starting health of guardian players when respawned."
    },
    {
      "command": "sv_guardian_spawn_health_ct",
      "type": "convar",
      "default": "100",
      "flags": ["sv", "release"],
      "description": "Starting health for CT in guardian modes."
    },
    {
      "command": "sv_guardian_spawn_health_t",
      "type": "convar",
      "default": "100",
      "flags": ["sv", "release"],
      "description": "Starting health for T in guardian modes."
    },
    {
      "command": "sv_guardian_starting_equipment_humans",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": "Extra starting equipment for human players in guardian modes."
    },
    {
      "command": "sv_health_approach_enabled",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_health_approach_speed",
      "type": "convar",
      "default": "10",
      "flags": ["sv", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_hegrenade_damage_multiplier",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "rep", "release"],
      "description": "Scale HE grenade damage."
    },
    {
      "command": "sv_hegrenade_radius_multiplier",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "rep", "release"],
      "description": "Scale HE grenade radius."
    },
    {
      "command": "sv_hibernate_postgame_delay",
      "type": "convar",
      "default": "5",
      "flags": ["release"],
      "description": "Seconds to wait after final client leaves before hibernating."
    },
    {
      "command": "sv_hibernate_when_empty",
      "type": "convar",
      "default": "true",
      "flags": ["release"],
      "description": "Put server into low CPU mode when no clients connected."
    },
    {
      "command": "sv_hide_roundtime_until_seconds",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_highlight_distance",
      "type": "convar",
      "default": "500",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_highlight_duration",
      "type": "convar",
      "default": "3.5",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_holiday_mode",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "0 = OFF, 1 = Halloween, 2 = Winter."
    },
    {
      "command": "sv_hoststate_quit_syscall",
      "type": "convar",
      "default": "false",
      "flags": ["release"],
      "description": "Quit immediately via syscall instead of host state shutdown."
    },
    {
      "command": "sv_human_autojoin_team",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "0 = Disabled; 1 = Spectators; 2 = Ts; 3 = CTs."
    },
    {
      "command": "sv_ignoregrenaderadio",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Turn off 'Fire in the hole' messages."
    },
    {
      "command": "sv_infinite_ammo",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "cheat", "release"],
      "description": "Player's active weapon will never run out of ammo."
    },
    {
      "command": "sv_invites_only_mainmenu",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Ignore all invites when user is playing a match."
    },
    {
      "command": "sv_jump_impulse",
      "type": "convar",
      "default": "301.993",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Initial upward velocity for player jumps; sqrt(2*gravity*height)."
    },
    {
      "command": "sv_jump_spam_penalty_time",
      "type": "convar",
      "default": "0.015625",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Subtick jump grace: lower makes bunnyhopping easier."
    },
    {
      "command": "sv_kick_ban_duration",
      "type": "convar",
      "default": "15",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Kick ban duration in minutes."
    },
    {
      "command": "sv_kick_players_with_cooldown",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "rep", "release"],
      "description": "(0: do not kick on insecure servers; 1: kick Untrusted/Overwatch; 2: kick any cooldown)."
    },
    {
      "command": "sv_knife_attack_extend_from_player_aabb",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_ladder_scale_speed",
      "type": "convar",
      "default": "0.78",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Scale top speed on ladders."
    },
    {
      "command": "sv_ladder_slack_z_mult",
      "type": "convar",
      "default": "0.026",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Difference in Z increases toward the middle of the slack ladder."
    },
    {
      "command": "sv_lagcompensationforcerestore",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cheat"],
      "description": "Don't test validity of a lag comp restore; just do it."
    },
    {
      "command": "sv_lan",
      "type": "convar",
      "default": "false",
      "flags": ["release"],
      "description": "Server is LAN only (no heartbeat/authentication)."
    },
    {
      "command": "sv_lightquery_debug",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "sv_load_forced_client_names_file",
      "type": "command",
      "default": "",
      "flags": ["sv", "release"],
      "description": "Loads a file containing SteamID64 names for clients."
    },
    {
      "command": "sv_load_random_client_names_file",
      "type": "command",
      "default": "",
      "flags": ["sv", "release"],
      "description": "Loads a file containing random name words for clients."
    },
    {
      "command": "sv_log_http_record_before_any_listeners",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": ""
    },
    {
      "command": "sv_log_onefile",
      "type": "convar",
      "default": "false",
      "flags": ["a", "release"],
      "description": "Log server information to only one file."
    },
    {
      "command": "sv_logbans",
      "type": "convar",
      "default": "false",
      "flags": ["a", "release"],
      "description": "Log server bans in the server logs."
    },
    {
      "command": "sv_logblocks",
      "type": "convar",
      "default": "false",
      "flags": ["release"],
      "description": "If true, log when a query is blocked (can be large)."
    },
    {
      "command": "sv_logecho",
      "type": "convar",
      "default": "true",
      "flags": ["a", "release"],
      "description": "Echo log information to the console."
    },
    {
      "command": "sv_logfile",
      "type": "convar",
      "default": "false",
      "flags": ["a", "release"],
      "description": "Log server information in the log file."
    },
    {
      "command": "sv_logflush",
      "type": "convar",
      "default": "false",
      "flags": ["a", "release"],
      "description": "Flush the log file to disk on each write (slow)."
    },
    {
      "command": "sv_logsdir",
      "type": "convar",
      "default": "logs",
      "flags": ["a", "release"],
      "description": "Folder where server logs will be stored."
    },
    {
      "command": "sv_mapvetopickvote_maps",
      "type": "convar",
      "default": "de_anubis,de_inferno,de_mirage,de_vertigo,de_overpass,de_nuke,de_ancient",
      "flags": ["sv", "release"],
      "description": "Which maps are used for map veto pick sequence."
    },
    {
      "command": "sv_mapvetopickvote_phase_duration",
      "type": "convar",
      "default": "[1 5][2 15][3:20][4:10][5:10][6:5]",
      "flags": ["sv", "release"],
      "description": "How many seconds each phase lasts."
    },
    {
      "command": "sv_mapvetopickvote_rnd",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Shuffle veto pick maps list order every time."
    },
    {
      "command": "sv_matchend_drops_enabled",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "release"],
      "description": "Gameplay time always accumulates; end-of-match drops can be prevented."
    },
    {
      "command": "sv_matchpause_auto_5v5",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Auto-pause at next freeze time if <5 players per team."
    },
    {
      "command": "sv_max_allowed_net_graph",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Determines max allowed net_graph value for clients."
    },
    {
      "command": "sv_max_deathmatch_respawns_per_tick",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": ""
    },
    {
      "command": "sv_max_queries_sec",
      "type": "convar",
      "default": "3",
      "flags": ["release"],
      "description": "Maximum queries per second to respond to from a single IP."
    },
    {
      "command": "sv_max_queries_sec_global",
      "type": "convar",
      "default": "60",
      "flags": ["release"],
      "description": "Maximum queries per second to respond to globally."
    },
    {
      "command": "sv_max_queries_window",
      "type": "convar",
      "default": "30",
      "flags": ["release"],
      "description": "Window (seconds) over which to average query rate."
    },
    {
      "command": "sv_maxrate",
      "type": "convar",
      "default": "0",
      "flags": ["rep", "release"],
      "description": "Max bandwidth rate allowed; 0 = unlimited."
    },
    {
      "command": "sv_maxspeed",
      "type": "convar",
      "default": "320",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_maxunlag",
      "type": "convar",
      "default": "0.2",
      "flags": ["sv", "release"],
      "description": "Maximum lag compensation in seconds."
    },
    {
      "command": "sv_maxvelocity",
      "type": "convar",
      "default": "3500",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Max speed any ballistic object can attain per axis."
    },
    {
      "command": "sv_memlimit",
      "type": "convar",
      "default": "0",
      "flags": ["cheat", "release"],
      "description": "If set, server exits after a game if memory used exceeds this MB."
    },
    {
      "command": "sv_merge_changes_after_tick_with_calcdelta",
      "type": "convar",
      "default": "1",
      "flags": ["release"],
      "description": "Fixes bugs where pure calcdelta is used; 2 to spew merged changes."
    },
    {
      "command": "sv_metaduplication",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Check serializer meta for duplication; add 'verbose' for full spew."
    },
    {
      "command": "sv_min_jump_landing_sound",
      "type": "convar",
      "default": "260",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_minrate",
      "type": "convar",
      "default": "98304",
      "flags": ["rep", "release"],
      "description": "Min bandwidth rate allowed; 0 = unlimited."
    },
    {
      "command": "sv_networkvar_perfieldtracking",
      "type": "convar",
      "default": "true",
      "flags": ["release"],
      "description": "Track individual field offset changes."
    },
    {
      "command": "sv_networkvar_validate",
      "type": "convar",
      "default": "false",
      "flags": ["release"],
      "description": "Validate each StateChanged against known offsets."
    },
    {
      "command": "sv_noclipaccelerate",
      "type": "convar",
      "default": "5",
      "flags": ["sv", "cl", "a", "nf", "rep"],
      "description": "Acceleration during noclip move."
    },
    {
      "command": "sv_noclipduringpause",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Allow noclip with game paused (for screenshots, etc.)."
    },
    {
      "command": "sv_noclipfriction",
      "type": "convar",
      "default": "4",
      "flags": ["sv", "cl", "a", "nf", "rep"],
      "description": "Friction during noclip move."
    },
    {
      "command": "sv_noclipspeed",
      "type": "convar",
      "default": "1200",
      "flags": ["sv", "cl", "a", "nf", "rep"],
      "description": "Noclip speed."
    },
    {
      "command": "sv_outofammo_indicator",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_packstats",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Show entity packing stats; pass 'clear' to reset counts."
    },
    {
      "command": "sv_parallel_packentities",
      "type": "convar",
      "default": "2",
      "flags": ["release"],
      "description": "1 = threaded on listen servers; 2 = dedicated servers."
    },
    {
      "command": "sv_parallel_sendsnapshot",
      "type": "convar",
      "default": "2",
      "flags": ["release"],
      "description": "0 main thread; 1 async; 2 async; 3 parallel, block next tick; 4 main clients then HLTV."
    },
    {
      "command": "sv_party_mode",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Party!!"
    },
    {
      "command": "sv_password",
      "type": "convar",
      "default": "0",
      "flags": ["prot", "nf", "norecord", "release"],
      "description": "Server password for entry into multiplayer games."
    },
    {
      "command": "sv_pausable",
      "type": "convar",
      "default": "0",
      "flags": ["release"],
      "description": "Is the server pausable."
    },
    {
      "command": "sv_pause_on_console_open",
      "type": "convar",
      "default": "false",
      "flags": ["a"],
      "description": "1 = Pause when opening console. CTRL+~ opens without pause."
    },
    {
      "command": "sv_phys_debug_callback_entities",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cheat"],
      "description": "Print entities that get touch callbacks (once each)."
    },
    {
      "command": "sv_phys_enabled",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cheat"],
      "description": "Enable all physics simulation."
    },
    {
      "command": "sv_phys_sleep_enable",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cheat"],
      "description": "Enable sleeping for dynamic physics bodies."
    },
    {
      "command": "sv_phys_stop_at_collision",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "sv_playerradio_use_allowlist",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "release"],
      "description": "playerradio commands may only use responses from an allow list of commands."
    },
    {
      "command": "sv_prime_accounts_only",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "When this setting is enabled only prime users can connect to this game server."
    },
    {
      "command": "sv_pure",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Show user data."
    },
    {
      "command": "sv_pure_kick_clients",
      "type": "convar",
      "default": "true",
      "flags": ["release"],
      "description": "If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client."
    },
    {
      "command": "sv_pure_trace",
      "type": "convar",
      "default": "0",
      "flags": ["release"],
      "description": "If set to 1, the server will print a message whenever a client is verifying a CRC for a file."
    },
    {
      "command": "sv_pushaway_hostage_force",
      "type": "convar",
      "default": "20000",
      "flags": ["sv", "rep", "cheat"],
      "description": "How hard the hostage is pushed away from physics objects (falls off with inverse square of distance)."
    },
    {
      "command": "sv_pushaway_max_hostage_force",
      "type": "convar",
      "default": "1000",
      "flags": ["sv", "rep", "cheat"],
      "description": "Maximum of how hard the hostage is pushed away from physics objects."
    },
    {
      "command": "sv_pvs_max_distance",
      "type": "convar",
      "default": "0",
      "flags": ["rep", "release"],
      "description": "If set, adds a maximum range to PVS/PAS checks."
    },
    {
      "command": "sv_radio_throttle_window",
      "type": "convar",
      "default": "10",
      "flags": ["sv", "release"],
      "description": "The number of seconds before radio command tokens refresh."
    },
    {
      "command": "sv_ragdoll_lru_debug",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "sv_record_item_time_data",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Turn on recording of per player item time data into the server log."
    },
    {
      "command": "sv_regeneration_force_on",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cheat"],
      "description": "Cheat to test regenerative health systems."
    },
    {
      "command": "sv_region",
      "type": "convar",
      "default": "-1",
      "flags": ["release"],
      "description": "The region of the world to report this server in."
    },
    {
      "command": "sv_rethrow_last_grenade",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Emit the last grenade thrown on the server."
    },
    {
      "command": "sv_search_key",
      "type": "convar",
      "default": "0",
      "flags": ["release"],
      "description": ""
    },
    {
      "command": "sv_search_team_key",
      "type": "convar",
      "default": "public",
      "flags": ["release"],
      "description": "When initiating team search, set this key to match with known opponents team."
    },
    {
      "command": "sv_server_graphic1",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "A 360x60 (<16kb) image file in /csgo/ that will be displayed to spectators."
    },
    {
      "command": "sv_server_graphic2",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "A 220x45 (<16kb) image file in /csgo/ that will be displayed to spectators."
    },
    {
      "command": "sv_server_verify_blood_on_player",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "sv_shield_bash_damage_to_nonplayer",
      "type": "convar",
      "default": "30",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Shield bash damage applied to non-player entities."
    },
    {
      "command": "sv_shield_bash_damage_to_players",
      "type": "convar",
      "default": "90",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Shield bash damage applied to players."
    },
    {
      "command": "sv_shield_explosive_damage_cap",
      "type": "convar",
      "default": "99",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Maximum damage taken from explosive sources when shielded."
    },
    {
      "command": "sv_shield_explosive_damage_crouch_bonus",
      "type": "convar",
      "default": "10",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Additional explosive damage reduction when crouching behind the shield."
    },
    {
      "command": "sv_shield_explosive_damage_mindist",
      "type": "convar",
      "default": "30",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Minimum distance for explosive damage calculations when shielded."
    },
    {
      "command": "sv_shield_explosive_damage_mult",
      "type": "convar",
      "default": "4",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Multiplier applied to explosive damage in shield calculations."
    },
    {
      "command": "sv_shield_explosive_damage_scale",
      "type": "convar",
      "default": "0.5",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Scaling factor for explosive damage when shielded."
    },
    {
      "command": "sv_shield_hitpoints",
      "type": "convar",
      "default": "850",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Shield durability in hit points."
    },
    {
      "command": "sv_show_move_collisions",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Enable this to visualize collisions between player and geometry."
    },
    {
      "command": "sv_show_ragdoll_playernames",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_show_team_equipment_force_on",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Force on if not prohibited."
    },
    {
      "command": "sv_show_team_equipment_prohibit",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Determines whether +cl_show_team_equipment is prohibited."
    },
    {
      "command": "sv_show_teammate_death_notification",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Show chat notification upon teammate death."
    },
    {
      "command": "sv_show_voip_indicator_for_enemies",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "rep", "release"],
      "description": "Show VOIP icon over enemies as well as allies when they are talking."
    },
    {
      "command": "sv_showbullethits",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "1=show hits and near misses, 2=show hits only."
    },
    {
      "command": "sv_showhitregistration",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Display lag_compensated hitboxes. 0=off, 1=server only, 2=client only, 3=both."
    },
    {
      "command": "sv_showimpacts",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Shows client (red) and server (blue) bullet impact point (1=both, 2=client-only, 3=server-only)."
    },
    {
      "command": "sv_showimpacts_penetration",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Shows extra data when bullets penetrate."
    },
    {
      "command": "sv_showimpacts_time",
      "type": "convar",
      "default": "4",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Duration bullet impact indicators remain before disappearing."
    },
    {
      "command": "sv_shutdown",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Sets the server to shutdown when all games have completed."
    },
    {
      "command": "sv_skel_constraints_enable",
      "type": "convar",
      "default": "false",
      "flags": ["rep", "cheat"],
      "description": ""
    },
    {
      "command": "sv_skirmish_id",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Dedicated server skirmish id to run."
    },
    {
      "command": "sv_skyname",
      "type": "convar",
      "default": "sky_urb01",
      "flags": ["sv", "cl", "a", "rep"],
      "description": "Current name of the skybox texture."
    },
    {
      "command": "sv_snapshot_unlimited",
      "type": "convar",
      "default": "false",
      "flags": ["rep", "release"],
      "description": "For debugging, don't throw away old snapshots; may run out of memory."
    },
    {
      "command": "sv_soundscape_printdebuginfo",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Print soundscapes."
    },
    {
      "command": "sv_spawn_afk_bomb_drop_time",
      "type": "convar",
      "default": "15",
      "flags": ["sv", "rep", "release"],
      "description": "Players that have never moved since they spawned will drop the bomb after this amount of time."
    },
    {
      "command": "sv_spec_hear",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Determines who spectators can hear: 0 only spectators; 1 all players; 2 spectated team; 3 self only; 4 nobody."
    },
    {
      "command": "sv_spec_use_tournament_content_standards",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_specaccelerate",
      "type": "convar",
      "default": "5",
      "flags": ["sv", "cl", "a", "nf", "rep"],
      "description": "Spectator acceleration."
    },
    {
      "command": "sv_specnoclip",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "a", "nf", "rep"],
      "description": "Allow spectator noclip."
    },
    {
      "command": "sv_specspeed",
      "type": "convar",
      "default": "1200",
      "flags": ["sv", "cl", "a", "nf", "rep"],
      "description": "Spectator speed."
    },
    {
      "command": "sv_spewmeta",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Spew serializer meta."
    },
    {
      "command": "sv_staminajumpcost",
      "type": "convar",
      "default": "0.08",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Stamina penalty for jumping."
    },
    {
      "command": "sv_staminalandcost",
      "type": "convar",
      "default": "0.05",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Stamina penalty for landing."
    },
    {
      "command": "sv_staminamax",
      "type": "convar",
      "default": "80",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Maximum stamina penalty."
    },
    {
      "command": "sv_staminarecoveryrate",
      "type": "convar",
      "default": "60",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Rate at which stamina recovers (units/sec)."
    },
    {
      "command": "sv_steamgroup",
      "type": "convar",
      "default": "0",
      "flags": ["nf", "release"],
      "description": "The ID of the steam group that this server belongs to."
    },
    {
      "command": "sv_steamgroup_exclusive",
      "type": "convar",
      "default": "false",
      "flags": ["release"],
      "description": "If set, only members of Steam group will be able to join the server when it's empty."
    },
    {
      "command": "sv_stopspeed",
      "type": "convar",
      "default": "80",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Minimum stopping speed when on ground."
    },
    {
      "command": "sv_stressbots",
      "type": "convar",
      "default": "false",
      "flags": ["release"],
      "description": "If set to 1, the server calculates data and fills packets to bots. Used for perf testing."
    },
    {
      "command": "sv_tags",
      "type": "convar",
      "default": "0",
      "flags": ["nf", "release"],
      "description": "Server tags for browser discovery; separate tags with commas."
    },
    {
      "command": "sv_talk_after_dying_time",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Seconds a player can continue talking after dying as if still alive."
    },
    {
      "command": "sv_talk_enemy_dead",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Dead players can hear all dead enemy communication (voice, chat)."
    },
    {
      "command": "sv_talk_enemy_living",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Living players can hear all living enemy communication (voice, chat)."
    },
    {
      "command": "sv_teamid_overhead",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Shows teamID over player's heads. 0=off, 1=on."
    },
    {
      "command": "sv_teamid_overhead_always_prohibit",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": "Determines whether cl_teamid_overhead_always is prohibited."
    },
    {
      "command": "sv_teamid_overhead_maxdist",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If >0, server will override cl_teamid_overhead_maxdist."
    },
    {
      "command": "sv_teamid_overhead_maxdist_spec",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If >0, server will override cl_teamid_overhead_maxdist_spec."
    },
    {
      "command": "sv_timebetweenducks",
      "type": "convar",
      "default": "0.4",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Minimum time before recognizing consecutive duck key."
    },
    {
      "command": "sv_turning_inaccuracy_angle_min",
      "type": "convar",
      "default": "4",
      "flags": ["sv", "cl", "rep", "cheat", "release"],
      "description": ""
    },
    {
      "command": "sv_turning_inaccuracy_decay",
      "type": "convar",
      "default": "0.8",
      "flags": ["sv", "cl", "rep", "cheat", "release"],
      "description": ""
    },
    {
      "command": "sv_turning_inaccuracy_enabled",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "cheat", "release"],
      "description": ""
    },
    {
      "command": "sv_unlockedchapters",
      "type": "convar",
      "default": "1",
      "flags": ["a"],
      "description": "Highest unlocked game chapter."
    },
    {
      "command": "sv_update_animgraph_movement_in_finish",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": "Whether we should update animgraph movement in FinishMove."
    },
    {
      "command": "sv_usercmd_custom_random_seed",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Populate an additional random seed independent of the client."
    },
    {
      "command": "sv_usercmd_queue_spew_threshold",
      "type": "convar",
      "default": "10",
      "flags": ["sv", "release"],
      "description": "Spew warning if command queue has grown above this many backlogged commands."
    },
    {
      "command": "sv_versus_screen_scene_id",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": "Determines which scene is used for the versus screen."
    },
    {
      "command": "sv_visiblemaxplayers",
      "type": "convar",
      "default": "-1",
      "flags": ["release"],
      "description": "Overrides the max players reported to prospective clients."
    },
    {
      "command": "sv_voice_proximity",
      "type": "convar",
      "default": "-1",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_voicecodec",
      "type": "convar",
      "default": "vaudio_speex",
      "flags": ["release"],
      "description": "Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension."
    },
    {
      "command": "sv_voiceenable",
      "type": "convar",
      "default": "true",
      "flags": ["a", "nf", "release"],
      "description": ""
    },
    {
      "command": "sv_vote_allow_in_warmup",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Allow voting during warmup?"
    },
    {
      "command": "sv_vote_allow_spectators",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Allow spectators to initiate votes?"
    },
    {
      "command": "sv_vote_command_delay",
      "type": "convar",
      "default": "2",
      "flags": ["sv", "release"],
      "description": "How long after a vote passes until the action happens."
    },
    {
      "command": "sv_vote_count_spectator_votes",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Allow spectators to vote on issues?"
    },
    {
      "command": "sv_vote_creation_timer",
      "type": "convar",
      "default": "120",
      "flags": ["sv", "release"],
      "description": "How often someone can individually call a vote."
    },
    {
      "command": "sv_vote_disallow_kick_on_match_point",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Disallow vote kicking on the match point round."
    },
    {
      "command": "sv_vote_failure_timer",
      "type": "convar",
      "default": "300",
      "flags": ["sv", "release"],
      "description": "A vote that fails cannot be re-submitted for this long."
    },
    {
      "command": "sv_vote_issue_kick_allowed",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "nf", "rep", "release"],
      "description": "Can people hold votes to kick players from the server?"
    },
    {
      "command": "sv_vote_issue_loadbackup_allowed",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "nf", "rep", "release"],
      "description": "Can people hold votes to load match from backup?"
    },
    {
      "command": "sv_vote_issue_loadbackup_spec_authoritative",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "When enabled, admins load match from backup without players vote."
    },
    {
      "command": "sv_vote_issue_loadbackup_spec_only",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "nf", "rep", "release"],
      "description": "When enabled, only admins load match from backup."
    },
    {
      "command": "sv_vote_issue_loadbackup_spec_safe",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "release"],
      "description": "When enabled, admins load match from backup in safe time of the round only."
    },
    {
      "command": "sv_vote_issue_pause_match_spec_only",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "nf", "rep", "release"],
      "description": "When enabled, only admins start technical pause."
    },
    {
      "command": "sv_vote_issue_restart_game_allowed",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Can people hold votes to restart the game?"
    },
    {
      "command": "sv_vote_kick_ban_duration",
      "type": "convar",
      "default": "15",
      "flags": ["sv", "nf", "rep", "release"],
      "description": "How long should a kick vote ban someone from the server? (in minutes)"
    },
    {
      "command": "sv_vote_quorum_ratio",
      "type": "convar",
      "default": "0.501",
      "flags": ["sv", "release"],
      "description": "The minimum ratio of players needed to vote on an issue to resolve it."
    },
    {
      "command": "sv_vote_timer_duration",
      "type": "convar",
      "default": "15",
      "flags": ["sv", "release"],
      "description": "How long to allow voting on an issue."
    },
    {
      "command": "sv_vote_to_changelevel_before_match_point",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "rep", "release"],
      "description": "Restricts vote to change level to rounds prior to match point (default 0, vote is never disallowed)."
    },
    {
      "command": "sv_warmup_to_freezetime_delay",
      "type": "convar",
      "default": "4",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Delay between end of warmup and start of match."
    },
    {
      "command": "sv_watchtransmit",
      "type": "convar",
      "default": "-2",
      "flags": ["sv", "release"],
      "description": "Watch NetworkStateChanged info for this entity index."
    },
    {
      "command": "sv_water_slow_amount",
      "type": "convar",
      "default": "0.9",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_wateraccelerate",
      "type": "convar",
      "default": "10",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_waterfriction",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "nf", "rep", "release"],
      "description": ""
    },
    {
      "command": "sv_weapon_require_use_grace_period",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "release"],
      "description": ""
    },
    {
      "command": "sv_weapon_swap_difficulty_near_hi_pri",
      "type": "convar",
      "default": "2",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "0 = Cone searches easily reach past high priority items to swap weapons. 1 = Cone searches are narrowed and require that the weapon is strictly closer. 2 = cone searches are disabled near high priority items."
    },
    {
      "command": "sv_workshop_allow_other_maps",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "release"],
      "description": "When hosting a workshop collection, users can play other workshop map on this server when it is empty and then mapcycle into this server collection."
    },
    {
      "command": "sys_info",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Print system information to the console."
    },
    {
      "command": "sys_minidumpspewlines",
      "type": "convar",
      "default": "2000",
      "flags": ["release"],
      "description": "Lines of crash dump console spew to keep."
    },
    {
      "command": "teammenu",
      "type": "command",
      "default": "",
      "flags": ["cl", "server_can_execute"],
      "description": "Show team selection window."
    },
    {
      "command": "telemetry_message",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Place a message in the telemetry timeline."
    },
    {
      "command": "telemetry_toggle_timespan",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Starts/stops a timespan with an ever increasing name."
    },
    {
      "command": "Test_CreateEntity",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "test_dispatcheffect",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Test a clientside dispatch effect. Usage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale> Defaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0>"
    },
    {
      "command": "Test_EHandle",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "test_entity_blocker",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "Test command that drops an entity blocker out in front of the player."
    },
    {
      "command": "Test_ExitProcess",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Test_ExitProcess <exit code> - immediately kill the process."
    },
    {
      "command": "test_list_entities",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": "test-list entities"
    },
    {
      "command": "Test_RandomPlayerPosition",
      "type": "command",
      "default": "",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "think_limit",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Maximum think time in milliseconds, warning is printed if this is exceeded."
    },
    {
      "command": "thirdperson",
      "type": "command",
      "default": "",
      "flags": ["cl", "cheat", "execute_per_tick"],
      "description": "Switch to thirdperson camera."
    },
    {
      "command": "thirdperson_lockcamera",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "thirdperson_mayamode",
      "type": "command",
      "default": "",
      "flags": ["cl", "cheat"],
      "description": "Switch to thirdperson Maya-like camera controls."
    },
    {
      "command": "timedemo",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Play a demo and report performance info."
    },
    {
      "command": "timedemoquit",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Play a demo, report performance info, and then exit."
    },
    {
      "command": "timeleft",
      "type": "command",
      "default": "",
      "flags": ["sv"],
      "description": "Prints the time remaining in the match."
    },
    {
      "command": "timeout_ct_start",
      "type": "command",
      "default": "",
      "flags": ["sv", "release"],
      "description": ""
    },
    {
      "command": "timeout_terrorist_start",
      "type": "command",
      "default": "",
      "flags": ["sv", "release"],
      "description": ""
    },
    {
      "command": "toggle",
      "type": "command",
      "default": "",
      "flags": ["norecord", "release"],
      "description": "Toggles specified convar value on and off."
    },
    {
      "command": "toggleconsole",
      "type": "command",
      "default": "",
      "flags": ["norecord", "release"],
      "description": "Show/hide the console."
    },
    {
      "command": "trusted_launch",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a"],
      "description": "Trusted launch status."
    },
    {
      "command": "tv_advertise_watchable",
      "type": "convar",
      "default": "false",
      "flags": ["prot", "nf", "norecord", "release"],
      "description": "GOTV advertises the match as watchable via game UI, clients watching via UI will not need to type password."
    },
    {
      "command": "tv_allow_autorecording_index",
      "type": "convar",
      "default": "-1",
      "flags": ["sv", "release"],
      "description": "When >=0 restricts autorecording only to the specified TV index."
    },
    {
      "command": "tv_allow_camera_man_steamid",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": "Allows tournament production cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the camera man."
    },
    {
      "command": "tv_allow_camera_man_steamid2",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "release"],
      "description": "Allows tournament production tv cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the tv camera man."
    },
    {
      "command": "tv_allow_static_shots",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "release"],
      "description": "Auto director uses fixed level cameras for shots."
    },
    {
      "command": "tv_autorecord",
      "type": "convar",
      "default": "false",
      "flags": ["release"],
      "description": "Automatically records all games as SourceTV demos."
    },
    {
      "command": "tv_autoretry",
      "type": "convar",
      "default": "true",
      "flags": ["release"],
      "description": "Relay proxies retry connection after network timeout."
    },
    {
      "command": "tv_broadcast",
      "type": "convar",
      "default": "false",
      "flags": ["release"],
      "description": "Automatically broadcasts all games as GOTV demos through Steam."
    },
    {
      "command": "tv_broadcast1",
      "type": "convar",
      "default": "false",
      "flags": ["release"],
      "description": "Automatically broadcasts all games as GOTV[1] demos through Steam."
    },
    {
      "command": "tv_broadcast_keyframe_interval",
      "type": "convar",
      "default": "3",
      "flags": ["release"],
      "description": "The frequency, in seconds, of sending keyframes and delta fragments to the broadcast relay server."
    },
    {
      "command": "tv_broadcast_keyframe_interval1",
      "type": "convar",
      "default": "3",
      "flags": ["release"],
      "description": "The frequency, in seconds, of sending keyframes and delta fragments to the broadcast1 relay server."
    },
    {
      "command": "tv_broadcast_max_requests",
      "type": "convar",
      "default": "20",
      "flags": ["release"],
      "description": "Max number of broadcast http requests in flight; new requests are dropped when exceeded."
    },
    {
      "command": "tv_broadcast_max_requests1",
      "type": "convar",
      "default": "20",
      "flags": ["release"],
      "description": "Max number of broadcast1 http requests in flight; new requests are dropped when exceeded."
    },
    {
      "command": "tv_broadcast_startup_resend_interval",
      "type": "convar",
      "default": "10",
      "flags": ["release"],
      "description": "Interval of re-sending startup data to the broadcast relay server."
    },
    {
      "command": "tv_broadcast_status",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Print out broadcast status."
    },
    {
      "command": "tv_broadcast_url",
      "type": "convar",
      "default": "http //localhost 8080 :",
      "flags": ["release"],
      "description": "URL of the broadcast relay."
    },
    {
      "command": "tv_broadcast_url1",
      "type": "convar",
      "default": "http //localhost 8080 :",
      "flags": ["release"],
      "description": "URL of the broadcast relay1."
    },
    {
      "command": "tv_chatgroupsize",
      "type": "convar",
      "default": "0",
      "flags": ["release"],
      "description": "Set the default chat group size."
    },
    {
      "command": "tv_chattimelimit",
      "type": "convar",
      "default": "0.2",
      "flags": ["release"],
      "description": "Limits spectators to chat only every n seconds."
    },
    {
      "command": "tv_clients",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Shows list of connected SourceTV clients."
    },
    {
      "command": "tv_debug",
      "type": "convar",
      "default": "0",
      "flags": ["release"],
      "description": "SourceTV debug info."
    },
    {
      "command": "tv_delay",
      "type": "convar",
      "default": "105",
      "flags": ["sv", "release"],
      "description": "SourceTV broadcast delay in seconds."
    },
    {
      "command": "tv_delaymapchange",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "release"],
      "description": "Delays map change until broadcast is complete."
    },
    {
      "command": "tv_deltacache",
      "type": "convar",
      "default": "2",
      "flags": ["release"],
      "description": "Enable delta entity bit stream cache."
    },
    {
      "command": "tv_dispatchmode",
      "type": "convar",
      "default": "1",
      "flags": ["release"],
      "description": "Dispatch clients to relay proxies: 0=never, 1=if appropriate, 2=always."
    },
    {
      "command": "tv_enable",
      "type": "convar",
      "default": "false",
      "flags": ["nf", "release"],
      "description": "Activates SourceTV on server."
    },
    {
      "command": "tv_enable1",
      "type": "convar",
      "default": "false",
      "flags": ["nf", "release"],
      "description": "Activates SourceTV[1] on server."
    },
    {
      "command": "tv_enable_delta_frames",
      "type": "convar",
      "default": "true",
      "flags": ["release"],
      "description": "Use delta frames for storage of intermediate frames."
    },
    {
      "command": "tv_enable_dynamic",
      "type": "convar",
      "default": "false",
      "flags": ["nf", "release"],
      "description": "When enabled, changes in tv_enable convars cause immediate startup or shutdown of hltv server."
    },
    {
      "command": "tv_listen_voice_indices",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "user"],
      "description": "Bitfield of playerslots to listen to voice messages from when connected to SourceTV."
    },
    {
      "command": "tv_listen_voice_indices_h",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "user"],
      "description": "High 32 bits of bitfield of playerslots to listen to voice messages from when connected to SourceTV."
    },
    {
      "command": "tv_maxclients",
      "type": "convar",
      "default": "128",
      "flags": ["release"],
      "description": "Maximum client number on SourceTV server."
    },
    {
      "command": "tv_maxclients_relayreserved",
      "type": "convar",
      "default": "0",
      "flags": ["release"],
      "description": "This number of relay client connections are reserved for SourceTV relays."
    },
    {
      "command": "tv_maxrate",
      "type": "convar",
      "default": "0",
      "flags": ["release"],
      "description": "Max SourceTV spectator bandwidth rate allowed, 0 == unlimited."
    },
    {
      "command": "tv_mem",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "HLTV memory statistics. Use with 'ent 10' or 'top 8' or 'class' CWorld."
    },
    {
      "command": "tv_name",
      "type": "convar",
      "default": "SourceTV",
      "flags": ["release"],
      "description": "SourceTV host name."
    },
    {
      "command": "tv_nochat",
      "type": "convar",
      "default": "false",
      "flags": ["a", "user"],
      "description": "Don't receive chat messages from other SourceTV spectators."
    },
    {
      "command": "tv_overridemaster",
      "type": "convar",
      "default": "false",
      "flags": ["release"],
      "description": "Overrides the SourceTV master root address."
    },
    {
      "command": "tv_password",
      "type": "convar",
      "default": "0",
      "flags": ["prot", "nf", "norecord", "release"],
      "description": "SourceTV password for all clients."
    },
    {
      "command": "tv_playcast_delay_prediction",
      "type": "convar",
      "default": "true",
      "flags": ["release"],
      "description": ""
    },
    {
      "command": "tv_playcast_delay_resync",
      "type": "convar",
      "default": "0",
      "flags": ["release"],
      "description": "Seconds to wait before actually re-syncing the stream after failure."
    },
    {
      "command": "tv_playcast_retry_timeout",
      "type": "convar",
      "default": "12",
      "flags": ["release"],
      "description": "How long playcast should retry fragment retrieval before resorting to resync."
    },
    {
      "command": "tv_port",
      "type": "convar",
      "default": "27020",
      "flags": ["release"],
      "description": "Host SourceTV[0] port."
    },
    {
      "command": "tv_port1",
      "type": "convar",
      "default": "27021",
      "flags": ["release"],
      "description": "Host SourceTV[1] port."
    },
    {
      "command": "tv_record",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Starts SourceTV demo recording."
    },
    {
      "command": "tv_record_immediate",
      "type": "convar",
      "default": "1",
      "flags": ["release"],
      "description": "tv_record starting the moment tv_record was executed, not tv_delay earlier."
    },
    {
      "command": "tv_relay",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Connect to SourceTV server and relay broadcast."
    },
    {
      "command": "tv_relaypassword",
      "type": "convar",
      "default": "0",
      "flags": ["prot", "nf", "norecord", "release"],
      "description": "SourceTV password for relay proxies."
    },
    {
      "command": "tv_relayradio",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "release"],
      "description": "Relay team radio commands to TV: 0=off, 1=on."
    },
    {
      "command": "tv_relayvoice",
      "type": "convar",
      "default": "true",
      "flags": ["release"],
      "description": "Relay voice data: 0=off, 1=on."
    },
    {
      "command": "tv_retry",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Reconnects the SourceTV relay proxy."
    },
    {
      "command": "tv_show_allchat",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "release"],
      "description": ""
    },
    {
      "command": "tv_spectator_port_offset",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "tv_status",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Show SourceTV server status."
    },
    {
      "command": "tv_stop",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Stops the SourceTV broadcast."
    },
    {
      "command": "tv_stoprecord",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Stops SourceTV demo recording."
    },
    {
      "command": "tv_time_remaining",
      "type": "command",
      "default": "",
      "flags": ["sv", "release"],
      "description": "Print remaining tv broadcast time."
    },
    {
      "command": "tv_timeout",
      "type": "convar",
      "default": "20",
      "flags": ["release"],
      "description": "SourceTV connection timeout in seconds."
    },
    {
      "command": "tv_title",
      "type": "convar",
      "default": "SourceTV",
      "flags": ["release"],
      "description": "Set title for SourceTV spectator UI."
    },
    {
      "command": "tv_transmitall",
      "type": "convar",
      "default": "false",
      "flags": ["rep", "release"],
      "description": "Transmit all entities (not only director view)."
    },

    {
      "command": "ui_deepstats_radio_heat_figurine",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_deepstats_radio_heat_tab",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_deepstats_radio_heat_team",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_deepstats_toplevel_mode",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_inventorysettings_recently_acknowledged",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_lobby_draft_enabled",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "release"],
      "description": ""
    },
    {
      "command": "ui_mainmenu_bkgnd_movie_1016BB11",
      "type": "convar",
      "default": "de_inferno",
      "flags": ["cl", "a", "release"],
      "description": "Main menu background movie"
    },
    {
      "command": "ui_nearbylobbies_filter3",
      "type": "convar",
      "default": "competitive",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_news_last_read_link",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_party_msg_sound_enabled",
      "type": "convar",
      "default": "true",
      "flags": ["cl", "release"],
      "description": "When enabled, lobby messages will play a short sound"
    },
    {
      "command": "ui_playsettings_custom_preset",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_directchallengekey",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_listen_casual",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_listen_competitive",
      "type": "convar",
      "default": "16",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_listen_cooperative",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_listen_deathmatch",
      "type": "convar",
      "default": "32",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_listen_scrimcomp2v2",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_listen_skirmish",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_listen_survival",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_official_casual",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_official_competitive",
      "type": "convar",
      "default": "16",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_official_cooperative",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_official_deathmatch",
      "type": "convar",
      "default": "32",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_official_scrimcomp2v2",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_official_skirmish",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_flags_official_survival",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_maps_listen_casual",
      "type": "convar",
      "default": "mg_de_nuke",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_maps_listen_competitive",
      "type": "convar",
      "default": "mg_de_dust2",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_maps_listen_deathmatch",
      "type": "convar",
      "default": "mg_de_dust2",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_maps_listen_scrimcomp2v2",
      "type": "convar",
      "default": "mg_de_inferno",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_maps_listen_skirmish",
      "type": "convar",
      "default": "mg_skirmish_armsrace",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_maps_official_casual",
      "type": "convar",
      "default": "mg_casualdelta",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_maps_official_deathmatch",
      "type": "convar",
      "default": "mg_dust247",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_maps_workshop",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_mode_listen",
      "type": "convar",
      "default": "casual",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_mode_official_v20",
      "type": "convar",
      "default": "casual",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_survival_solo",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_playsettings_warmup_map_name",
      "type": "convar",
      "default": "de_mirage",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_popup_weaponupdate_version",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_setting_advertiseforhire_auto",
      "type": "convar",
      "default": "1",
      "flags": ["cl", "a", "release"],
      "description": "Whether users will automatically advertise for invites (0: off; 1: last; 2: auto)"
    },
    {
      "command": "ui_setting_advertiseforhire_auto_last",
      "type": "convar",
      "default": "/competitive",
      "flags": ["cl", "a", "release"],
      "description": "Which game mode users last used to advertise for invites"
    },
    {
      "command": "ui_show_subscription_alert",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_show_unlock_competitive_alert",
      "type": "convar",
      "default": "1",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_steam_overlay_notification_position",
      "type": "convar",
      "default": "topright",
      "flags": ["cl", "a"],
      "description": "Steam overlay notification position"
    },
    {
      "command": "ui_steam_overlay_notification_position_horz",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a"],
      "description": "Steam overlay notification position horizontal offset"
    },
    {
      "command": "ui_steam_overlay_notification_position_vert",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a"],
      "description": "Steam overlay notification position vertical offset"
    },
    {
      "command": "ui_vanitysetting_loadoutslot_ct",
      "type": "convar",
      "default": "secondary0",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_vanitysetting_loadoutslot_t",
      "type": "convar",
      "default": "secondary3",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "ui_vanitysetting_team",
      "type": "convar",
      "default": "ct",
      "flags": ["cl", "a", "release"],
      "description": ""
    },
    {
      "command": "unbind",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Unbind a key."
    },
    {
      "command": "unbindall",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Unbind all keys."
    },
    {
      "command": "unpause",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Clear the pause state of the server."
    },
    {
      "command": "vconsole_rcon_server_details",
      "type": "convar",
      "default": "0",
      "flags": ["norecord", "release", "server_cant_query"],
      "description": "When non-empty allows for easy vconsole connection to the dedicated server."
    },
    {
      "command": "view_punch_decay",
      "type": "convar",
      "default": "18",
      "flags": ["sv", "cl", "rep", "cheat", "release"],
      "description": "Decay factor exponent for view punch"
    },
    {
      "command": "viewmodel_always_on",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "cheat"],
      "description": "Force the view model to draw, even when in 3rd person view"
    },
    {
      "command": "viewmodel_fov",
      "type": "convar",
      "default": "60",
      "flags": ["cl", "a"],
      "description": "Viewmodel FOV"
    },
    {
      "command": "viewmodel_offset_randomize",
      "type": "convar",
      "default": "false",
      "flags": ["cl", "cheat"],
      "description": "Randomly change viewmodel offsets to visualize range"
    },
    {
      "command": "viewmodel_offset_x",
      "type": "convar",
      "default": "1",
      "flags": ["cl", "a"],
      "description": "viewmodel_offset_x"
    },
    {
      "command": "viewmodel_offset_y",
      "type": "convar",
      "default": "1",
      "flags": ["cl", "a"],
      "description": "viewmodel_offset_y"
    },
    {
      "command": "viewmodel_offset_z",
      "type": "convar",
      "default": "-1",
      "flags": ["cl", "a"],
      "description": "viewmodel_offset_z"
    },
    {
      "command": "viewmodel_presetpos",
      "type": "convar",
      "default": "1",
      "flags": ["cl", "a"],
      "description": "1:'Desktop', 2:'Couch', 3:'Classic'"
    },
    {
      "command": "violence_ablood",
      "type": "convar",
      "default": "true",
      "flags": ["a"],
      "description": "Draw alien blood"
    },
    {
      "command": "violence_agibs",
      "type": "convar",
      "default": "true",
      "flags": ["a"],
      "description": "Show alien gib entities"
    },
    {
      "command": "violence_hblood",
      "type": "convar",
      "default": "true",
      "flags": ["a"],
      "description": "Draw human blood"
    },
    {
      "command": "violence_hgibs",
      "type": "convar",
      "default": "true",
      "flags": ["a"],
      "description": "Show human gib entities"
    },
    {
      "command": "vis_force",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "vismon_poll_frequency",
      "type": "convar",
      "default": "0.5",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "vismon_trace_limit",
      "type": "convar",
      "default": "12",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "vmix_input",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Set an input mix value"
    },
    {
      "command": "vmix_output",
      "type": "command",
      "default": "",
      "flags": ["cheat"],
      "description": "Dump main graph control output values"
    },
    {
      "command": "voice_always_sample_mic",
      "type": "convar",
      "default": "false",
      "flags": ["a"],
      "description": "For systems experiencing a hang/stall when using voice chat."
    },
    {
      "command": "voice_loopback",
      "type": "convar",
      "default": "false",
      "flags": ["user"],
      "description": ""
    },
    {
      "command": "voice_modenable",
      "type": "convar",
      "default": "true",
      "flags": ["cl", "a", "release", "clientcmd_can_execute"],
      "description": "Enable/disable voice in this mod."
    },
    {
      "command": "voice_modenable_toggle",
      "type": "command",
      "default": "",
      "flags": ["cl", "release"],
      "description": "Toggle the voice_modenable convar."
    },
    {
      "command": "voice_player_speaking_delay_threshold",
      "type": "convar",
      "default": "0.5",
      "flags": ["sv", "cheat"],
      "description": ""
    },
    {
      "command": "voice_test_log_send",
      "type": "convar",
      "default": "false",
      "flags": ["release"],
      "description": ""
    },
    {
      "command": "voice_threshold",
      "type": "convar",
      "default": "4000",
      "flags": ["cl", "a"],
      "description": ""
    },
    {
      "command": "voice_vox",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "a", "per_user"],
      "description": ""
    },
    {
      "command": "volume",
      "type": "convar",
      "default": "0.134001",
      "flags": ["a"],
      "description": "Sound volume"
    },
    {
      "command": "volume_fog_clipmap_update",
      "type": "convar",
      "default": "1",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "volume_fog_clipmaps_enabled",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "volume_fog_disable",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "volume_fog_dither_scale",
      "type": "convar",
      "default": "3",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "volume_fog_enable_jitter",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "volume_fog_enable_stereo",
      "type": "convar",
      "default": "true",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "volume_fog_enlarge_frusta",
      "type": "convar",
      "default": "2",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "volume_fog_show_volumes",
      "type": "convar",
      "default": "false",
      "flags": ["cheat"],
      "description": ""
    },
    {
      "command": "vphys2_friction_factor",
      "type": "convar",
      "default": "1",
      "flags": ["cheat"],
      "description": "Change global friction factor"
    },
    {
      "command": "vphys2_restitution_factor",
      "type": "convar",
      "default": "1",
      "flags": ["cheat"],
      "description": "Change global restitution factor"
    },
    {
      "command": "weapon_accuracy_forcespread",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Force spread to the specified value."
    },
    {
      "command": "weapon_accuracy_nospread",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Disable weapon inaccuracy spread"
    },
    {
      "command": "weapon_accuracy_reset_on_deploy",
      "type": "convar",
      "default": "false",
      "flags": ["sv", "cl", "rep", "cheat", "release"],
      "description": "On deploy, forcibly reset weapon accuracy to zero."
    },
    {
      "command": "weapon_accuracy_shotgun_spread_patterns",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "rep", "release"],
      "description": ""
    },
    {
      "command": "weapon_air_spread_scale",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "Scale factor for jumping inaccuracy, set to 0 to make jumping accuracy equal to standing"
    },
    {
      "command": "weapon_auto_cleanup_time",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If set to non-zero, weapons will delete themselves after the specified time (in seconds) if no players are near."
    },
    {
      "command": "weapon_debug_spread_gap",
      "type": "convar",
      "default": "0.67",
      "flags": ["cl", "cheat", "per_user"],
      "description": ""
    },
    {
      "command": "weapon_debug_spread_show",
      "type": "convar",
      "default": "0",
      "flags": ["cl", "cheat", "per_user"],
      "description": "Enables display of weapon accuracy; 1: show accuracy box, 3: show accuracy with dynamic crosshair"
    },
    {
      "command": "weapon_max_before_cleanup",
      "type": "convar",
      "default": "0",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "If set to non-zero, will remove the oldest dropped weapon to maintain the specified number of dropped weapons in the world."
    },
    {
      "command": "weapon_near_empty_sound",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "rep", "cheat"],
      "description": ""
    },
    {
      "command": "weapon_reticle_knife_show",
      "type": "convar",
      "default": "true",
      "flags": ["sv", "cl", "rep", "release"],
      "description": "When enabled will show knife reticle on clients. Used for game modes requiring target id display when holding a knife."
    },
    {
      "command": "weapon_sound_falloff_multiplier",
      "type": "convar",
      "default": "1",
      "flags": ["sv", "cl", "rep", "cheat", "release"],
      "description": "Scaling for falloff of weapon firing sounds"
    },
    {
      "command": "writekeybindings",
      "type": "command",
      "default": "",
      "flags": ["release"],
      "description": "Saves current key bindings to disk."
    },
    {
      "command": "zoom_sensitivity_ratio",
      "type": "convar",
      "default": "1",
      "flags": ["cl", "a", "per_user"],
      "description": "Additional mouse sensitivity scale factor applied when FOV is zoomed in."
    }
  ]
}
